%TITLE 'T E X T   -- error message text'
!<BLF/REQUIRE 'RMSBLF.REQ'>
MODULE text (IDENT = '2.0'
		) =
BEGIN

GLOBAL BIND
    textv = 2^24 + 0^18 + 400;			! Edit date: 22-Apr-83

!+
!
!
!    AUTHOR:	S. BLOUNT
!
!
!	COPYRIGHT (C) DIGITAL EQUIPMENT CORPORATION 1977, 1986.
!	ALL RIGHTS RESERVED.
!
!	THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY  BE  USED  AND
!	COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE AND WITH
!	THE INCLUSION OF THE ABOVE COPYRIGHT NOTICE.   THIS  SOFTWARE  OR
!	ANY  OTHER  COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE
!	AVAILABLE TO ANY OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE
!	SOFTWARE IS HEREBY TRANSFERRED.
!
!	THE INFORMATION IN THIS SOFTWARE IS  SUBJECT  TO  CHANGE  WITHOUT
!	NOTICE  AND  SHOULD  NOT  BE CONSTRUED AS A COMMITMENT BY DIGITAL
!	EQUIPMENT CORPORATION.
!
!	DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF
!	ITS SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.
!
!
!
!
!    THIS MODULE CONTAINS ALL ERROR MESSAGE TEXT WHICH
!    IS GENERATED FROM WITHIN RMS-20.  THESE MESSAGES
!    OCCUR IN THE FOLLOWING CIRCUMSTANCES:
!
!    1 )  FILE CONSISTENCY PROBLEM
!    2 )  INTERNAL ERROR ( BUG )
!
!    NO USER ERROR MESSAGES ARE GENERATED WITHIN RMS-20.
!
!
!
!
!
!
!
!    REVISION HISTORY:
!
!    EDIT	WHO	DATE		PURPOSE
!    ====	===	====		=======
!
!    1	JK	20-JUL-76	ADD ERROR CODE TO RMSMSG MACRO
!				NOTE: RMSERR HAS BEEN MODIFIED SO THAT
!				'CRASH'; AND 'FPROBLEM' KNOW THAT
!				THE FIRST WORD OF THEIR ARGUMENT
!				CONTAINS THE ERROR CODE AND THE TEXT
!				OF THE MESSAGE RESIDES IN THE 2ND
!				THROUGH NTH WORDS.
!    2	JK	22-JUL-76		ADD MSGCAP
!    3	SB	30-JUL-76	CHANGE MOST ERUDF TO ER$BUG
!    4	SB	12-AUG-76	ADD MSGLEVEL,MSGNOSPACE,...
!    5	SB	13-AUG-76	ADD IDSRANOUT,...
!    6	SB	15-AUG-76	ADD MSGPTR (BAD PTR)
!    7	JK	25-AUG-76	ADD MSGCCR (CAN'T CREATE RRV RECORD)
!    8	SB	1-SEP-76	ADD MSGNORRV (NO RRV RECORD FOUND FOR DATA)
!
!    9	SB	8-SEP-76	ADD MSGCUINDEX (MAY NOT NEED THIS LATER)
!
!    10	SB	9-27-76		ADD MSGNOCALL
!    11	SB	4-OCT-76	ADD MSGRRV
!    12	SB	7-OCT-76	DELETE GBASCII
!    13	SB	25-OCT-76	ADD MSGBNA
!    14	SB	1-NOV-76	TAKE OUT ALL UDF ERRORS
!    15	SB	29-NOV-76	ADD MSGBKT
!
!    *************************************************
!    *						*
!    *		NEW REVISION HISTORY		*
!    *						*
!    *************************************************
!
!    PRODUCT	MODULE	 SPR
!    EDIT	 EDIT	 QAR		DESCRIPTION
!    ======	======	=====		===========
!
!	**  Begin RMS v2 Development **
!
!	400	400	xxxxx	    Clean up BLISS code (RL,22-Apr-83)
!
!    ***** END OF REVISION HISTORY *****
!
!
!
!
!
!-

REQUIRE 'RMSREQ';

!+
!    MACRO USED TO GENERATE AN ERROR MESSAGE
!-

MACRO
    rmsmsg (name, CODE, text) =
		BIND dum = PLIT (  CODE, text ):  VECTOR;
		GLOBAL BIND name = dum;
		UNDECLARE dum %;

macro
    $$msg [] = %asciz %string (%remaining) %;


!+
!    RMS-20 ERROR MESSAGES
!-

!+
!			RMS SYMBOL	USER ERROR	MESSAGE TEXT
!			=== ======	==== =====	======= ====
!
!-
rmsmsg (msgbkt, er$bug, $$msg ('Current bucket is empty'));
rmsmsg (msgbna, er$bug, $$msg ('Buffer not allocated'));
rmsmsg (msgbsp, er$bug, $$msg ('Core block spans pages'));
rmsmsg (msgbstatus, er$bug, $$msg ('Bad status returned by a routine'));
rmsmsg (msgbusy, er$bug, $$msg ('Busy status was returned unexpectedly'));
rmsmsg (msgcantgethere, er$bug, $$msg ('RMS logic error'));
rmsmsg (msgccr, er$bug, $$msg ('Can''t create RRV; no room in bucket'));
rmsmsg (msgcore, er$bug, $$msg ('GMEM can''t get core'));
rmsmsg (msgcount, er$bug, $$msg ('Invalid count value detected '));
rmsmsg (msgdup, er$bug, $$msg ('Duplicate primary key found'));
rmsmsg (msgeop, er$bug, $$msg ('End-of-page marker found'));
rmsmsg (msgfailure, er$bug, $$msg ('Last routine returned a false value'));
rmsmsg (msgflags, er$bug, $$msg ('Flag values are bad'));
rmsmsg (msgfunction, er$bug, $$msg ('Invalid function code detected'));
rmsmsg (msggm1, er$bug, $$msg ('Returned value is bad'));
rmsmsg (msginput, er$bug, $$msg ('Incorrect input parameters detected '));
rmsmsg (msgjsys, er$bug, $$msg ('Invalid JSYS code detected'));
rmsmsg (msgkdb, er$bug, $$msg ('KDB fields got messed up'));
rmsmsg (msgkey, er$bug, $$msg ('Key addressing not detected'));
rmsmsg (msgksz, er$bug, $$msg ('Bad key size parameter found'));
rmsmsg (msglevel, er$bug, $$msg ('Level discrepancy found during execution.'));
rmsmsg (msglink, er$bug, $$msg ('Bad link found in internal block'));
rmsmsg (msgloop, er$bug, $$msg ('Loop iteration counter bad'));
rmsmsg (msgmovestring, er$bug, $$msg ('MOVE-STRING failed'));
rmsmsg (msgnlw, er$bug, $$msg ('Null file window detected'));
rmsmsg (msgnocall, er$bug, $$msg ('Routine should not have been called.'));
rmsmsg (msgnospace, er$bug, $$msg ('No space found for index records'));
rmsmsg (msgpage, er$bug, $$msg ('Invalid page number detected '));
rmsmsg (msgpm2, er$bug, $$msg ('BIGHOL is non-zero'));
rmsmsg (msgpm3, er$bug, $$msg ('Bad value found'));
rmsmsg (msgpna, er$bug, $$msg ('Free page has not been allocated'));
rmsmsg (msgptr, er$bug, $$msg ('Pointer variable has bad value'));
rmsmsg (msgrchanged, er$bug, $$msg ('Root bucket has changed'));
rmsmsg (msgrfa, er$bug, $$msg ('Invalid RFA value detected '));
rmsmsg (msgrrv, er$bug, $$msg ('RRV in secondary data record bucket'));
rmsmsg (msgsplit, er$bug, $$msg ('Bucket split parameters are bad'));
END

ELUDOM
