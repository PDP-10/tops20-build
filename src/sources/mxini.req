! MXINI - Network Management Initialization parameters

!
!                       COPYRIGHT (C) 1981 BY
!    DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS  01754
!
! THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
! COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
! ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES  THEREOF
! MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
! EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
! TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
! REMAIN IN DEC.
!
! THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
! AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
! CORPORATION.
!
! DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
! SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
!

!++
! Facility: LSG DECnet Network Management
!
! Abstract: This file contains parameter definitions that are used to
!           initialize the Network Management Layer's (NML) data
!           bases.
!
! Environment: TOPS10/TOPS20 user mode, MCB RSX user task
!
! Author: Steven M. Jenness, Creation date: 10-Sep-80
!
!--

! Routine name redefinitions ...
MACRO
    mx$message_queue_initialize = mx_ini %,
    mx$message_queue_cleanup = mx_cln %,
    mx$message_queue_defer = mx_dfr %,
    mx$message_queue_post = mx_pst %,
    mx$message_queue_manager = mx_mgr %,
    mx$message_queue_checkpoint = mx_chk %,
    mx$build_envelope_spec = bldenv %,
    mx$unique_msg_file_name = mx_unq %,
    mx$release_message = relmsg %,
    mx$release_asciz = relasc %;

MACRO
    mx$message_queue_routines =
	mx$message_queue_initialize: NOVALUE,
	mx$message_queue_cleanup: NOVALUE,
	mx$message_queue_defer: NOVALUE,
	mx$message_queue_manager: NOVALUE,
        mx$message_queue_post,
        mx$message_queue_checkpoint: NOVALUE,
        mx$release_message: NOVALUE,
	mx$wake_up %;

MACRO
    mx$message_queue_local_routines =
	mx$recovery: NOVALUE,
        mx$build_envelope_spec,
        mx$remove_request: NOVALUE,
        mx$communicate: NOVALUE,
        mx$release_asciz: NOVALUE %;

MACRO
    mx$database_routines =
        mx$assign_domain_name,
        mx$data_initialize,
        mx$data_suspend,
        mx$data_get_space,
        mx$data_validate,
        mx$data_add_node %,

    mx$assign_domain_name = db_adn %,
    mx$data_initialize = db_ini %,
    mx$data_suspend = db_sus %,
    mx$data_validate = db_vd8 %,
    mx$data_get_space = db_gsp %,
    mx$data_add_node = db_add %;

MACRO
    mx$parse_host_file = mp_phf %;

MACRO
    mx$error_routines =
        mx$error_processor,
        mx$error_handler,
        mx$build_error_message %,

    mx$error_processor = er_prc %,
    mx$error_handler = er_hnd %,
    mx$build_error_message = er_bld %;


!
! Macro - MASTER_INITIALIZATION
!
! Function - This macro is used by the topmost level of
!            the NML to call all the functional units
!            that require initialization at startup time.
!

macro
     MASTER_INITIALIZATION =
%if $TOPS20
%then
    begin
    DECLARE_JSYS (SPRIW);
    $$SPRIW ($FHSLF, 1^35);
    end;
%fi
%if $TOPS20 or $TOPS10
%then

     NMU$PAGE_INITIALIZE ();
     NMU$INTERRUPT_INITIALIZE ();
     nmu$ipcf_initialize();
     NMU$NETWORK_INITIALIZE();
     MX$MESSAGE_QUEUE_INITIALIZE ();
%fi %;

!
! Macro - INIT_GLOBALS
!
! Function - To define as global the routines called by
!            the MASTER_INITIALIZATION that are not part
!            of the utility system.
!

macro
     INIT_GLOBALS =
%if $TOPS10 %then
	DETACH : novalue,		! Detach NML from the FRCLIN
%fi
%if $TOPS20 or $TOPS10                  ! Define for TOPS20 or TOPS10 only
%then
	MX$MESSAGE_QUEUE_INITIALIZE,	! Initialize MX Message Queue Handler
	NMU$PAGE_ALLOCATOR,		! Page allocation routines
        nmu$ipcf_initialize,
        NMU$NETWORK_UTILITIES,
	NMU$INTERRUPT_INITIALIZE        ! Interrupt system initialization
%fi
	%;

!
! Initialization parameters
!

literal
       BASIC_MEMORY = 50000;             ! Size of free core pool


