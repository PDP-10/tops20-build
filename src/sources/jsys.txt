
<EDT20.SRC>EXTEND.BLI.1

( 1.235) { _}
    _RSCAN (CH$PTR (TEMP_BUFFER));		! Put command in rescan buffer

( 1.236) { _}
    _RSCAN ($RSINI);

<EDT20.SRC>FILEIO.BLI.1

( 1.465) { _}
		    _GETER ($FHSLF; ERR_NUMBER);

( 1.480) {	_}
		_GETER ($FHSLF; ERR_NUMBER);

( 1.530) { _}
		    _GETER ($FHSLF; ERR_NUMBER);

( 1.548) { _}
		    _GETER ($FHSLF; ERR_NUMBER);

( 1.557) { _}
		    _GETER ($FHSLF; ERR_NUMBER);

<EDT20.SRC>FINAL.BLI.1

( 1.175) { _}
	IF ( NOT _RLJFN(.HELP_SET)) THEN EDT$$FMT_MSG (EDT$_HLPFILCLO);

<EDT20.SRC>GETFSPEC.BLI.1

( 1.140) { _}
    _JFNS (CH$PTR (.ADRS), .JFN, K_JFNS; ADRS);

( 1.169) { _}
    _JFNS (.ADRS, .JFN, %O'200000000000'; NEW_PTR);

( 1.184) { _}
    _JFNS (.ADRS, .JFN, %O'20000000000'; NEW_PTR);

( 1.199) { _}
    _JFNS (.ADRS, .JFN, %O'1000000000'; ADRS);

( 1.207) { _}
    _JFNS (.ADRS, .JFN, %O'100000000'; ADRS);

<EDT20.SRC>HELP.BLI.1

( 2.191) { _}
	IF ( NOT _RLJFN ( .HELP_SET)) THEN

( 2.208) { _}
    IF ( NOT _GTJFN (JFN_BLK, CH$PTR (TEMP_BUFFER); HELP_SET))

( 2.223) { _}
    _JFNS ( CH$PTR (TEMP_BUFFER), .HELP_SET, K_JFNS ; TEMP_PTR );

<EDT20.SRC>INPUT.BLI.1

( 1.357) { _}
	    _RSCAN (CH$PTR (TEMP_BUFFER,, BYTE_SIZE));

( 1.358) { _}
	    _RSCAN ($RSINI);

<EDT20.SRC>IOMOD.BLI.1

( 2.15) { _}
    _ERSTR ($PRIIN, ..STS, 0);

( 3.54) {	_}
	_ERSTR ($PRIOU, FLD ($FHSLF, FLD_LHS) + (.SYS_ERR_CODE AND FLD_RHS), 0);

( 5.65) {	_}
	_RLJFN(.JFN);

( 8.67) { _}
    _DVCHR (.JFN <0,18>; DUM, DEV_CHAR);

( 8.75) { _}
    _RLJFN (.JFN);

( 9.60) { _}
    IF (NOT _SIN (.JFN, CH$PTR (REC_BUFFER,, BYTE_SIZE), 255, 10;DUM, DUM, REC_LENGTH)) THEN

( 9.67) {	_}
	_GTSTS(.JFN;.INP_STS);

( 10.34) { _}
	STATUS = _SOUT (.JFN, CH$PTR (CRLF), -2)

( 10.44) {	_}
	_GTSTS(.JFN; .OUT_STS);

( 11.86) { _}
	IF NOT _RNAMF (.JFN1, .JFN2; .STS) THEN

( 11.88) { _}
	    _RLJFN (.JFN1);

( 11.89) { _}
	    _RLJFN (.JFN2);

( 11.102) { _}
    _RLJFN (.JFN2);

( 12.44) { _}
    IF (NOT _CLOSF (CO_NRJ + .JFN)) THEN RETURN (0);

( 12.45) { _}
    IF (NOT _OPENF (.JFN, FLD(7, OF_BSZ) + OF_APP)) THEN RETURN (0);

( 13.63) { _}
    _GTJFN (GETJFN_BLOCK, .PTR; JFN);

( 15.56) { _}
    _MTOPR($PRIIN, $MORLW; DUM1, DUM1, TI_WID);

( 15.60) { _}
    _GTTYP($PRIIN; TT_TYPE);

( 15.147) { _}
    _RFMOD ($PRIOU; OLD_MODE);

( 15.153) { _}
    _RFCOC ($PRIOU; DUM1, DUM2);

( 15.154) { _}
    _SFCOC ($PRIOU, .DUM1, ((.DUM2 AND NOT %O'600000') OR %O'400000'));

( 16.45) { _}
	    _SFMOD ($PRIOU, .OLD_MODE);

( 16.46) { _}
	    _SFCOC ($PRIOU, .OLD_CCOC1, .OLD_CCOC2);

( 16.47) { _}
	    _STPAR ($PRIOU, .OLD_MODE);

( 16.48) { _}
	    _MTOPR ($PRIOU, $MOSLW, .OLD_WIDTH);

( 17.75) { _}
    _PSOUT (.PR_PTR);					!Issue initial prompt

( 17.78) { _}
    _TEXTI (TXT_ARG);					!Get the command line

( 18.48) {	_}
	_SFMOD ($PRIOU, TTY_MODE);

( 18.54) {	_}
	_RFCOC ($PRIOU; OLD_CCOC1, OLD_CCOC2);

( 18.55) {	_}
	_SFCOC ($PRIOU, 0, 0);

( 18.61) {	_}
	_STPAR ($PRIOU, (.OLD_MODE AND %O'740000777777'));

( 19.60) { _}
    _SFMOD ($PRIOU, .OLD_MODE);

( 19.67) { _}
    _SFCOC ($PRIOU, .OLD_CCOC1, .OLD_CCOC2);

( 19.68) { _}
    _STPAR ($PRIOU, .OLD_MODE);

( 20.42) { _}
    IF (.LEN NEQ 0) THEN _SOUT($PRIOU, CH$PTR(.BUF,, BYTE_SIZE), .LEN, 0);

( 20.43) { _}
    _SOUT($PRIOU, CH$PTR (CRLF), -2);

( 21.42) { _}
    IF .LEN GTR 0 THEN _SOUT($PRIOU, CH$PTR(.BUF,, BYTE_SIZE), .LEN, 0);

( 22.46) {	_}
	_SFMOD ($PRIIN, TTY_MODE);

( 22.49) { _}
    _BIN ($PRIIN; .C);

( 23.55) {	_}
	_SFMOD ($PRIIN, TTY_MODE);

( 23.61) { _}
    WHILE (NOT _SIBE ($PRIIN)) DO

( 23.63) {	_}
	_BIN ($PRIIN; CHAR);

( 24.67) {	_}
!	_SOUT($PRIOU, CH$PTR (FMT_BUF,, BYTE_SIZE), .PMT_LEN);

( 24.75) { _}
!    _SFMOD ($PRIIN, ATE_MODE);

( 24.82) { _}
!    _MTOPR ($PRIIN, $MORBM, CUR_MASK);

( 24.83) { _}
!    _MTOPR ($PRIIN, $MOSBM, BREAK_MASK);

( 24.84) { _}
!    _MTOPR ($PRIIN, $MOSFW, .FLD_LEN);

( 24.90) { _}
!    _BIN ($PRIIN; CHAR);

( 24.96) { _}
!    _MTOPR ($PRIIN, $MORFW; DUM, DUM, NUM_CHARS);

( 24.133) {	_}
!		_SIN ($PRIIN, .PTR, -(.NUM_CHARS - 2));

( 24.135) { _}
!	    _BIN ($PRIIN; CHAR);

( 24.146) { _}
!	    _SIN ($PRIIN, .BUF, -(.NUM_CHARS - 1));

( 24.153) { _}
!    _MTOPR ($PRIIN, $MOSBM, CUR_MASK);

( 24.155) { _}
!    _SFMOD ($PRIOU, BIN_MODE);

( 25.79) { _}
	IF ( NOT _GTJFN (GJ_FLAGS, CH$PTR (TEMP_BUFFER,, BYTE_SIZE); WF_JFN))

( 25.82) { _}
	IF ( NOT _OPENF(.WF_JFN, OPN_BITS; WF_STS))

( 25.89) {	_}
		_RLJFN (.WF_JFN);

( 26.66) { _}
    _RLJFN (.WF_JFN);

<EDT20.SRC>LPUSH.BLI.1

( 3.69) { _}
	IF ( NOT _CFORK (CR_CAP; FORK_HANDLE))

( 3.76) { _}
	IF ( NOT _GTJFN (GJ_OLD + GJ_SHT, 

( 3.79) { _}
	    IF ( NOT _GTJFN (GJ_OLD + GJ_SHT, 

( 3.87) { _}
	IF ( NOT _GET (FLD (.FORK_HANDLE, FLD_LHS) + FLD (.FORK_JFN, FLD_RHS), 0))

( 3.110) { _}
    _SFRKV (.FORK_HANDLE, 0);

( 3.111) { _}
    _WFORK (.FORK_HANDLE);

( 3.112) { _}
    _RFSTS (.FORK_HANDLE; FORK_STATUS);

( 4.54) { _}
	IF ( NOT _GTJFN (GJ_OLD + GJ_SHT,

( 4.61) { _}
	IF ( NOT _GET (FLD ($FHSLF, FLD_LHS) + GT_PRL + GT_ADR + .DDT_JFN,

<EDT20.SRC>MESSAGE.BLI.1

( 1.159) {	_}
	_ERSTR (.PTR, %O'400000000000' + .MESS_NUM, 0; PTR);

<EDT20.SRC>NOOPEN.BLI.1

( 1.156) { _}
    _ERSTR ($PRIOU, FLD ($FHSLF, FLD_LHS) + (.ERR_NUMBER AND FLD_RHS), 0);

<EDT20.SRC>PAUDIT.BLI.1

( 1.165) {	_}
	_PSOUT (CH$PTR (UPLIT (%ASCIZ '?Fatal error writing to journal file -')));

( 1.166) {	_}
	_PSOUT (CH$PTR (UPLIT (%CHAR (ASC_K_CR, ASC_K_LF, 0))));

( 1.167) {	_}
	_ERSTR ($PRIOU, FLD ($FHSLF, FLD_LHS) + (.ERR_NUMBER AND FLD_RHS), 0);

( 1.168) {	_}
	_PSOUT (CH$PTR (UPLIT (%CHAR (ASC_K_CR, ASC_K_LF, 0))));

( 1.169) {	_}
	_PSOUT (CH$PTR (UPLIT (%ASCIZ 'After correcting the problem use EDT/RECOVER to recover your edit.')));

<EDT20.SRC>PRFILE.BLI.1

( 1.223) {	_}
		_RLJFN (.FILE_DESC [DSC$W_JFN]);

( 1.229) { _}
	    _RLJFN (.C_DATA);

( 1.252) { _}
	    _RLJFN (.FILE_DESC [DSC$W_JFN]);

<EDT20.SRC>REAJOUTEX.BLI.1

( 1.221) { _}
		    _NIN (CH$PTR (.LOCAL_INPUT_BUFFER, 2, BYTE_SIZE), 10; DUM, CC_CNT2);

<EDT20.SRC>T20SYS.BLI.1

( 3.56) { _}
    _GETJI (-1, FLD (-1,FLD_LHS) + FLD (DIR_NO,FLD_RHS), $JILNO);

( 3.65) { _}
    _DIRST (.DIR_ADR, .DIR_NO; TEMP_PTR);

( 4.42) { _}
    _PSOUT (CH$PTR (UPLIT (%ASCIZ 'Internal error detected - code : ')));

( 4.43) { _}
    _NOUT  ($PRIOU, .CODE, 10);

( 4.44) { _}
    _PSOUT (CH$PTR (UPLIT (%ASCIZ ' at address : ')));

( 4.45) { _}
    _NOUT  ($PRIOU, (.(CODE + 1) - 1) AND %O'777777', 8);

( 4.46) { _}
    _PSOUT (CH$PTR (UPLIT (%CHAR (ASC_K_CR, ASC_K_LF, 0))));

( 5.84) {	_}
		_PRARG (FLD ($PRAST,FLD_LHS) + $FHSLF, PRARG_BLK, 3);

( 5.110) { _}
    WHILE 1 DO _HALTF (.CMD);

( 6.52) { _}
    _ODTIM (.STRING_PTR, -1, 0; STRING_PTR);

( 8.35) { _}
    _TIMER (FLD ($FHSLF, FLD_LHS) + $TIMEL, 1000, 2);

( 9.50) { _}
    _GTAD (;TEMP);

( 9.51) { _}
    _TIMER (FLD ($FHSLF, FLD_LHS) + $TIMBF, .TEMP + 6, 0);

( 10.84) { _}
	    _SIR ($FHSLF, FLD (LEVEL_TAB, FLD_LHS) + FLD (CHAN_TAB, FLD_RHS));

( 10.85) { _}
	    _EIR ();

( 10.86) { _}
	    _AIC ($FHSLF, TIM_CHAN);

( 10.87) { _}
	    _AIC ($FHSLF, OVRQTA_CHAN);

( 10.95) { _}
	    _RPCAP ($FHSLF; TEMP_1, TEMP_2);

( 10.98) { _}
	    _EPCAP ($FHSLF, .TEMP_1, .TEMP_2 OR SC_CTC);

( 10.99) { _}
	    _ATI (FLD ($TICCC, FLD_LHS) + 0);

( 10.100) { _}
	    _AIC ($FHSLF, CC_CHAN);

( 10.107) { _}
	    _DIC ($FHSLF, CC_CHAN);

( 10.108) { _}
	    _DTI ($TICCC);

( 10.124) { _}
		    _RTIW ($FHJOB; TEMP_1);

( 10.125) { _}
		    _STIW ($FHJOB, .TEMP_1 AND NOT %O'100000');

( 10.141) { _}
		    _RTIW ($FHJOB; TEMP_1);

( 10.142) { _}
		    _STIW ($FHJOB, .TEMP_1 OR %O'100000');

( 11.37) { _}
    _DEBRK ();

( 12.44) { _}
    _RWM ($FHSLF; TEMP_1, TEMP_2);

( 13.37) { _}
    _DEBRK ();

( 14.63) { _}
    _PSOUT (CH$PTR (UPLIT (%ASCIZ '?Over quota or disk full -')));

( 14.64) { _}
    _PSOUT (CH$PTR (UPLIT (%CHAR (ASC_K_CR, ASC_K_LF, 0))));

( 14.65) { _}
    _PSOUT (CH$PTR (UPLIT (%ASCIZ ' If you wish to continue with this edit')));

( 14.66) { _}
    _PSOUT (CH$PTR (UPLIT (%CHAR (ASC_K_CR, ASC_K_LF, 0))));

( 14.67) { _}
    _PSOUT (CH$PTR (UPLIT (%ASCIZ ' EXPUNGE some files and type CONTINUE')));

( 14.72) { _}
    _HALTF ();

( 15.36) { _}
    _DEBRK ();

( 16.39) {	_}
	_TIMER (FLD ($FHSLF, FLD_LHS) + $TIMEL, 1000, 2);

<EDT20.SRC>TICLRAUD.BLI.1

( 1.185) { _}
	    _NOUT (.PTR, .CC_CNT1,


	Lines recognized = 135
   String    Matches  Unrecognized Matches
1) TAB & "_"	24	0
2) " _"	111	0
Letter case ignored ("Ab" = "aB").

Files with no matches: 	<EDT20.SRC>BADKEY.BLI.1	<EDT20.SRC>CHMBEEP.BLI.1
<EDT20.SRC>CHMBEGSEN.BLI.1	<EDT20.SRC>CHMBEGWRD.BLI.1	<EDT20.SRC>CHMCHANGE.BLI.1
<EDT20.SRC>CHMCHGC.BLI.1	<EDT20.SRC>CHMCHKCC.BLI.1	<EDT20.SRC>CHMCLRCC.BLI.1
<EDT20.SRC>CHMCMBLIN.BLI.1	<EDT20.SRC>CHMDELCHR.BLI.1	<EDT20.SRC>CHMDELLIN.BLI.1
<EDT20.SRC>CHMEINPUT.BLI.1	<EDT20.SRC>CHMEMESS.BLI.1	<EDT20.SRC>CHMENDWRD.BLI.1
<EDT20.SRC>CHMENTTRM.BLI.1	<EDT20.SRC>CHMEXCOM.BLI.1	<EDT20.SRC>CHMEXVERB.BLI.1
<EDT20.SRC>CHMFINENT.BLI.1	<EDT20.SRC>CHMFINSTR.BLI.1	<EDT20.SRC>CHMGBUF.BLI.1
<EDT20.SRC>CHMGCOUNT.BLI.1	<EDT20.SRC>CHMGDIR.BLI.1	<EDT20.SRC>CHMGINSTR.BLI.1
<EDT20.SRC>CHMGQUSTR.BLI.1	<EDT20.SRC>CHMGSUSTR.BLI.1	<EDT20.SRC>CHMHLPKPD.BLI.1
<EDT20.SRC>CHMINIT.BLI.1	<EDT20.SRC>CHMINSCHR.BLI.1	<EDT20.SRC>CHMINSMOD.BLI.1
<EDT20.SRC>CHMINSSTR.BLI.1	<EDT20.SRC>CHMINSTAB.BLI.1	<EDT20.SRC>CHMKEYWRD.BLI.1
<EDT20.SRC>CHMMESS.BLI.1	<EDT20.SRC>CHMMRKCHG.BLI.1	<EDT20.SRC>CHMNEWLEN.BLI.1
<EDT20.SRC>CHMONSTR.BLI.1	<EDT20.SRC>CHMPAREN.BLI.1	<EDT20.SRC>CHMPARSE.BLI.1
<EDT20.SRC>CHMPASTE.BLI.1	<EDT20.SRC>CHMREPOS.BLI.1	<EDT20.SRC>CHMSAVLIN.BLI.1
<EDT20.SRC>CHMSAVPOS.BLI.1	<EDT20.SRC>CHMSAVTXT.BLI.1	<EDT20.SRC>CHMSCHSTR.BLI.1
<EDT20.SRC>CHMSELPOS.BLI.1	<EDT20.SRC>CHMSENDEL.BLI.1	<EDT20.SRC>CHMSPLLIN.BLI.1
<EDT20.SRC>CHMSUBS.BLI.1	<EDT20.SRC>CHMTADJ.BLI.1	<EDT20.SRC>CHMUNDEL.BLI.1
<EDT20.SRC>CLRKEY.BLI.1	<EDT20.SRC>DATA.BLI.1	<EDT20.SRC>DEFKEY.BLI.1
<EDT20.SRC>EDT.BLI.1	<EDT20.SRC>EXEC.BLI.1	<EDT20.SRC>FCHAR.BLI.1
<EDT20.SRC>FCOLINC.BLI.1	<EDT20.SRC>FCRLF.BLI.1	<EDT20.SRC>FDEC.BLI.1
<EDT20.SRC>FILL.BLI.1	<EDT20.SRC>FINDKEY.BLI.1	<EDT20.SRC>FINDPARA.BLI.1
<EDT20.SRC>FIXNOTRUN.BLI.1	<EDT20.SRC>FLITERAL.BLI.1	<EDT20.SRC>FPUT.BLI.1
<EDT20.SRC>FPUTCHAR.BLI.1	<EDT20.SRC>FPUTMES.BLI.1	<EDT20.SRC>FSTRING.BLI.1
<EDT20.SRC>FTEXT.BLI.1	<EDT20.SRC>HEADER.BLI.1	<EDT20.SRC>INIT.BLI.1
<EDT20.SRC>KEYCHR.BLI.1	<EDT20.SRC>KEYCOM.BLI.1	<EDT20.SRC>KEYDEFKEY.BLI.1
<EDT20.SRC>KEYFMTSTR.BLI.1	<EDT20.SRC>KEYIMMINP.BLI.1	<EDT20.SRC>KEYPAD.BLI.1
<EDT20.SRC>KEYPUTCHR.BLI.1	<EDT20.SRC>KEYTRNCHR.BLI.1	<EDT20.SRC>LCLEAR.BLI.1
<EDT20.SRC>LDEFK.BLI.1	<EDT20.SRC>LDEFM.BLI.1	<EDT20.SRC>LDELETE.BLI.1
<EDT20.SRC>LDIVISION.BLI.1	<EDT20.SRC>LFCOUNT.BLI.1	<EDT20.SRC>LFILL.BLI.1
<EDT20.SRC>LFLNO.BLI.1	<EDT20.SRC>LGETSTR.BLI.1	<EDT20.SRC>LINCL.BLI.1
<EDT20.SRC>LINSERT.BLI.1	<EDT20.SRC>LMOVE.BLI.1	<EDT20.SRC>LNONCTG.BLI.1
<EDT20.SRC>LPRINT.BLI.1	<EDT20.SRC>LPUTCHR.BLI.1	<EDT20.SRC>LQUERY.BLI.1
<EDT20.SRC>LRES.BLI.1	<EDT20.SRC>LSET.BLI.1	<EDT20.SRC>LSHOW.BLI.1
<EDT20.SRC>LSUB.BLI.1	<EDT20.SRC>LSUBS.BLI.1	<EDT20.SRC>LSUBSN.BLI.1
<EDT20.SRC>LTADJ.BLI.1	<EDT20.SRC>LTYPE.BLI.1	<EDT20.SRC>LWRITE.BLI.1
<EDT20.SRC>LXCOM.BLI.1	<EDT20.SRC>LXPRINT.BLI.1	<EDT20.SRC>MACCAL.BLI.1
<EDT20.SRC>MCBOTTOM.BLI.1	<EDT20.SRC>MCCHANGE.BLI.1	<EDT20.SRC>MCDOWN.BLI.1
<EDT20.SRC>MCGETLIN.BLI.1	<EDT20.SRC>MCLEFT.BLI.1	<EDT20.SRC>MCRIGHT.BLI.1
<EDT20.SRC>MCTOP.BLI.1	<EDT20.SRC>MCUP.BLI.1	<EDT20.SRC>MESS.BLI.1
<EDT20.SRC>NAMES.BLI.1	<EDT20.SRC>PRGETKEY.BLI.1	<EDT20.SRC>PRGETTOK.BLI.1
<EDT20.SRC>PRLINNUM.BLI.1	<EDT20.SRC>PRMACCAL.BLI.1	<EDT20.SRC>PRPARCOM.BLI.1
<EDT20.SRC>PRPUSH.BLI.1	<EDT20.SRC>PRRANGE.BLI.1	<EDT20.SRC>PRSWITCH.BLI.1
<EDT20.SRC>RANNEXT.BLI.1	<EDT20.SRC>RANREPOS.BLI.1	<EDT20.SRC>RANRPOS.BLI.1
<EDT20.SRC>SAUDIT.BLI.1	<EDT20.SRC>SCRBLOB.BLI.1	<EDT20.SRC>SCRCHKREV.BLI.1
<EDT20.SRC>SCRCOMCUR.BLI.1	<EDT20.SRC>SCRCURS.BLI.1	<EDT20.SRC>SCRDELETE.BLI.1
<EDT20.SRC>SCRELINE.BLI.1	<EDT20.SRC>SCRESCR.BLI.1	<EDT20.SRC>SCRFCURS.BLI.1
<EDT20.SRC>SCRFIND.BLI.1	<EDT20.SRC>SCRINIT.BLI.1	<EDT20.SRC>SCRINSERT.BLI.1
<EDT20.SRC>SCRMCOL.BLI.1	<EDT20.SRC>SCRMOVETO.BLI.1	<EDT20.SRC>SCRNCOL.BLI.1
<EDT20.SRC>SCRNEWDEL.BLI.1	<EDT20.SRC>SCRNEWINS.BLI.1	<EDT20.SRC>SCRNOREV.BLI.1
<EDT20.SRC>SCRNOSCR.BLI.1	<EDT20.SRC>SCRREGION.BLI.1	<EDT20.SRC>SCRRELPOS.BLI.1
<EDT20.SRC>SCRRESET.BLI.1	<EDT20.SRC>SCRREV.BLI.1	<EDT20.SRC>SCRRLIN.BLI.1
<EDT20.SRC>SCRUPDATE.BLI.1	<EDT20.SRC>SCRWID.BLI.1	<EDT20.SRC>SCRZAPSIN.BLI.1
<EDT20.SRC>SETCOMMAN.BLI.1	<EDT20.SRC>TIAUTO.BLI.1	<EDT20.SRC>TICHAR.BLI.1
<EDT20.SRC>TIDELETE.BLI.1	<EDT20.SRC>TIECHO.BLI.1	<EDT20.SRC>TILINE.BLI.1
<EDT20.SRC>TISAVE.BLI.1	<EDT20.SRC>TITYPAHD.BLI.1	<EDT20.SRC>TSTKEYDEF.BLI.1
<EDT20.SRC>UCVTCASE.BLI.1	<EDT20.SRC>UEXACASE.BLI.1	<EDT20.SRC>UFBUFFER.BLI.1
<EDT20.SRC>UFSTRING.BLI.1	<EDT20.SRC>UGBUFFER.BLI.1	<EDT20.SRC>USSTRING.BLI.1
<EDT20.SRC>USSUBS.BLI.1	<EDT20.SRC>WFAPPBKT.BLI.1	<EDT20.SRC>WFBOTTOM.BLI.1
<EDT20.SRC>WFCLEAR.BLI.1	<EDT20.SRC>WFCOPLIN.BLI.1	<EDT20.SRC>WFDELBKT.BLI.1
<EDT20.SRC>WFDELLIN.BLI.1	<EDT20.SRC>WFECOPY.BLI.1	<EDT20.SRC>WFENDINS.BLI.1
<EDT20.SRC>WFEOB.BLI.1	<EDT20.SRC>WFGETBKT.BLI.1	<EDT20.SRC>WFINSLIN.BLI.1
<EDT20.SRC>WFLOCLIN.BLI.1	<EDT20.SRC>WFOPNBUF.BLI.1	<EDT20.SRC>WFRBUKT.BLI.1
<EDT20.SRC>WFREABCK.BLI.1	<EDT20.SRC>WFREACUR.BLI.1	<EDT20.SRC>WFREAFWD.BLI.1
<EDT20.SRC>WFREAINP.BLI.1	<EDT20.SRC>WFREPLIN.BLI.1	<EDT20.SRC>WFRESEQ.BLI.1
<EDT20.SRC>WFSCOPY.BLI.1	<EDT20.SRC>WFSPLBKT.BLI.1	<EDT20.SRC>WFSTRINS.BLI.1
<EDT20.SRC>WFTOP.BLI.1	<EDT20.SRC>WORDWRAP.BLI.1
211 files searched, 196 without matches.
