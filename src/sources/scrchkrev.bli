 %TITLE 'SCRCHKREV - reverse video in select range'
MODULE SCRCHKREV (				! Reverse video in select range
		IDENT = '3-001'			! File: SCRCHKREV.BLI Edit: GB3001
		) =
BEGIN
!COPYRIGHT (c) DIGITAL EQUIPMENT CORPORATION 1981, 1988.  ALL RIGHTS RESERVED.
!
!THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED ONLY
!IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE AND WITH THE INCLUSION OF 
!THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR ANY OTHER COPIES THEREOF MAY 
!NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON.  NO TITLE
!TO AND OWNERSHIP OF THE SOFTWARE IS HEREBY TRANSFERRED.
!
!THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE AND 
!SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL EQUIPMENT CORPORATION.
!
!DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS 
!SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.
!
!
!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	This module checks to see if the current line is within
!	the select range, and forces the screen into normal or
!	reverse video, accordingly.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: September 8, 1979
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 12-Feb-1981.  This module was created by
!	extracting the routine CHECK_REVERSE from module SCREEN.
! 1-002	- Regularize headers.  JBS 13-Mar-1981
! 1-003	- Revise the definition of EDT$$G_CS_CHNO.  JBS 27-Dec-1982
! 3-001 - Add update from V3 sources.  GB 03-May-1983
!--

%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$SC_REVIDCHK : NOVALUE;

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine
%SBTTL 'EDT$$SC_REVIDCHK  - reverse video in select range'

GLOBAL ROUTINE EDT$$SC_REVIDCHK (		! Reverse video in select range
	CP					! Current position in line buffer
    ) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine checks to see if we are inside the select range, and forces
!	the screen into either reverse or normal video based on the result.
!
! FORMAL PARAMETERS:
!
!  CP			Current position in the line buffer
!
! IMPLICIT INPUTS:
!
!	CS_CHNO
!	CS_LN
!	SEL_LN
!	SEL_POS
!	TI_TYP
!	LN_BUF
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	NONE
!
! SIDE EFFECTS:
!
!	Puts the screen in either normal or reverse video.
!
!--

    BEGIN

    EXTERNAL ROUTINE
	EDT$$SC_CMPPOS,
	EDT$$SC_REVID : NOVALUE,
	EDT$$SC_NONREVID : NOVALUE;

    EXTERNAL
	CS_CHNO,				! character position of cursor.
	CS_LN : LN_BLOCK,		! relative line number of cursor line.
	SEL_LN : LN_BLOCK,		! Relative line number of select.
	SEL_POS,				! select position.
	TI_TYP,				! Terminal type.
	LN_BUF;				! Current line buffer.

    LOCAL
	CPOINT;

    CPOINT = CH$PTR (LN_BUF, .CP, BYTE_SIZE);

    IF (.TI_TYP EQL TERM_VT100)
    THEN

	IF (EDT$$SC_CMPPOS (.CPOINT, CS_LN, CH$PTR (LN_BUF, .CS_CHNO, BYTE_SIZE))
		NEQ EDT$$SC_CMPPOS (.CPOINT, SEL_LN, .SEL_POS))
	THEN
	    EDT$$SC_REVID ()
	ELSE
	    EDT$$SC_NONREVID ();

    END;


END
ELUDOM
