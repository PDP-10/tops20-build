!	COPYRIGHT (C) DIGITAL EQUIPMENT CORPORATION 1986.
!	ALL RIGHTS RESERVED.
!
!	THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY  BE  USED  AND
!	COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE AND WITH
!	THE INCLUSION OF THE ABOVE COPYRIGHT NOTICE.   THIS  SOFTWARE  OR
!	ANY  OTHER  COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE
!	AVAILABLE TO ANY OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE
!	SOFTWARE IS HEREBY TRANSFERRED.
!
!	THE INFORMATION IN THIS SOFTWARE IS  SUBJECT  TO  CHANGE  WITHOUT
!	NOTICE  AND  SHOULD  NOT  BE CONSTRUED AS A COMMITMENT BY DIGITAL
!	EQUIPMENT CORPORATION.
!
!	DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF
!	ITS SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.
!
! PATERROR.REQ

!++
! FACILITY: 	PAT Parser
!
! ABSTRACT:
!
!	PATERROR.REQ is the external specification for the parser
!	global error recovery module.  It contains routines that are
!	common to both local and global error recovery.
!
! ENVIRONMENT:	VAX/VMS user mode
!
! AUTHOR:  H. Alcabes, CREATION DATE:  25-Feb-80
!
! MODIFIED BY:
!
! 	Charlie Mitchell, 9-Nov-1981 : VERSION X2-001
! 001 -	Modify to just contain routines needed by both local and
!	global error recovery.
!
! 002 - Remove VMS dependencies.  C. Richardson 25-May-84
!
!  253  Change filename to DIUPATERROR.
!       Gregory A. Scott 1-Jun-86
!
!--

require 'DIUPATREQPRO';

%IF %BLISS (BLISS36)						! 002
%THEN								! 002
macro								! 002
PAT$ERROR_GLOBAL_RECOVERY	=	EGBREC %,		! 002
PAT$ERROR_GET_NEXT_TRANS_INIT	=	EGNTTI %,		! 002
PAT$ERROR_GET_NEXT_TRANSITION	=	EGNXTT %,		! 002
PAT$ERROR_PUT_STATUS		=	EPUTST %;		! 002
%FI								! 002

external routine
    PAT$ERROR_GLOBAL_RECOVERY : novalue;

external routine
    PAT$ERROR_GET_NEXT_TRANS_INIT : novalue;

ENUMERATION ('status_type', 1,
    CONSUME_TERM_ON_REDUCTION,
    CONSUME_TERM_ON_SHIFT,
    REDUCT_AFTER_BACKUP_NOT_ALLOWED,
    SAVED_INFO_NOT_VALID,
    ERROR_ENCOUNTERED,
    CONSUME_NONTERM_ON_SHIFT);

external routine
    PAT$ERROR_GET_NEXT_TRANSITION;

literal
    PAT$ERROR_NO_MORE_TRANSITIONS = -1;

external routine
    PAT$ERROR_PUT_STATUS : novalue;

! End of PATERROR.REQ
