 %TITLE 'FSTRING - format a string for output'
MODULE FSTRING (				! Format a string for output
		IDENT = '3-002'			! File: FSTRING.BLI Edit: CJG3002
		) =
BEGIN
!COPYRIGHT (c) DIGITAL EQUIPMENT CORPORATION 1981, 1988.  ALL RIGHTS RESERVED.
!
!THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED ONLY
!IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE AND WITH THE INCLUSION OF 
!THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR ANY OTHER COPIES THEREOF MAY 
!NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON.  NO TITLE
!TO AND OWNERSHIP OF THE SOFTWARE IS HEREBY TRANSFERRED.
!
!THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE AND 
!SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL EQUIPMENT CORPORATION.
!
!DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS 
!SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.
!
!
!++
! FACILITY:	EDT -- The DEC Standard Editor
!
! ABSTRACT:
!
!	Format a string for output.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: Bob Kushlis, CREATION DATE: March 18, 1979
!
! MODIFIED BY:
!
! 1-001	- Original.  DJS 19-FEB-1981.  This module was created by
!	extracting routine EDT$$FMT_STR  from module FORMAT.
! 1-002	- Regularize headers.  JBS 05-Mar-1981
! 1-003	- Use a local for the string pointer, so we don't modify the
!	   formal (a violation of the VAX-11 calling standard).  This
!	   change saves 3 words in the PDP-11.  JBS 05-Mar-1981
! 3-001 - Make the local string pointer (above) a real string ptr not
!	   an address. (Sigh!)  GB 14-Feb-1983
! 3-002 - Make supplied argument a real byte pointer. CJG 22-Mar-1983
!--

%SBTTL 'Declarations'
!
! TABLE OF CONTENTS:
!

REQUIRE 'EDTSRC:TRAROUNAM';

FORWARD ROUTINE
    EDT$$FMT_STR : NOVALUE;

!
! INCLUDE FILES:
!

REQUIRE 'EDTSRC:EDTREQ';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!
!	In the routine
%SBTTL 'EDT$$FMT_STR  - format a string for output'

GLOBAL ROUTINE EDT$$FMT_STR (			! Format a string for output
	S, 					! Address of string
	N					! Length of string
    ) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Place a string of characters in the format buffer by repeated calls
!	to EDT$$FMT_CH .
!
! FORMAL PARAMETERS:
!
!  S			Pointer to the string.
!
!  N			Number of characters.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	NONE
!
! SIDE EFFECTS:
!
!	Calls EDT$$FMT_CH
!
!--

    BEGIN

    EXTERNAL ROUTINE
	EDT$$FMT_CH : NOVALUE;

    LOCAL
	CHAR_PTR;

    CHAR_PTR = .S;

    INCR I FROM 1 TO .N DO
	EDT$$FMT_CH (CH$RCHAR_A (CHAR_PTR));

    END;


END
ELUDOM
