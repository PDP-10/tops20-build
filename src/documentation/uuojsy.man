                           TOPS-10 TO TOPS-20




                       SYSTEM PROGRAMMER'S GUIDE




                             October, 1983




                                  NOTE

This publication was originally created for  those  customers  who  were
converting  from a TOPS-10 system to a TOPS-20 system.  The title of the
publication and the organization of material was designed to  meet  that
objective.   Customers  at  1983  Fall  DECUS  who  saw this publication
requested DIGITAL to release it to  all  TOPS-10  customers  because  it
contains  useful  information  for  those  not  converting  to  TOPS-20.
Because of the number of customer requests,  we  are  distributing  this
publication as part of the TOPS-10 customer supported tape.  There is no
commitment on DIGITAL's  part  to  upgrade  this  material  with  future
releases nor to respond to requests for enhancements or corrections.




Operating systems:

          TOPS-10, version 7.01

          TOPS-20, version 5
The information in this document is subject to change without notice and
should   not   be   construed  as  a  commitment  by  Digital  Equipment
Corporation.  Digital Equipment Corporation  assumes  no  responsibility
for any errors that may appear in this document.

The software described in this document is furnished under a license and
may only be used or copied in accordance with the terms of such license.

No responsibility is assumed for the use or reliability of  software  on
equipment that is not supplied by DIGITAL or its affiliated companies.





Copyright  (C)  1983  by  Digital  Equipment  Corporation.   All  rights
reserved.





the following are trademarks of Digital Equipment Corporation:

          DEC                      DECnet                   IAS
          DECUS                    DECsystem-10             MASSBUS
          Digital Logo             DECSYSTEM-20             PDT
          PDP                      DECwriter                RSTS
          UNIBUS                   DIBOL                    RSX
          VAX                      DecSystem                VMS
                                                            VT
                                PREFACE


AUDIENCE and OBJECTIVES

The purpose of this manual is to provide help and  information  for  the
TOPS-10  systems programmer who must learn and program for TOPS-20.  The
intended audience comprises the following groups of systems programmers:

     a.  Programmers who must convert existing TOPS-10 programs  to  run
         under TOPS-20, either in compatibility mode or native mode.

     b.  Programmers who must write TOPS-10 programs which will later be
         converted to run under TOPS-20.

     c.  Programmers who  must  write  programs  which  run  under  both
         TOPS-10 and TOPS-20.


The manual  also  provides  information  to  help  programmers  who  are
planning to take advantage of TOPS-20 extended addressing.

It is not  the  purpose  of  this  manual  to  give  complete  technical
information  about  the specific functions of either TOPS-10 or TOPS-20.
Instead, this manual provides summary information which the reader  must
supplement with the standard TOPS-10 and TOPS-20 documentation.



HOW TO USE THIS MANUAL

You may use this manual in either of two ways:

     1.  As an  introduction  to  TOPS-20  systems  programmer  for  the
         TOPS-10  programmer,  read  chapters  1 through 9 sequentially.
         Chapters 1 through 4 present general concepts, and  chapters  5
         through  9  discuss differences for specific concepts.  You may
         skip topics in chapters 5 through 9 which do not interest you.

     2.  As a reference guide for TOPS-10 to TOPS-20  conversions,  look
         up  specific  UUOs  and GETTABs in the chapters 9 and 10 of the
         manual.  For each UUO  and  GETTAB,  these  two  chapters  give
         specific  conversion  algorithms  for  conversion  to  TOPS-20.
         Also, look up specific UUO names, function code names and  flag
         names in the index to find information about them.


Although this manual is not intended for aiding in  TOPS-20  to  TOPS-10
conversions,  all  JSYS  names,  function  code  names  and  flag  names
appearing in the manual are indexed, and so you may be able to use  this
manual  in  many cases to find the UUO function corresponding to a given
JSYS functionality.

In all cases, you should have the appropriate TOPS-20 manuals  available
to provide you with complete details about specific TOPS-20 functions.
ASSOCIATED DOCUMENTS

All TOPS-10 and TOPS-20 documents are useful in  conjunction  with  this
manual.  The most useful are the following:


       o  TOPS-10 Monitor Calls (Volume 1), AA-0974D-TB

       o  TOPS-20 Monitor Calls (Volume 2), AA-K039A-TB

       o  TOPS-10/TOPS-20 USAGE File Specification, AA-4181B-TK

       o  TOPS-20 Monitor Calls User's Guide, AA-D859B-TM

       o  TOPS-20 Monitor Calls Reference Manual, AA-4166E-TM












                               CHAPTER 1

                      TOPS-20 PROGRAMMING CONCEPTS



This chapter assumes the following prerequisites:

     1.  That you are somewhat familiar with TOPS-20 command language.

     2.  That you are familiar with MACRO-10 programming, including some
         knowledge of TOPS-10 UUOs.


It presents the major  conceptual  differences  between  programming  in
MACRO-10 and MACRO-20.



1.1  USING THE JSYS

In TOPS-10, there are several opcode mnenomics for monitor calls.  These
opcode  mnemonics  are  CALLI,  CLOSE,  ENTER,  GETSTS, IN, INBUF, INIT,
INPUT, LOOKUP, MTAPE, OPEN, OUT, RELEAS, RENAME, STATO,  STATZ,  TTCALL,
UGETF,  UGEN,  USETI  and USETO.  As a group, these opcode mnemonics are
called UUOs, which stands for "Unimplemented User Opcodes."  Several  of
these opcodes provide groups of UUO functions that you usually use under
a different name.  For example, the APRENB UUO is the same as  CALLI 16.
In  fact,  most of the UUO functions use the CALLI opcode.  In addition,
the TTCALL opcode provides a group of  terminal-related  UUO  functions,
such  as  INCHWL  and  OUTSTR,  and  MTAPE  provides a group of magnetic
tape-related functions, such as MTEOF. and MTREW.

In MACRO-20, all supervisor calls are provided through the  JSYS  ("Jump
to  System")  opcode  mnemonic.   JSYS  is  similar  to CALLI in that it
provides a group of supervisor functions.  For example, the CLOSF (close
file) supervisor call is equivalent to JSYS 22.



1.2  USE OF PA1050

TOPS-10 UUOs are not recognized by the TOPS-20 operating system.  As  we
will  discuss,  there is a special program called PA1050 which simulates
TOPS-10 UUOs when running under  TOPS-20.   The  first  time  that  your
program  executes  an  instruction  that  looks  like a TOPS-10 UUO, the
TOPS-20 PROGRAMMING CONCEPTS                                    Page 1-2
USE OF PA1050                                                  16 Jan 84


PA1050 program is automatically  loaded  for  you.   For  that  and  all
subsequent  UUO  calls, PA1050 will automatically intercept the call and
simulate the function, if possible.



1.3  PROCESSES AND SUB-PROCESSES

TOPS-10 possesses the concepts of "monitor mode" and "user  mode."  When
you   log  in  to  TOPS-10,  you  are  in  monitor  mode.   The  monitor
automatically types out a "." to indicate that it  is  ready  to  accept
your  monitor  command.   When you execute a program, TOPS-10 loads that
program, and you begin to execute it.  At that point  you  are  in  user
mode, and you stay in user mode until your program terminates.

On TOPS-20, you are never in monitor mode.  You are always  executing  a
program, even just after you log in.

When you log in to TOPS-20, TOPS-20 automatically runs a system  program
called  the  TOPS-20  EXEC.   This  program is designed to appear like a
monitor-level program, but internally it is really no different from any
other program executing on TOPS-20.

When a program runs under TOPS-20, it is called a "process." The TOPS-20
EXEC  process  executes  by typing out an "@" on your terminal and waits
for you to type a command.  When you type a legal command,  the  TOPS-20
EXEC executes it.

If your command requires another program to be loaded and executed, then
something  happens  that  is unlike anything that happens under TOPS-10.
The TOPS-20 EXEC loads your program as a "sub-process." That is, you can
be  logged  in  as  a single job and have two or more separate processes
(programs) under your control at the same time.

If you are familiar with the TOPS-10 program OPSER, then you  may  think
that  sub-processes  are like programs running under OPSER.  That is not
true.  When a program is  running  under  OPSER,  it  is  running  as  a
separate job, not as part of the same job.  OPSER controls the subjob by
means of a PTY or pseudo-terminal.  You can run a subjob on a PTY  under
TOPS-20 as well, but that is not what we mean by a sub-process.

On TOPS-20, it is possible for two or more processes  (programs)  to  be
running simultaneously as part of the same job.  The controlling process
is called the "superior process," and the controlled process  is  called
the "inferior process." It is possible for a process to control a number
of inferior processes, and each inferior process  can  control  its  own
inferior sub-processes.

Process control provides you with a  great  deal  of  flexibility.   For
example,  it  is possible for a program to share all or a portion of its
memory with its  sub-process.   If  a  process  shares  memory  with  an
inferior  process,  you  can  set  up  your  memory  map  so  that it is
impossible for the sub-process to modify the shared memory, or  so  that
either process can modify the shared memory.
TOPS-20 PROGRAMMING CONCEPTS                                    Page 1-3
PROCESSES AND SUB-PROCESSES                                    16 Jan 84


Another  word  for  "process"  is  "fork."  These  two  words  are  used
interchangeably.



1.4  THE SOFTWARE INTERRUPT SYSTEM

There is a software interrupt system on both TOPS-10 and  TOPS-20.   The
system   permits  you  to  write  programs  which  intercept  errors  or
interrupts (such as  illegal  instructions  or  CTRL/C  interrupts)  and
continue executing.

Under  TOPS-20  the  software  interrupt  system  is  crucial   to   the
implementation  of  much system software because of the sub-processes we
have been discussing.  Under TOPS-20, it is possible for  a  process  to
request  interception  of  an  error  occurring  in a sub-process.  This
capability is extremely important in implementation of the TOPS-20 EXEC,
since  it  must use the software interrupt system to handle all kinds of
terminations in a program executing as a sub-process.

For example, the EXEC enables the software interrupt system so  that  it
can handle all illegal instruction executions and CTRL/C interrupts that
occur in your program.  Under TOPS-10, these interrupts would  put  your
job  back  into  monitor  mode.   Under TOPS-20, the EXEC intercepts the
interrupts and returns the job to its direct control.   (Of  course,  if
the  sub-process  itself enables the software interrupt system to handle
these interrupt conditions itself, then the EXEC will not  get  control.
This is similar to interrupt handling under TOPS-10.)

Another use of the TOPS-20 software interrupt system may  be  useful  to
you.   It  is  possible  for  a program to enable the software interrupt
system to cause an interrupt whenever any specified control character is
typed on the terminal.  For example, when the EXEC starts executing, the
software interrupt system is enabled to automatically  intercept  CTRL/T
input from your terminal.  As a result, the one-line status message that
you see comes from the EXEC, not from the TOPS-20 monitor.



1.5  JSYS INTERRUPTS

We will now discuss a difference that is  slightly  more  abstract,  the
concept  that  a  JSYS  can  be  interrupted  while  a UUO cannot.  This
difference will affect you only rarely, and then only in subtle ways.

When we say that a TOPS-10 UUO cannot be interrupted, we mean  that  any
interrupt  which  occurs  while TOPS-10 is executing a UUO is held until
execution of the UUO is completed.  For example, suppose you type CTRL/C
to  interrupt  your  program  while  TOPS-10 is executing a UUO for your
program.  Then the CTRL/C will not be honored until execution of the UUO
has  been  completed.  This delay can be significant if execution of the
UUO takes a long time, such as when a very long I/O operation occurs.
TOPS-20 PROGRAMMING CONCEPTS                                    Page 1-4
JSYS INTERRUPTS                                                16 Jan 84


On the other hand, a TOPS-20 JSYS can be interrupted.  This may  or  may                                  ___
not  affect the execution of your program.  Let us look at some examples
of the CTRL/C interrupt:

     1.  Suppose you interrupt your program with CTRL/C in the middle of
         a  JSYS  execution, and you return to the TOPS-20 EXEC.  If you
         type the EXEC command CONTINUE, then your program will continue
         execution from the middle of the JSYS.  This result will always
         be the same as under TOPS-10.

     2.  Suppose you interrupt your program with CTRL/C in the middle of
         a JSYS execution, but then type the EXEC command DDT.  You will
         then enter DDT and the context of the JSYS  execution  will  be
         lost.   To continue execution of your program, you will have to
         restart execution of the JSYS.


Even the second of these cases will seldom result in  different  program
execution  under TOPS-10 and TOPS-20.  The reason is that when a TOPS-20
JSYS is  interrupted,  it  executes  "backout  code"  which  essentially
cancels  the effects of the partial execution of the JSYS.  However, the
effects of a partially executed JSYS cannot  always  be  canceled.   For
example,  unpredictable results occur when a multi-page I/O operation is
interrupted.  In this case, some of the pages have been transmitted when
the  interrupt  occurs, and some have not.  In the corresponding TOPS-10
situation, either all or none of the pages have been transmitted.

Now let us look at a different  kind  of  example.   Suppose  that  your
program  has  enabled  the  software  interrupt system, and an interrupt
occurs during execution of a UUO or JSYS.  Under TOPS-10,  the  software
interrupt  is  not  taken  until  UUO  execution  has  completed.  Under
TOPS-20, the software interrupt might be taken in the middle of the JSYS
execution.   Whether this affects execution of your program depends upon
how your interrupt handling subroutine works.

     1.  If your interrupt  handling  subroutine  sets  flags  or  makes
         decisions and then dismisses the interrupt without reference to
         where the program was executing  when  the  interrupt  occurred
         (the interrupt PC), then program execution will not be affected
         at all.

     2.  If your interrupt handling subroutine makes decisions based  on
         the  value of the interrupt PC, then execution may be affected.
         The reason is that under TOPS-10 the interrupt PC is always  in
         the  user  code, while under TOPS-20 the interrupt PC may be in
         the monitor JSYS code.  This means that your  code  that  tests
         the  value  of  the  interrupt PC must be able to recognize and
         handle a JSYS interrupt PC.

     3.  If your interrupt handling subroutine changes the interrupt  PC
         before   dismissing   the  interrupt,  then  execution  may  be
         different.  The reason is that a TOPS-20 interrupt routine  may
         be entered after a JSYS has been only partially executed, but a
         TOPS-10 interrupt routine may never be  entered  after  partial
TOPS-20 PROGRAMMING CONCEPTS                                    Page 1-5
JSYS INTERRUPTS                                                16 Jan 84


         execution of a UUO.













                               CHAPTER 2

                   USING MACRO-20, LINK-20 AND DDT-20



This chapter focuses on the differences in command language  and  source
programs for systems programmers on TOPS-10 and TOPS-20.



2.1  MACRO

The MACRO-10 and MACRO-20 programs work nearly the same way and  produce
the  same  results.   The  problems  that  arise  in converting MACRO-10
programs to MACRO-20 usually have  to  do  with  using  TOPS-20  monitor
symbols  instead  of, or in addition to, TOPS-10 monitor symbols, and in
coding sequences for JSYSs.  This section discusses those issues.



2.1.1  MACRO-20 Programs With UUOs And TOPS-10 Monitor Symbols

MACRO-20 is initialized with the same symbol table  as  MACRO-10.   This
means that the names of the UUOs are automatically defined.

As with MACRO-10, if you wish to use monitor symbols other than the  UUO
names themselves, your source program should include the statement

        SEARCH UUOSYM

Because of these conventions, a program containing UUOs should  assemble
the same, with the same results, under MACRO-10 and MACRO-20.



2.1.2  MACRO-20 Programs With JSYSs And TOPS-20 Monitor Symbols

Like MACRO-10, MACRO-20 is not initialized  with  any  JSYS  or  TOPS-20
monitor  symbol  definitions.   In  order  to  use these symbols in your
program, your source file should contain the following:

        SEARCH MONSYM
USING MACRO-20, LINK-20 AND DDT-20                              Page 2-2
MACRO                                                          16 Jan 84


This statement will  cause  MACRO  (-10  or  -20)  to  access  the  file
MONSYM.UNV.   This  file  contains  all  JSYS and TOPS-20 monitor symbol
definitions.



2.1.3  Programs Containing Both TOPS-10 And TOPS-20 Monitor Symbols

When converting from one system to another, it very often  happens  that
your program contains both TOPS-10 and TOPS-20 monitor symbols, at least
during an interim period.  And if your program is  going  to  run  under
both   operating   systems,  then  it  may  use  both  sets  of  symbols
permanently.

You may insert both of the following the statements:

          SEARCH UUOSYM
          SEARCH MONSYM

into your program so that both sets of symbols will be defined.

A problem arises because a few symbols are defined in  both  files  with
different  definitions.  An example of such a symbol is RESET, which has
the definition CALLI 0 in the TOPS-10 symbol table and JSYS 147  in  the
TOPS-20 symbol table.

If you use two or more SEARCH operations in your MACRO program, then the
first   takes   precedence.    Thus,   if   you  use  SEARCH UUOSYM  and
SEARCH MONSYM in that order, then TOPS-10 symbol definitions  will  take
precedence over TOPS-20 monitor symbols.  In that case, you would not be
able  to  use  the  TOPS-20  monitor  symbols  without   defining   them
explicitly.

There are two methods you may use to solve this problem:

     a.  For RESET to have the TOPS-20 meaning, insert

                 OPDEF  RESET [JSYS 147]

         into your program.

     b.  Use the alternate TOPS-20 symbol, RESET%, which  has  the  same
         definition  as  the  TOPS-20  RESET.   Each TOPS-20 JSYS has an
         alternate form with a "%" appended.




2.1.4  Coding Conventions For JSYSs

The coding conventions for JSYSs are described in  the  introduction  to
the  TOPS-20  Monitor Calls Reference Manual, and are not repeated here,     _______  _______ _____ _________ ______
except to make one observation about the use of accumulators.
USING MACRO-20, LINK-20 AND DDT-20                              Page 2-3
MACRO                                                          16 Jan 84


The convention for the vast majority of UUOs, the CALLIs,  is  that  you
can  use  any accumulator as an argument block pointer.  For example, if
AC5 points to the FILOP. argument block, then the instruction

        FILOP.   AC5,

invokes the monitor call.

The conventions for TOPS-20 monitor calls are different,  however.   One
or more of accumulators 1 through 4 are always used to pass arguments or
argument block addresses.  Thus if you are currently writing a  MACRO-10
program which you plan to later to convert to MACRO-20, you should avoid
the use of accumulators 1 through 4 as much as possible.



2.2  LINK

The following LINK-10 switches are illegal in LINK-20:

          /CORE
          /CPU
          /MAXCOR
          /PLTTYP
          /RUNCOR
          /SSAVE
          /ZERO

Since these switches have no meaning when running under TOPS-20, you may
simply  delete them from your LINK command files when going from LINK-10
to LINK-20.  The only exception is /SSAVE, which you should replace with
/SAVE.

LINK-20 supports the following additional switches:

          /PVBLOCK
          /PVDATA

You should use these switches if you  wish  to  define  a  program  data
vector  (PDV)  in  your  TOPS-20  program.   The PDV is described in the
TOPS-20 Monitor Calls Reference Manual._______ _______ _____ _________ ______

All other LINK switches are defined in  both  LINK-10  and  LINK-20  and
produce  the  same  results.   An exception is the rare instance where a
TOPS-10 programmer wishes to embed a version number in  an  output  file
RIB.   For  example, this permits display of a .MAP file version.  There
is no comparable feature for TOPS-20 files.

If your TOPS-20 program does not reference the JOBDAT area, then you may
wish  to  consider using the /NOINITIAL switch.  This switch removes the
JOBDAT symbols from the LINK-20 symbol table.
USING MACRO-20, LINK-20 AND DDT-20                              Page 2-4
DDT                                                            16 Jan 84


2.3  DDT

The $Y command (which takes a command file) of DDT-10 is  not  available
under DDT-20.

Other differences  between  DDT-10  and  DDT-20  have  to  do  with  the
differences  in  memory management rules.  If you open a memory location
in a non-existent page, then DDT-10  considers  the  reference  illegal,
while DDT-20 allocates the page.

You may not call DDT from a user program when running under  TOPS-20  as
you can from TOPS-10.












                               CHAPTER 3

                    THE PA1050 COMPATIBILITY PACKAGE



The PA1050 compatibility package is a program that  runs  under  TOPS-20
and   simulates  many  TOPS-10  monitor  calls  (UUOs)  in  the  TOPS-20
environment.  This permits many TOPS-10 programs to  run  under  TOPS-20
with no change.

This chapter provides general information on PA1050 and how it is  used.
For  details on the support of individual UUOs, please refer to the last
chapter of this manual.



3.1  FUNCTIONAL CAPABILITY OF PA1050

PA1050 is  supported  by  DIGITAL  only  to  a  certain  extent.   If  a
DIGITAL-supported product fails because of a bug in PA1050, then DIGITAL
will repair the problem.  Use of PA1050 with a customer program  is  not
supported by DIGITAL.

PA1050 supports all non-privileged UUOs through  TOPS-10  version  6.01.
UUOs  implemented  in  later  versions  of  TOPS-10 are not supported in
PA1050, except in rare cases where support  is  required  for  DIGITAL's
programs.



3.2  OPERATION OF PA1050

TOPS-20 recognizes a TOPS-10 monitor call by means of an opcode  in  the
range 40B8 to 100B8.  The default action taken by TOPS-20 is to initiate
simulation of the UUO.  This default action can be  prevented  by  using
the TOPS-20 EXEC command

        @SET NO UUO-SIMULATION         ___ __ ______________

Use of this command disables simulation of UUOs.

If UUO simulation has not been disabled, then TOPS-20  invokes  the  UUO
simulation  routine.   If  this  is  the first UUO being executed by the
program, TOPS-20 must figure out where the UUO  simulation  routine  is.
It determines this as follows:
THE PA1050 COMPATIBILITY PACKAGE                                Page 3-2
OPERATION OF PA1050                                            16 Jan 84


     a.  The user may have specified the entry vector (starting address)
         of  his  own UUO simulation routine by means of the GCVEC JSYS.
         If so, then that routine is used.

     b.  Otherwise, TOPS-20 looks for SYS:PA1050.EXE and merges it  into
         your  address space, starting at memory location 700000.  To do
         this, TOPS-20 overwrites any user program instructions or  data
         in locations 700000 through 770000.


For the first UUO executed by your program, TOPS-20 jumps to the  second
word  in  the entry vector for PA1050.  This is an alternate entry point
that notifies PA1050 that this is the first  UUO  simulation  call,  and
PA1050  can  set  up and initialize its internal buffers and data areas.
For subsequence UUOs, TOPS-20  jumps  to  the  primary  entry  point  in
PA1050.

There is one exception.  If the UUO is a GETTAB (CALLI AC,41) and the AC
contains <112,,11> (%CNMNT), TOPS-20 returns 040000 in the AC instead of
invoking PA1050.  If this GETTAB is used before  any  other  UUOs,  your
program  can  determine the monitor type and thereby avoid further UUOs.
In this way you can write a single program that will work in native mode
for both TOPS-10 and TOPS-20.



3.3  NEW VERSION OF PA1050

A new version of PA1050 may be made available to certain sites, but only
with   product   line   approval.    This   version  of  PA1050  is  not
DIGITAL-supported at all.

The new version of  PA1050  has  the  following  enhancements  over  the
supported version:

     a.  It fully supports all options of the FILOP. UUO at the level of
         TOPS-10  version 7.01.  (This differs from the support level of
         the older version, which provides only limited FILOP. support.)

     b.  It runs in a non-zero section, leaving  the  entire  section  0
         available  to the user program.  However, it will only simulate
         UUOs issued from section 0 of the TOPS-10 user program.













                               CHAPTER 4

                           MEMORY MANAGEMENT



This chapter describes differences in the way you  manage  memory  under
TOPS-10 and TOPS-20.



4.1  ILLEGAL MEMORY REFERENCES

Under TOPS-10, your program can reference only the  memory  assigned  to
it.   Your program requests a larger memory assignment using the CORE or
PAGE. UUO.  This memory  assignment  can  be  "physical"  or  "virtual,"
depending  upon  system  and  user  parameters, and it can be limited by
system or user restrictions.

Under TOPS-10, your program  could  get  the  message  "?Illegal  memory
reference" in either of two ways:

     a.  If  your  program  attempts  to  access  an  unassigned  memory
         address.

     b.  If your program attempts to store into a read-only high segment
         page.


Under TOPS-20, an illegal memory reference is  much  more  rare  because
when  your program begins executing, it automatically receives 256K (per
section) of virtual memory.  Therefore, all addresses  are  legal.   The
first  time  that  your program references a previously unassigned page,
TOPS-20 automatically  allocates  that  page  and  assigns  it  to  your
program, so that the access will be legal.

The read-only high segment case is handled in a  different  way.   Under
TOPS-20,  there  is  no distinction between the low segment and the high
segment, and there is no distinction between  read-only  and  read-write
programs.  Instead, whether a memory reference is legal is determined on
a page-by-page basis.  Each page of  a  program  can  have  any  of  the
following access levels:

     a.  It can have read-only  access,  meaning  that  a  store  memory
         reference to that page is illegal.
MEMORY MANAGEMENT                                               Page 4-2
ILLEGAL MEMORY REFERENCES                                      16 Jan 84


     b.  It can  have  write  access,  meaning  that  any  reference  is
         permitted.

     c.  It can have copy-on-write access, meaning that when the program
         first  writes into the page, that program will be given its own
         separate copy of the page.


In  practice,  all  pages  of  all  shared  system  programs  are  given
copy-on-write access protection.  Thus each job starts out with a shared
copy of each page, but as it stores into each data  page,  that  job  is
given a private copy of the data page.  Reentrant code pages continue to
remain shared among all jobs running the program.

When running under PA1050, a TOPS-10  program  can  receive  a  form  of
illegal   memory   reference   error.    PA1050  simulates  the  TOPS-10
environment by using the software interrupt system to intercept all page
faults.  (The term "page fault" is a hardware term used to describe what
happens when a program references an unassigned page.) When a page fault
occurs,  PA1050  displays  an  error  message indicating that an invalid
address reference has occurred.



4.2  THE JOB DATA AREA

JOBDAT, the job data area, comprises addresses 40 through 137 (octal) of
the  low  segment  and the first eight words of the high segment.  Under
TOPS-10, JOBDAT contains a great deal of memory management  information,
such  as the starting address of the program and the location of the DDT
symbol table.

As a general rule, PA1050 attempts to maintain the program's JOBDAT area
exactly as TOPS-10 does.

The list below gives the following information about  each  location  in
the JOBDAT area:

     a.  Its name and use under TOPS-10

     b.  Whether it is set by LINK-20

     c.  Whether it is accessed by TOPS-20, including the  TOPS-20  EXEC
         unless otherwise specified.


In regard to whether it is  set  by  LINK-20,  keep  in  mind  that  any
location  can  be  set by LINK-20 if a MACRO program explicitly stores a
value by means of the ORG or LOC pseudo-operations.
MEMORY MANAGEMENT                                               Page 4-3
THE JOB DATA AREA                                              16 Jan 84


4.2.1  Low Segment Job Data Area

The following is a list of all low-segment job data area locations  that
TOPS-10 programs can use:

     1   .JBUUO -- Used by hardware for processing local UUOs (opcodes 0
         through 37).  Not set by LINK-20 or accessed by TOPS-20.

     2   .JB41 -- Executed to start the user-programmed operator service
         routine.  Set by LINK-20 in the same way as LINK-10.

     3   .JBERR -- System  program  error  count.   Set  by  LINK-20  to
         indicate number of errors in loading.

     4   .JBREL -- Highest physical memory  location  available  to  the
         user program.  Not set by LINK-20 or accessed by TOPS-20.

     5   .JBBLT -- Used by LINK-10.  Not used by LINK-20 or accessed  by
         TOPS-20.

     6   .JBDDT -- The start address of DDT,  if  loaded.   The  TOPS-20
         EXEC references this word to determine if DDT is loaded, and to
         obtain the DDT starting address.  If DDT  is  not  loaded,  the
         TOPS-20  EXEC  merges  DDT into your address space, starting at
         location 770000, and stores the starting address into .JBDDT.

         LINK-20 does not set .JBDDT  unless  you  load  DDT  with  your
         program.

     7   .JBHSO -- (TOPS-20 only) The page number of the  high  segment.
         This  location  is  used  for an internal monitor purpose under
         TOPS-10, and so is useful to user programs only under  TOPS-20.
         Set by LINK-20.  Not accessed by TOPS-20.

    10   .JBHRL -- High segment addresses (first free location,  highest
         legal address).  Set by LINK-20.  Not accessed by TOPS-20.

    11   .JBSYM -- Pointer to program symbol  table.   Set  by  LINK-20.
         Accessed  by  DDT-20 and FILDDT-20.  Not accessed by TOPS-20 or
         TOPS-20 EXEC.

    12   .JBUSY -- Pointer to undefined symbol table.  Set  by  LINK-20.
         Accessed  by  DDT-20 and FILDDT-20.  Not accessed by TOPS-20 or
         TOPS-20 EXEC.

    13   .JBSA -- First free low-segment address and start address.  Set
         by  LINK-20.   TOPS-20  accesses this location when it starts a
         process, if the process has a TOPS-10 style entry  vector  word
         (see description later in this chapter).

    14   .JBFF -- Address of the first free location after  the  program
         high segment.  Set by LINK-20.  Not accessed by TOPS-20.
MEMORY MANAGEMENT                                               Page 4-4
THE JOB DATA AREA                                              16 Jan 84


    15   .JBPFH -- Pointer to page fault handler.  Not set by LINK-20 or
         accessed by TOPS-20.

    16   .JBREN -- REENTER address.  Set by LINK-20 only when SIMDDT  or
         ALGDDT  is  loaded  with  your  program.   (This  is  the  same
         convention as  for  LINK-10.)  This  location  is  accessed  by
         TOPS-20  when  you  type a REENTER command if the process has a
         TOPS-10 style entry vector word (see description later in  this
         chapter).    There  is  an  implementation  difference  between
         TOPS-10 and TOPS-20 when the value in .JBREN contains 0.  under
         TOPS-10,  you will get the error message "?No start adr." Under
         TOPS-20, execution will begin at address 0 (AC 0).

    17   .JBAPR -- Address of APR trap routine.  Not set by  LINK-20  or
         accessed by TOPS-20.

    20   .JBCNI -- State of APR.  Not set  by  LINK-20  or  accessed  by
         TOPS-20.

    21   .JBTPC -- PC after user-enabled trap.  Not set  by  LINK-20  or
         accessed by TOPS-20.

    22   .JBOPC -- Last user-mode program counter.  Not set  by  LINK-20
         or accessed by TOPS-20.

    23   .JBOVL -- Address of header block for root link of  an  overlay
         structure.  Set by LINK-20.  Not accessed by TOPS-20.

    24   .JBCOR -- Core information (left half is highest address in low
         segment,   right  half  is  user-specified  argument  for  last
         executed SAVE or  GET  command).   The  left  half  is  set  by
         LINK-20.  Not accessed by TOPS-20.

    25   .JBINT -- Address of  error-intercepting  block.   Not  set  by
         LINK-20 or accessed by TOPS-20.

    26   .JBOPS -- Reserved for object-time systems.  Not set by LINK-20
         or accessed by TOPS-20.

    27   .JBCST -- Reserved  for  customers.   Not  set  by  LINK-20  or
         accessed by TOPS-20.

    30   .JBVER -- Program version number and flags.   Set  by  LINK-20.
         Accessed  by the TOPS-20 EXEC to obtain the version number when
         the  process  has  a  TOPS-10  style  entry  vector  word  (see
         description later in this chapter).

MEMORY MANAGEMENT                                               Page 4-5
THE JOB DATA AREA                                              16 Jan 84


4.2.2  High Segment Job Data Area

The high segment job data area is also  known  as  the  "Vestigial  Data
Area." It comprises the first eight words of the program high segment.

All locations in the high segment data area are set by LINK-20, but none
are accessed by TOPS-20 or the TOPS-20 EXEC.  All are updated by PA1050.



4.2.3  Deleting JOBDAT External Symbols

If your TOPS-20 program does not reference any JOBDAT symbols, then  you
may  wish  to  delete  the JOBDAT symbols from the LINK-20 symbol table.
You may do this with the /NOINITIAL switch to LINK-20.



4.3  THE ENTRY VECTOR AND THE PROGRAM DATA VECTOR (PDV)

The job data area is not normally used by native TOPS-20 programs.   The
information  stored  in the job data area by TOPS-10 programs is kept in
two control blocks, the Entry Vector and the Program Data  Vector  (PDV)
in  TOPS-20  programs.  This section describes the uses of these control
blocks.



4.3.1  The Entry Vector

The entry vector is a control block of three or more words.   The  first
three words have the following format:

          JRST start-address
          JRST reenter-address
          version number

The "start-address"  is  the  starting  address  of  the  program.   The
"reenter-address"  is  the  address  to  which  control  passes when the
REENTER command is typed to the TOPS-20 EXEC.  The "version  number"  is
the standard TOPS-10/TOPS-20 version number.

All words after the third  are  user-defined  and  should  be  JRSTs  to
alternate entry points in the program.

If you use LINK-20 to link a program containing  one  or  more  modules,
then  precisely one of those modules must contain either a start address
or an entry vector.  You specify a start address in a  MACRO-20  program
by ending the source module with

                                   END                      start-addr
MEMORY MANAGEMENT                                               Page 4-6
THE ENTRY VECTOR AND THE PROGRAM DATA VECTOR (PDV)             16 Jan 84


Alternatively, you may insert an entry vector into  your  MACRO-20  main
program by using this format:

        ...
label:  JRST    start-addr
        JRST    reenter-addr
        EXP     version number
        JRST    ...  ; optional
        ...
        END     <length,,label>

As this format illustrates, you may insert an  entry  vector  into  your
program by simply coding the appropriate JRST and version number fields.
This form of the END pseudo-operation specifies the length of the  entry
vector and its address.



4.3.2  The Entry Vector Word

The expression used as the  last  END  statement  operand  above  is  an
example  of an "entry vector word." An entry vector word is a word which
indicates whether or not an entry vector exists, and where it is.  There
are two forms of an entry vector word.

The first form is a "TOPS-20 style entry vector word." Its format is

          XWD     length,address

The "address" is the address of the entry  vector  in  memory,  and  the
"length" is the number of words in the entry vector.

The second form is a "TOPS-10 style entry vector word." Its format is:

          JRST     address

That is, the left halfword contains  254000  (since  octal  254  is  the
opcode of JRST), which is too large to be a length value.  The "address"
is the starting address of the  program.   Note  however,  as  explained
below, that this address is never used by TOPS-20.

Each TOPS-20 process has an entry vector word whose value is  stored  in
the  PSB (process state block), the TOPS-20 internal control block which
contains information about the process.  (The PSB is unavailable to  the
user  program.)  A  user program can store an entry vector word into the
PSB by means of the SEVEC JSYS.  Either style of entry vector  word  can
be stored.

LINK-20 determines the type of entry vector word to  use  from  the  REL
file  for  your  main  program.   If your main program specifies a start
address, then the corresponding entry  vector  word  is  TOPS-10  style,
while  if  it  specifies  an  entry vector, then the corresponding entry
vectory word is TOPS-20 style.
MEMORY MANAGEMENT                                               Page 4-7
THE ENTRY VECTOR AND THE PROGRAM DATA VECTOR (PDV)             16 Jan 84


When you use LINK-20 to link your program, you may produce either a core
image  or  an  EXE file.  If LINK-20 produces a core image, then it uses
the SEVEC JSYS to store the entry vector  word  into  the  PSB  for  the
process.   If  LINK-20  produces  an  EXE file, then it stores the entry
vector word into the directory page of the EXE file.

In all cases (core image or EXE file, TOPS-10  or  TOPS-20  style  entry
vector  word),  LINK-20 fills in those words of the job data area listed
earlier in this chapter.



4.3.3  When TOPS-20 Uses The Job Data Area

The form of the entry vector word determines whether  TOPS-20  uses  the
job data area.

When TOPS-20 loads an EXE file into memory, either because  of  the  GET
JSYS  or  the RUN TOPS-20 EXEC command, then it updates the entry vector
word in the PSB for the process from information in the  directory  page
of  the  EXE  file.   If  the  EXE file was created by either TOPS-20 or
LINK-20, then the directory file contains  an  entry  vector  word,  and
TOPS-20 simply copies that into the PSB.  If the EXE file was created by
TOPS-10 or LINK-10, then it contains no entry vector word,  and  TOPS-20
creates  and  stores an entry vector word of the form "JRST start-addr",
where "start-addr" is the value in .JBSA, the start address field of the
job data area.

When TOPS-20 or the  TOPS-20  EXEC  needs  the  start  address,  reenter
address, or version number of a process, then it obtains it as follows:

     a.  If the entry vector word in the PSB  has  254000  in  the  left
         half,  indicating  a  TOPS-10  style  entry  vector  word, then
         TOPS-20 or the TOPS-20 EXEC takes the information it needs from
         one of the fields .JBSA, .JBREN or .JBVER in the job data area.

     b.  Otherwise there is a  TOPS-20  style  entry  vector  word,  and
         TOPS-20 or the TOPS-20 EXEC takes the information it needs from
         the entry vector.


Notice that although it is possible for a program's starting address  to
be  stored  in  more than one place, the above rules determine precisely
which of them is used by TOPS-20.



4.3.4  The Program Data Vector

The Program Data Vector (PDV) for a program is needed  only  in  TOPS-20
programs  running  in  non-zero sections.  See the TOPS-20 Monitor Calls                                                   _______ _______ _____
Reference Manual for further information._________ ______












                               CHAPTER 5

                              INPUT/OUTPUT



This chapter summarizes the  differences  between  TOPS-10  and  TOPS-20
input/output programming.



5.1  FILE SPECIFICATIONS

For comparison purposes, here are the formats of  the  the  TOPS-10  and
TOPS-20 file specifications:

TOPS-10:  dev:[p,pn,sfd,...]name.ext<pro>

TOPS-20:  dev:<dir.subdir...>name.typ.gen;P(protection);T;A(account)

For a complete description of the meanings  of  these  fields,  see  the
TOPS-10  Commands  Manual  and  the TOPS-20 Commands Manual.  (There are         ________  ______                   ________ ______
additional TOPS-20  fields  for  TAPE  and  DECNET  files).   The  major
similarities and differences are as follows:

     a.  The "dev" specifies a device name.  Unless a particular command
         description  specifies  otherwise,  the  default  is  DSK:  for
         either system.

     b.  The TOPS-10  project-programmer  number,  "[p,pn,sfd,...]",  is
         replaced by the TOPS-20 directory name, "<dir.subdir...>".

     c.  The TOPS-10 "name.ext" fields specify the file  name  and  file
         name  extension.   In  TOPS-20 file specifications, a different
         terminology is used, although the syntax  (separating  the  two
         fields  with  a  ".")  is  the same.  The corresponding TOPS-20
         fields are written as "name.typ", standing for  file  name  and
         file  type.   As  in the case of TOPS-10, you may omit these in
         the  TOPS-20  file  specification  for  non-directory  devices.
         Under  TOPS-10,  the  name  may  be  six  characters,  and  the
         extension may be three characters.  Under TOPS-20,  each  field
         may be 39 characters.

     d.  The "<pro>" field of the TOPS-10 file specification is the file
         protection code.  The TOPS-20 file protection code specified in
         the P(protection) field performs the same function,  but  under
INPUT/OUTPUT                                                    Page 5-2
FILE SPECIFICATIONS                                            16 Jan 84


         different  rules.  The differences are summarized later in this
         chapter.

     e.  The ".gen" field of the TOPS-20  specification  identifies  the
         generation  number or version number of the file.  As explained
         in the TOPS-20  User's  Guide,  you  can  have  more  than  one                _______  ______  _____
         generation of the same file.

     f.  The remaining fields of  the  TOPS-20  file  specification  are
         optional  attributes, which allow you to specify (respectively)
         the fact that the file is a temporary  file,  and  the  account
         code for the file.


Under TOPS-10, a user program must parse a  file  specification.   Under
TOPS-20, parsing is performed automatically by the GTJFN JSYS, described
below.



5.2  TOPS-20 PROJECT-PROGRAMMER NUMBERS

For  compatibility,  TOPS-20  provides  a  project-programmer  for  each
directory  on  the  system.   This  permits  TOPS-10  programs with file
specification  parsers  to  run   under   TOPS-20   with   little   code
modification, or none if PA1050 is used.

You can use the TOPS-20 EXEC command TRANSLATE to provide translation in
either  direction.  This command accepts as a parameter either a TOPS-20
directory  name  or  a  project-programmer  number  and   provides   the
translation from one format to the other.  For example:

          @TRANSLATE (DIRECTORY) PS:<XENAKIS>           _________             ____________
          PS:<XENAKIS> (IS) PS:[4,665]

or

          @TRANSLATE (DIRECTORY) PS:[4,665]           _________             __________
          PS:[4,665] (IS) PS:<XENAKIS>

There are two JSYSs you may use in a MACRO-20 program to  provide  these
translations.   The PPNST JSYS translates a project-programmer number to
a directory (or sub-directory) name, and the  STPPN  JSYS  performs  the
reverse translation.

All TOPS-20 project-programmer numbers are of the form [4,n], where  "n"
is the internal TOPS-20 directory number.
INPUT/OUTPUT                                                    Page 5-3
FILE ACCESS CODES                                              16 Jan 84


5.3  FILE ACCESS CODES

The TOPS-20 file protection codes provide a great deal more  flexibility
than the TOPS-10 codes.  Some differences are as follows:

     a.  TOPS-20 file access bits are selective.  For example,  you  can
         permit a user to read (or even write) a file without being able
         to get a directory listing of the file.  (This permits  you  to
         "hide"  a  file  so  that  only  certain programs can access it
         without knowing its name.) By contrast, TOPS-10 file protection
         codes  are subsets of each other.  You cannot add one privilege
         and remove another.

     b.  Directory access bits are also selective.

     c.  TOPS-10 projects are determined by the first half (the  project
         number)  of  the PPN.  TOPS-20 user groups may be set up in any
         way, with no dependency on the account code.


See the TOPS-20 User's Guide  for  complete  information  on  the  "user        _______ ______ _____
group"  and  "directory  group"  concepts,  which  replace  the  TOPS-10
"project numbers."  For  full  information  on  TOPS-20  disk  file  and
directory access bits, see the TOPS-20 Monitor Calls Reference Manual.                               _______ _______ _____ _________ ______



5.4  THE JOB FILE NUMBER (JFN)

On TOPS-10, each open file is associated with a channel number from 0 to
17 (octal).  When using FILOP., there may be up to 80 channels.

Under TOPS-20, each file you access is associated with a  number  called
the  "job  file  number" or JFN.  There is no architectural limit (other
than the 18-bit JFN size) to the number of files your job can access  at
one  time,  although  you may be limited by availability of other system
resources.

There  are  two  reserved  JFN  values.   The   first   is   octal   100
(symbolically,  .PRIIN),  which  is  the JFN of your primary input file.
This is almost always input from your terminal keyboard.  The  other  is
octal  101  (symbolically,  .PRIOU),  which  is  the JFN of your primary
output file, usually your terminal display.



5.5  JSYS SEQUENCE FOR ACCESSING A FILE

The sequence of UUOs used to read or write a TOPS-10 file  is  typically
the following:

     a.  OPEN
INPUT/OUTPUT                                                    Page 5-4
JSYS SEQUENCE FOR ACCESSING A FILE                             16 Jan 84


     b.  LOOKUP and/or ENTER

     c.  IN(PUT) and/or OUT(PUT)

     d.  CLOSE

     e.  RELEAS


Let us examine the corresponding sequence using JSYSs.



5.5.1  Processing The File Specification (GTJFN)

In most cases, a program which  accesses  a  file  starts  with  a  file
specification.   For example, the file specification may have been typed
by the person using the program.  Under TOPS-10,  your  program  has  to
contain  code  which  parses the file specification, so that you can use
the OPEN UUO to open the device and then, typically, use LOOKUP or ENTER
to access the file with the specified file name and extension.

When writing a file access program under TOPS-20, you must start with  a
file  specification.   The  GTJFN  monitor call automatically parses the
file specification for you, and returns a JFN for the file.   From  that
point  on,  your program may make any further monitor requests it wishes
for that file, simply by specifying the JFN for the file.

Notice that the GTJFN monitor call does not actually open the file,  and
so  it  is not really the counterpart of either the OPEN or LOOKUP/ENTER
UUOs.  Instead, it simply provides a number to be  associated  with  the
given file specification.



5.5.2  Command Parsing

If you are writing a command parser, there are more convenient  ways  to
access files.  Here are some of the options:

     1.  You  may  specify  that  the  GTJFN  is  to   take   the   file
         specification  from  the user's terminal.  This means that your
         program  won't  have  to  do  any  file  specification   string
         processing  at all, but will only have to work with the numeric
         JFN.

     2.  If you wish to accept wildcard specifications, then you may use
         the  GNJFN  monitor  call  to access each file requested by the
         user in turn.

     3.  You may use the COMND JSYS to perform all your command  parsing
         and obtain all your JFNs automatically.

INPUT/OUTPUT                                                    Page 5-5
JSYS SEQUENCE FOR ACCESSING A FILE                             16 Jan 84


For further information, refer to the descriptions of the  GTJFN,  GNJFN
and COMND JSYSs in the TOPS-20 Monitor Calls Reference Manual.                       _______ _______ _____ _________ ______



5.5.3  Opening And Closing The File (OPENF And CLOSF)

Once the JFN has been obtained, you may execute the OPENF  monitor  call
to  open  the file.  This monitor call provides all the functionality of
the OPEN, LOOKUP, and ENTER UUOs.  Within the OPENF call you specify the
type of access (read access, write access, and so forth) that you wish.

Your program may then access the file for input and output in the manner
described below.  After you have finished with the file, you execute the
CLOSF monitor call to close it.



5.5.4  String Input/output (SIN And SOUT)

There are several JSYSs which perform input and output functions, and we
will examine several of them here and in the following subsections.  All
require that the file be opened with GTJFN and OPENF.

For most applications, the best and most  efficient  input/output  JSYSs
are  SIN and SOUT.  These provide input and output operations for entire
strings of bytes or words.

When your program executes the OPENF monitor call,  it  must  specify  a
byte  size  between  1  and 36.  This byte size is used with the SIN and
SOUT monitor calls.  You provide SIN and SOUT with a  byte  pointer  and
either  the  number  of  bytes  or  the value of a terminating byte, and
TOPS-20 transmits those bytes to or from the file.

Intuitively, it may  seem  that  any  string-oriented  monitor  call  is
probably  fairly  inefficient.   However,  SIN and SOUT are very heavily
optimized,  and  so  they  are  the  most  efficient  choices  for  most
applications.



5.5.5  Dump Mode Input/output With DUMPI And DUMPO

When you use OPENF to open a file, you may choose a file data mode.   If
you  choose  dump  mode,  then  your program may use the DUMPI and DUMPO
monitor calls to perform input and output operations.

Of all the I/O methods, DUMPI and DUMPO provide the  functionality  most
similar  to  dump  mode on TOPS-10.  When your program executes DUMPI or
DUMPO, it passes the address of an IOWD list in the same format as  that
passed  with  the dump mode IN and OUT UUOs.  For that reason, DUMPI and
DUMPO are often the most convenient to use when converting programs from
using UUOs to using JSYSs.
INPUT/OUTPUT                                                    Page 5-6
JSYS SEQUENCE FOR ACCESSING A FILE                             16 Jan 84


On TOPS-10, dump mode I/O is very efficient since the IOWD argument list
is  very  close  to  the  argument list that TOPS-10 needs to perform an
input/output operation.   On  TOPS-20,  however,  DUMPI  and  DUMPO  are
provided  only  for  TOPS-10  compatibility, and they are less efficient
than SIN and SOUT for disk input/output operations.



5.5.6  Mapping A File's Pages With PMAP

There is an additional input/output method on  TOPS-20  that  is  unlike
anything  available  under  TOPS-10.  When it can be used, it is usually
the most efficient TOPS-20 disk input/output method.

The TOPS-20  file  system  stores  files  on  disk  in  512-word  pages.
(TOPS-10  uses 128-word blocks.) This page size is identical to the page
size of your executing program.  You may use the PMAP  JSYS  to  specify
that  a  page  of  your executing program is to be "mapped to" a page of
your file.

To understand how this works, consider this example.  Suppose  that  you
wish  to  access  data  in word positions 6000-6777 (octal) in your disk
file.  Of course, you could use SIN or DUMPI to request TOPS-20 to  read
that  data  into  your  program's  memory, but there is a more efficient
method with PMAP.  You may choose a page of your program's  memory,  say
page  125  (octal),  and  your  program  can execute a PMAP monitor call
specifying that page 6 of the file is to be mapped to page 125  of  your
program.  The result will be that page 125 of your program will actually
be page 6 of the disk file.  If your program fetches the word at  memory
location  125643, then it will actually be fetching the word at position
6643 in the file.  If your  program  stores  into  the  word  at  memory
location  125005,  then you will modify the word in position 6005 in the
file.

The example in the last paragraph made an assumption that the  file  had
been  opened  for both input and output access.  As you can see from the
example, PMAP is extremely  convenient  to  use  when  your  program  is
updating  a  file.   (BEWARE:   When using PMAP to create new pages in a
file, you must the CHFDB JSYS to update the  file  byte  size  and  byte
count,  as  explained in the TOPS-20 Monitor Calls Reference Manual.  If                             _______ _______ _____ _________ ______
you don't do this, the data in the file may not be accessible  to  other
programs.)

Suppose, however, that the file is not opened for  write  access.   Then
there  are  two  other  choices:   input  access  only and copy-on-write
access.  In the case of input access,  storing  into  the  PMAPped  page
would  be illegal.  In the case of copy-on-write access, if your program
did store into the page, then  the  disk  file  would  not  be  changed.
Instead,  TOPS-20  would  automatically make a separate copy of the page
for your program, effectivly  "un-PMAPping"  the  file  page  from  your
program's  page.   From that point on, your program could read and write
data from the memory page without having any effect on the disk file.
INPUT/OUTPUT                                                    Page 5-7
THE FILE DESCRIPTOR BLOCK                                      16 Jan 84


5.6  THE FILE DESCRIPTOR BLOCK

TOPS-20 has a file descriptor block (FDB) for each disk file.   The  FDB
contains  general  information  about  the file and, as such, performs a
function similar to TOPS-10's LOOKUP/ENTER block (the RIB).  You may use
the GTFDB JSYS to read the FDB, and the CHFDB JSYS to change it.

The following  is  a  list  of  commonly  used  fields  of  the  TOPS-10
LOOKUP/ENTER   block  that  might  be  useful  to  the  TOPS-20  systems
programmer and where the same information can be obtained for a  TOPS-20
file, if possible:

.RBPPN    gives the project-programmer number of the directory.  This is
          not provided in the FDB.

.RBNAM    Gives the SIXBIT file name.  The  FDB  field  .FBNAM  gives  a
          pointer to the file name block for the file.

.RBEXT    Gives the SIXBIT file name extension.  The  FDB  field  .FBEXT
          contains a pointer to the file type block.

          The word .RBEXT also contains a portion of the  creation  date
          for  the file.  The creation date and time is given in the FDB
          in the word .FBCRV.

          The word .RBEXT also contains a portion  of  the  last  access
          date for the file.  In the FDB, .FBREF gives the date and time
          of the last non-write access to the  file,  .FBWRT  gives  the
          date  and  time  of last user write, and .FBCRE gives the date
          and time of last write to the file by any program.

          You can  use  the  SFTAD  and  RFTAD  JSYSs  to  set  or  read
          information about a file's times and dates.

.RBPRV    Protection code for file.  The FDB field .FBPRT gives the file
          access bits.

          The word .RBPRV also contains the data mode in which the  file
          was  created.   This  information  is provided in the FDB word
          .FBBYV in the bit field  FB%MOD.   Note  that  this  FDB  word
          contains  other  information  as well, including the file byte
          size in bit field FB%BSZ.

          For information about creation date and time, see  description
          above under .RBEXT.

.RBSIZ    Gives the written file length in words.  The FDB field  .FBSIZ
          gives  the  size  of  the  file in bytes.  You may compute the
          number of words from the file byte  size  given  in  FDB  word
          .FBBYV, bit field FB%BSZ.

.RBVER    Gives the octal version number of the file, if it  is  an  EXE
          file.  This is not provided by the FDB.
INPUT/OUTPUT                                                    Page 5-8
THE FILE DESCRIPTOR BLOCK                                      16 Jan 84


.RBSPL    The file name to be used to label output  to  spooled  device.
          This is not provided by the FDB.

.RBEST    Estimated length of file.  This is not provided by the FDB.

.RBALC    Number of contiguous 128-word blocks.  This is not provided by
          the FDB.



5.7  NON-BLOCKING INPUT/OUTPUT

All TOPS-20 disk input/output operations are "blocking,"  in  the  sense
that your program stops executing until the I/O JSYS has completed.

If you wish to perform non-blocking input/output operations,  then  some
extra programming is necessary.  The following steps may be used:

     a.  The program executes the CFORK JSYS  to  create  a  sub-process
         with the same memory map (CR%MAP option).  The starting address
         of the sub-process is specified to be the input/output code.

     b.  The sub-process executes  the  input/output  operation  and  is
         blocked waiting for it to complete.

     c.  The original program (that is, the superior process)  continues
         executing.

     d.  When the input/output operation  is  complete,  the  subprocess
         becomes  unblocked.   It  can  then  set  a  flag  in memory to
         indicate that the I/O operation is complete,  and  execute  the
         HALTF JSYS to halt subprocess execution.

     e.  Since the subprocess has the same memory map  as  the  superior
         process,  the  flag  set  by  the subprocess is also set in the
         superior process's memory.  The superior process need only test
         this flag from time to time to determine that the I/O operation
         has been completed.


In place of the last two steps, the software interrupt facility  can  be
used.   The  superior process can enable the software interrupt facility
to cause an interrupt when the inferior process halts.












                               CHAPTER 6

                      TRAP AND INTERRUPT HANDLING



This chapter describes  how  to  handle  traps  interrupts  in  MACRO-20
programs.



6.1  GENERAL CONSIDERATIONS

There are three related methods of  handling  traps  and  interrupts  in
MACRO-10 programs:

     a.  Use the APRENB UUO.

     b.  Set up a .JBINT interrupt block

     c.  Use the software interrupt system  (.PIINI,  .PISYS  and  DEBRK
         UUOs).


In MACRO-20 programs, almost all of these interrupts must be handled  by
the  software  interrupt  system.   The  exception  is  that  arithmetic
interrupts can be handled  with  the  SWTRP%  JSYS,  with  substantially
improved performance over the software interrupt system.



6.2  JSYSs FOR CONTROLLING THE SOFTWARE INTERRUPT SYSTEM

The following are the most important JSYSs  which  control  the  TOPS-20
software interrupt system:

     a.  SIR -- Set up the interrupt  table  addresses.   You  generally
         start with this JSYS.

     b.  EIR -- Enable the interrupt system.  This JSYS permits  you  to
         specify  the  particular  conditions  for  which  you wish your
         program to get interrupted.

     c.  DIR -- Disable the interrupt system.
TRAP AND INTERRUPT HANDLING                                     Page 6-2
JSYSs FOR CONTROLLING THE SOFTWARE INTERRUPT SYSTEM            16 Jan 84


     d.  CIS -- Clear the interrupt system.

     e.  AIC -- Activate interrupt channels.

     f.  DEBRK -- Dismiss current interrupt.

     g.  ATI -- Assign terminal code to a channel.   This  JSYS  permits
         you  to  define  interrupts  for  any  terminal  input  control
         characters, including CTRL/C interrupts.


Complete details on these and other JSYSs for  controling  the  software
interrupt  system  will  be found in the TOPS-20 Monitor Calls Reference                                         _______ _______ _____ _________
Manual.______



6.3  HANDLING INTERRUPTS THROUGH A SUB-PROCESS

Some types  of  operation  programmed  through  interrupts  in  MACRO-10
programs  must  be handled different in TOPS-20 programs.  The principal
examples of this are related to non-blocking I/O  operations.   You  may
write  TOPS-10  input/output  operations  which  permit  your program to
continue executing while the I/O operation is in progress;  you can  use
the  software  interrupt  system  to  requests TOPS-10 to interrupt your
program when the I/O operation is complete.

All TOPS-20 I/O operations are of the "blocking" kind.  This means  that
your   program's  execution  is  automatically  blocked  until  the  I/O
operation is complete.  However, you may change your program  to  obtain
the same effect by the following technique:

     a.  Have your program  start  a  sub-process  to  perform  the  I/O
         operations.  The program and the sub-process continue executing
         together.

     b.  The sub-process executes the I/O JSYS,  and  its  execution  is
         blocked.  The main program continues to execute.

     c.  When  the  I/O  operation  has   completed,   the   sub-process
         interrupts  the  main  program.   This signals the main program
         that the I/O operation is complete.

     d.  The sub-process halts, using the HALTF JSYS.


This is a very general technique which can be used in a wide variety  of
situations.   Any  JSYS which normally blocks execution of a program can
be turned into a non-blocking JSYS in this way.
TRAP AND INTERRUPT HANDLING                                     Page 6-3
THE APRENB UUO                                                 16 Jan 84


6.4  THE APRENB UUO

The following are the functions programmed by the APRENB  UUO,  and  the
corresponding methods for programming them in TOPS-20:

     a.  AP.POV -- Pushdown list overflow

         JSYS:  Enable the .ICPOV  interrupt  channel  in  the  software
         interrupt system.

     b.  AP.ILM -- Memory protection violation.

         JSYS:  Enable the .ICIRD and .ICIWR (illegal  memory  read  and
         write) channels in the software interrupt system.

     c.  AP.NXM -- Nonexistent memory.

         JSYS:  This type of interrupt normally can't occur in a TOPS-20
         program.    However,   you   may   intercept  nonexistent  page
         references by enabling  the  .ICNXP  channel  in  the  software
         interrupt system.

     d.  AP.PAR -- Memory parity error.

         JSYS:  This is a hardware error.  There is no way to  intercept
         it in MACRO-20 programs.

     e.  AP.CLK -- Clock tick has occurred.

         JSYS:   There  is  no  corresponding  JSYS  functionality   for
         intercepting  each  clock  tick, since TOPS-20 does not support
         realtime capabilities.

     f.  AP.FOV and AP.AOV -- Floating  point  and  arithmetic  overflow
         errors.

         JSYS:  There are two possible methods:

        (i)  With the software interrupt system, by enabling the  .ICAOV
             and .ICFOV interrupt channels.

       (ii)  With the SWTRP% JSYS.





6.5  THE .JBINT INTERRUPT BLOCK

The following are the  functions  programmed  by  means  of  the  .JBINT
intercept  block,  and the corresponding methods for programming them in
TOPS-20:
TRAP AND INTERRUPT HANDLING                                     Page 6-4
THE .JBINT INTERRUPT BLOCK                                     16 Jan 84


     a.  ER.EIJ -- Error in job.

         JSYS:  This general error condition cannot be  handled  by  the
         TOPS-20  software  interrupt  system  except the general method
         described earlier in this chapter.  In using that  method,  you
         allow  your  program to run as a sub-process, and then have the
         superior process gain control whenever any error occurs in  the
         sub-process.

     b.  ER.TLX -- Time limit exceeded.

         JSYS:   There  is  no  corresponding  JSYS  functionality   for
         intercepting  this  error, except by the general method using a
         sub-process described earlier in this chapter.

     c.  ER.QEX -- quota exhausted.

         JSYS:   There  is  no  corresponding  JSYS  functionality   for
         intercepting  this  error, except by the general method using a
         sub-process described earlier in this chapter.   However,  most
         input/output  JSYSs  give  an error return which indicates when
         your quota has been exceeded.

     d.  ER.FUL -- File structure full.

         JSYS:   There  is  no  corresponding  JSYS  functionality   for
         intercepting  this  error, except by the general method using a
         sub-process described earlier in this chapter.

     e.  ER.OFL -- Disk unit offline.

         JSYS:   There  is  no  corresponding  JSYS  functionality   for
         intercepting  this  error, except by the general method using a
         sub-process described earlier in this chapter.

     f.  ER.ICC -- CTRL/C typed.

         JSYS:  You may assign a TOPS-20 programmed  interrupt  for  any
         control character, including CTRL/C, using the ATI JSYS.

     g.  ER.IDV -- Problem on device.

         JSYS:  This condition may be intercepted by enabling the .ICDAE
         (I/O error) channel of the TOPS-20 software interrupt system.




6.6  THE SOFTWARE INTERRUPT SYSTEM

The following paragraphs list the conditions intercepted by the  TOPS-10
software  interrupt  system,  and  the  methods  for performing the same
functions in MACRO-20 programs.
TRAP AND INTERRUPT HANDLING                                     Page 6-5
THE SOFTWARE INTERRUPT SYSTEM                                  16 Jan 84


The following are the I/O conditions:

     a.  PS.RID -- Input done.

         JSYS:   There  is  no  corresponding  JSYS  functionality   for
         intercepting  this  error, except by the general method using a
         sub-process described earlier in this chapter.

     b.  PS.ROD -- Output done.

         JSYS:   There  is  no  corresponding  JSYS  functionality   for
         intercepting  this  error, except by the general method using a
         sub-process described earlier in this chapter.

     c.  PS.REF -- End of file.

         JSYS:  This condition may be intercepted by enabling the .ICEOF
         channel of the TOPS-20 interrupt system.

     d.  PS.RIE -- Input error.

         JSYS:  This condition may be intercepted by enabling the .ICDAE
         (I/O error) channel of the TOPS-20 software interrupt system.

     e.  PS.ROE -- Output error.

         JSYS:  This condition may be intercepted by enabling the .ICDAE
         (I/O error) channel of the TOPS-20 software interrupt system.

     f.  PS.RDO, PS.RDF, and PS.RQE -- Device offline, device  full  and
         quota exceeded

         JSYS:  These conditions may  be  intercepted  by  enabling  the
         .ICDAE  (I/O  error)  channel of the TOPS-20 software interrupt
         system.

     g.  PS.RWT -- I/O wait

         JSYS:   There  is  no  corresponding  JSYS  functionality   for
         intercepting  this  error, except by the general method using a
         sub-process described earlier in this chapter.

     h.  PS.ROL -- Device on-line

         JSYS:  As a general rule, there is no way for a TOPS-20 process
         to  intercept  device on-line conditions.  In certain cases, it
         may be possible to have a sub-process  wait  for  a  device  to
         become  available  and  then signal the superior process, using
         the general method described earlier in this chapter.

     i.  PS.RRC -- RIB has changed.
TRAP AND INTERRUPT HANDLING                                     Page 6-6
THE SOFTWARE INTERRUPT SYSTEM                                  16 Jan 84


         JSYS:  There is no equivalent TOPS-20 functionality.


The following are the non-I/O condtions:

     a.  .PCTLE -- Time limit has been exceeded.

         JSYS:   There  is  no  corresponding  JSYS  functionality   for
         intercepting  this  error, except by the general method using a
         sub-process described earlier in this chapter.

     b.  .PCSTP -- CTRL/C interrupt

         JSYS:  You may assign a TOPS-20 programmed  interrupt  for  any
         character, including CTRL/C, using the ATI JSYS.

     c.  .PCUUO -- A monitor call is about to be processed.

         JSYS:  The TFORK JSYS permits a process to intercept  all  JSYS
         calls  for  an  inferior  process.   You  may also use TFORK to
         intercept TOPS-20 UUO calls in a TOPS-20 program.

     d.  .PCIUU -- An illegal UUO has been executed.

         JSYS:  The analogous condition may be intercepted  by  enabling
         the   .ICILI  (illegal  instruction)  channel  of  the  TOPS-20
         software interrupt system.

     e.  .PCIMR -- An illegal memory location has been referenced.

         JSYS:  As explained in this manual in the  chapter  on  "MEMORY
         MANAGEMENT,"   TOPS-20   programs   get  fewer  illegal  memory
         references than TOPS-10 programs.  You may  enable  the  .ICIRD
         (illegal memory read), .ICIWR (illegal memory write) and .ICNXP
         (reference to nonexistent page) software interrupt channels.

     f.  .PCACK -- Address check has occurred on a device.

         JSYS:  This can be intercepted by enabling the .ICDAE (data I/O
         error)  software  interrupt  channel.   In addition, this error
         condition is indicated by error  returns  in  the  input/output
         JSYSs.

     g.  .PCARI -- An arithmetic exception has occurred.

         JSYS:  There are two possible methods:

        (i)  With the software interrupt system, by enabling the  .ICAOV
             and .ICFOV interrupt channels.

       (ii)  With the SWTRP% JSYS.

TRAP AND INTERRUPT HANDLING                                     Page 6-7
THE SOFTWARE INTERRUPT SYSTEM                                  16 Jan 84


     h.  .PCPDL -- Pushdown list overflow.

         JSYS:  You may intercept this condition by enabling the  .ICPOV
         TOPS-20 software interrupt channel.

     i.  .PCNXM -- A non-existent memory location has been referenced.

         JSYS:  You may intercept references to  non-existent  pages  by
         enabling the .ICNXP software interrupt channel.

     j.  .PCAPC -- A line frequency clock tick has occurred.

         JSYS:   There  is  no  corresponding  JSYS  functionality   for
         intercepting  each clock tick, because TOPS-20 does not support
         realtime capabilities.

     k.  .PCUEJ -- A fatal error has occurred in your job.

         JSYS:  This very general error condition cannot be  handled  by
         the  TOPS-20  software  interrupt system except by means of the
         general method described earlier in  this  chapter.   In  using
         that  method,  you  allow your program to run as a sub-process,
         and then have the superior process gain  control  whenever  any
         error occurs in the sub-process.

         Note that you may intercept illegal  instructions  by  enabling
         the .ICILI software interrupt channel.

     l.  .PCXEJ -- An external condition has caused a fatal job error.

         JSYS:  This very general error condition cannot be  handled  by
         the  TOPS-20  software  interrupt system except by means of the
         general method described earlier in  this  chapter.   In  using
         that  method,  you  allow your program to run as a sub-process,
         and then have the superior process gain  control  whenever  any
         error occurs in the sub-process.

     m.  .PCKSY -- A KSYS warning has occurred.

         JSYS:  There is no equivalent JSYS functionality.

     n.  .PCDSC -- The dataset status has changed.

         JSYS:   You  may  intercept  this  condition  by  assigning   a
         user-defined  software  interrupt  channel  by means of the ATI
         JSYS with the .TICRF argument code.

     o.  .PCDAT -- Either an ATTACH or a DETACH monitor  call  has  been
         executed.

         JSYS:  There is no equivalent JSYS functionality.
TRAP AND INTERRUPT HANDLING                                     Page 6-8
THE SOFTWARE INTERRUPT SYSTEM                                  16 Jan 84


     p.  .PCWAK -- A WAKE monitor call has occurred.

         JSYS:  There is  no  directly  equivalent  JSYS  functionality.
         However,   you   may   program  the  same  effect  by  using  a
         sub-process, following the general process described earlier in
         this  chapter.   You start up a sub-process and have it dismiss
         itself with the THIBR  JSYS.   Then,  when  another  wakes  the
         sub-process  with  a TWAKE JSYS, the sub-process can signal the
         superior process.

     q.  .PCABK -- An address-break condition has occurred.

         JSYS:  A process cannot intercept an address break occurring in
         itself, but it can enable the .ICNXP software interrupt channel
         to intercept address breaks occurring  in  sub-processes.   The
         entire  programming  method is described in the TOPS-20 Monitor                                                                 _______
         Calls Manual, in the description of the ADBRK JSYS.         _____ ______

     r.  .PCIPC -- Your program has received an IPCF packet in its input
         queue.

         JSYS:  the .MUPIC function of the MUTIL JSYS  can  be  used  to
         enable  for  interrupts  when  an  IPCF  packet is in the input
         queue.

     s.  .PCQUE -- An ENQ/DEQ resource is available for ownership.

         JSYS:  You may intercept this condition by means of the  .ENQIS
         function of the ENQ JSYS.

     t.  .PCNET -- The network topology has changed.

         JSYS:  There is no equivalent JSYS functionality.

     u.  .PCJBI -- Another job has interrupted your job by means of  the
         PIJBI UUO.

         JSYS:  There is no equivalent JSYS functionality.




6.7  OTHER INTERRUPT CONDITIONS

The following are additional conditions  which  may  be  intercepted  by
means of the TOPS-20 software interrupt system:

     a.  Pseudo-terminal interrupts  can  be  enabled  with  the  .MOAPI
         function of the MTOPR JSYS.

     b.  Terminal interrupts can be enabled with the .MOTPS function  of
         the MTOPR JSYS.
TRAP AND INTERRUPT HANDLING                                     Page 6-9
OTHER INTERRUPT CONDITIONS                                     16 Jan 84


     c.  Magnetic  tape  interrupts  can  be  enabled  with  the  .MOPST
         function of the MTOPR JSYS.













                               CHAPTER 7

                         OTHER MONITOR FEATURES



This chapter summarizes the differences in going from TOPS-10 to TOPS-20
for the following features:

     1.  IPCF (inter-process communications facility)

     2.  Accounting




7.1  IPCF

IPCF (inter-process communications facility) works the  same  way  under
TOPS-10 and TOPS-20.  The similarities and differences are summarized in
the following paragraphs:

     a.  The format of an IPCF packet is the same, and  offsets  can  be
         referenced by means of the same symbols (.IPCFL, .IPCFS, etc.).
         However, the flag definitions  have  different  symbols  (e.g.,
         IP.CFB  under  TOPS-10  versus  IP%CFB under TOPS-20), and some
         flags may have different meanings.

     b.  THE IPCFS. UUO corresponds to the MSEND JSYS to send  a  packet
         to  another  process.   The IPCFR. UUO corresponds to the MRECV
         JSYS to receive a packet.

     c.  The IPCFQ. UUO queries a queue for  an  available  packet.   An
         equivalent function can be performed by setting the IP%CFB flag
         in the argument to the MRECV JSYS.

     d.  The TOPS-10 QUEUE. UUO is used  to  send  messages  to  QUASAR,
         ORION  and  ACTDAE.  Under TOPS-20, all such IPCF send requests
         are performed by the MSEND JSYS.

     e.  Rules for assigning packet quotas are the same in both systems.

     f.  Symbolic names for processes may have different formats, as  in
         the following examples:

OTHER MONITOR FEATURES                                          Page 7-2
IPCF                                                           16 Jan 84


         1.  [SYSTEM]INFO on TOPS-10 versus <SYSTEM>INFO on TOPS-20.

         2.  [10,10]FOO on TOPS-10 versus <JONES>FOO on TOPS-20.


         To reduce the effect  of  this  incompatibility,  use  symbolic
         names which do not depend upon PPNs.

     g.  Certain requests to  [SYSTEM]INFO  are  not  implemented  under
         TOPS-20.     Specifically,    the   following   functions   are
         implemented:

         1.  .IPCIW -- Return PID associated with specified name.

         2.  .IPCIG -- Return name associated with specified PID.

         3.  .IPCII -- Assign specified name to PID  of  process  making
             request.


         All other functions are not implemented.

     h.  The TOPS-10 [SYSTEM]IPCC functions are performed  by  means  of
         the  MUTIL JSYS.  The functions are similar, but some functions
         may have operating system-dependent differences.




7.2  ACCOUNTING

This section summarizes the differences in accounting.



7.2.1  FACT Files

FACT files are not supported under TOPS-20.   If  your  installation  is
planning  a move from TOPS-10 to TOPS-20 in the future, you should start
now to rewrite you accounting programs to use  USAGE  files,  which  are
implemented on both TOPS-10 and TOPS-20 in a compatible manner.



7.2.2  USAGE Files

The USAGE file accounting system has been implemented  in  a  compatible
manner on both TOPS-10 and TOPS-20.  Information on USAGE files for both
TOPS-10  and  TOPS-20  will  be  found  in   the   manual   AA-4181B-TK,
AD-4181B-T1, TOPS-10/TOPS-20 USAGE File Specification.             _______________ _____ ____ _____________

There are three major differences between TOPS-10 and TOPS-20 USAGE file
record formats.
OTHER MONITOR FEATURES                                          Page 7-3
ACCOUNTING                                                     16 Jan 84


The first difference is in the Identification  Record.   Under  TOPS-10,
this   record  contains  a  12-digit  project/programmer  number  and  a
12-character user name.  The TOPS-20 record contains a 39-character user
name.

The second difference is that there is one more record  in  the  TOPS-10
session  entry than there is for TOPS-20.  The additional TOPS-10 record
is  called  "Session  Record  #2,"  and  it   contains   the   following
information:

     a.  Number of disk reads and writes

     b.  Real and virtual kilo-core seconds

     c.  EBOX and MBOX megacounts

     d.  Monitor calls

     e.  Monitor commands

     f.  Scheduling class

     g.  TTY input and output characters

     h.  Wake count

     i.  Run queue quotient


These items are not computed by the TOPS-20 scheduler, and so  they  are
not provided in the TOPS-20 USAGE files.

The third major difference is that TOPS-20 maintains USAGE file  entries
for file retrieval, archival, migration and collection.



7.2.3  Adding Installation-dependent USAGE File Entries

A TOPS-10 program may request an additional USAGE record  by  using  the
QUEUE. UUO to notify the accounting daemon (ACTDAE) to add the record.

A TOPS-20 program may perform the same  action  simply  by  executing  a
USAGE JSYS.  The format of the USAGE file record is identical.



7.2.4  Account Validation

Under TOPS-10, account validation occurs  at  login  time  or  when  the
SESSION  monitor  command  is  given.   The  accounting  daemon (ACTDAE)
verifies that a given account is valid for  a  given  project-programmer
number.  Valid accounts are listed in the accounting file by PPN.
OTHER MONITOR FEATURES                                          Page 7-4
ACCOUNTING                                                     16 Jan 84


Under  TOPS-20,  account  validation  occurs  when  the  SACCT  JSYS  is
executed, either when the job logs in, or when the EXEC executes the SET
ACCOUNT command.  Valid user groups are listed in the accounting file by
account.












                               CHAPTER 8

                    PLANNING FOR EXTENDED ADDRESSING



If you are now planning on converting a program from TOPS-10 to TOPS-20,
or  if  you  are  writing a program to run under both operating systems,
then you are probably planning to run the program for a long  time  into
the future.  This means that you may at some time wish to take advantage
of the extended addressing capabilities of TOPS-20.

The purpose of this chapter is to help you write your  programs  now  so
that  you'll  be  able  to  run them with extended addressing later.  It
discusses the precautions you should take now so that the conversion  to
extended addressing will be easy later.

It is not the objective of this chapter do give a complete discussion of      ___
how  extended  addressing  works.   These  details  can  be found in the
Hardware Reference Manual and in the  TOPS-20  Monitor  Calls  Reference________ _________ ______             _______  _______  _____  _________
Manual.______



8.1  EXTENDED ADDRESSING CONCEPTS

Let's begin with a discussion of the basic concepts.



8.1.1  Availability Of Extended Addressing

Extended addressing is available only on 2040,  2050  and  2060  systems
using  the KL10 Model B CPU.  It is not available on the earlier Model A
CPU, nor is it available in the KS10 CPU used on 2020 systems.



8.1.2  The Extended Address Format

Programs written without extended addressing capabilities use an  18-bit
address  space,  providing  your  program  with  a  total of 256K words.
Extended addressing, as the name implies, extends the 18-bit address  to
a 30-bit address, providing up to 1,073,741,824 words.
PLANNING FOR EXTENDED ADDRESSING                                Page 8-2
EXTENDED ADDRESSING CONCEPTS                                   16 Jan 84


Each 30-bit address should be thought of  as  in  two  parts,  a  12-bit
section   number  and  an  18-bit  word  number  (within  the  section).
Therefore, there 4096 sections, numbered  0  to  octal  7777,  and  each
section contains 256K words.



8.1.3  Use Of Section 0

Hardware implementation of extended  addressing  requires  that  certain
machine  execute  differently.   This  change  means,  of  course,  that
existing programs could not run  without  modification  in  an  extended
addressing environment.

In order to provide a compatible environment for non-extended  programs,
a  sharp  division  has  been  made between section 0 and the other 4095
sections (the  "non-zero  sections").   This  division  results  in  the
following conventions:

     a.  A program running in section 0 runs exactly as it  would  on  a
         non-extended  machine.   This  means that all existing programs
         can run as before, even on an extended machine.

     b.  A program running in  a  non-zero  section  uses  the  modified
         machine  instructions  and addressing algorithms.  This usually
         means that it could no longer execute in section 0.




8.1.4  Use Of Section 1

Another way in which this sharp division emerges has  to  do  with  data
references across section boundaries.  The hardware implementation makes
it impossible for a program running in section  0  to  reference  memory
locations in non-zero sections, and very difficult for a program running
in a non-zero section to reference memory  locations  in  section  zero.
This  makes it difficult to convert a program "gradually," by converting
a portion of it at time to use extended addressing.

For this reason, TOPS-20 provides a method for remapping memory so  that
section 0 and section 1 share the same memory.  That is, TOPS-20 sets up
its memory page tables so that a user program fetch-from or store-into a
word  of  section 0 is hardware equivalent to a fetch-from or store-into
the corresponding word of section  1.   There  is  a  special  technique
provided  so  that a program can switch back and forth between section 0
and section 1, so that  even  an  unmodified  non-extended  program  can
temporarily  "visit"  section  1  and  reference  data in other extended
sections.
PLANNING FOR EXTENDED ADDRESSING                                Page 8-3
EXTENDED ADDRESSING CONCEPTS                                   16 Jan 84


8.1.5  Partitioning Program Into Sections

Even when running in a non-zero  section,  it  is  generally  easier  to
reference   data   in   your   own  section  than  in  another  section.
Specifically, if an instruction is executing in a non-zero section,

     a.  The instruction can reference memory  in  its  own  section  in
         almost   exactly   the  same  way  that  an  instruction  in  a
         non-extended program references memory.

     b.  The instruction can reference memory in another section only if
         it does so by means of indexing or indirect addressing.


This means that additional code is often necessary to reference data  in
another section.



8.2  DESIGNING A COMPATIBLE PROGRAM

If you are writing a non-extended program which may later  be  converted
to  use  extended  addressing,  then  proper  design  now  will make the
conversion much easier later.



8.2.1  Partitioning Data Into Sections

The first main design job is to decide  how  data  will  be  distributed
among  the  different sections.  More specifically, when writing a piece
of code, it will be necessary for you to know which data values will  be
in the same section as the code and which will be in different sections.

You will need to formulate some sort of rule for making  this  decision.
For  example,  assuming that all the code for a program will reside in a
single section, you may decide upon the following rules:

     I.  All data aggregates or structures occupying less than 100 words
         of storage will be allocated in the same section as the code.

    II.  All data aggregates or structures which are variable in size or
         which are larger than 100 words of storage will be allocated in
         a different section.


In deciding tradeoffs of this sort, keep in mind  that  more  code  will
generally  be  needed  to access data in the second class than to access
data in the  first  class.   Therefore,  for  example,  a  20-word  data
structure  which is accessed dozens of times in the code should possibly
be allocated in the same section as the code.
PLANNING FOR EXTENDED ADDRESSING                                Page 8-4
DESIGNING A COMPATIBLE PROGRAM                                 16 Jan 84


8.2.2  Design Of Control Blocks

Where control blocks simply contain data, the control  blocks  can  have
the  same  format  as  they would in a non-extended program.  But if the
storage  blocks  contain  addresses  of  other  data  areas,  then  some
precautions must be taken.

     a.  Allocate an entire word of storage for each  address.   Do  not
         use  the left halfword of an address for anything else.  Later,
         when you convert to extended addressing, the left halfword will
         contain the section number.

     b.  Leave two words for each byte pointer, although in some  cases,
         as described below, the two words won't be needed.

     c.  If possible, avoid using the same word of a  control  block  as
         either  a  data  value or an address.  It will simplify certain
         types of algorithms to know that a non-zero value in a  certain
         field of a control block can never be anything but an address.




8.2.3  Identifying Monitor Calls

As you lay out your program design in terms of modules, you should  plan
to  isolate  all  monitor calls in small subroutines.  These subroutines
may have to be rewritten when your program is  converted  to  run  in  a
non-zero  section.   The  reason  is  that  some JSYSs must be specified
differently in non-zero sections.  See the TOPS-20 Monitor Calls  User's                                           _______ _______ _____  ______
Guide for further information._____



8.3  SPECIFIC COMPATIBLE CODING TECHNIQUES

Once program  design  has  been  completed  and  actual  coding  begins,
specific methods should be used so that later rewriting will made easier
or unnecessary.



8.3.1  Local vs. Global Memory References

In the following  paragraphs,  we  will  be  discussing  how  you  write
instructions  now so that they will work properly later when the program
is to run in a non-zero section.

In our discussions, we will distinguish  between  "local"  and  "global"
memory accesses.  An instruction is said to make a "local" memory access
if it is referencing only memory locations in the same  section  as  the
instruction  itself.  If the instruction accesses a memory location in a
different section, it is said to be making a "global" memory reference.
PLANNING FOR EXTENDED ADDRESSING                                Page 8-5
SPECIFIC COMPATIBLE CODING TECHNIQUES                          16 Jan 84


As you are reading these discussions, keep in mind that there is no such
distinction for the non-extended programs you are running now, since all
instructions and data run in section 0.  Rather, the terms  "local"  and
"global"  apply  to  memory  references  which  will  be  made when your
programs are converted to extended addressing later.  This means that as
you are writing your code, you must constantly keep in mind what kind of
data you are accessing.  If you are accessing data which will  later  be
in  a  different  section  than the accessing instruction, then you must
take certain precautions.  If you are sure that the data being  accessed
will  be in the same section as the executing instruction, then you must
still take some precautions, but those precautions are less onerous.



8.3.2  Local Memory Access

If you are writing code which  will  only  access  memory  in  the  same
section as the one in which the code will execute, it will generally not
be  necessary  to  take  any  special  precautions.   For  example,  the
instruction

        MOVE   AC1,2000

will load AC1 with the contents of word 2000  in  whatever  section  the
MOVE instruction executes.

Also compatible are situations where the address is an accumulator.  For
example, the instruction

        MOVE   AC1,AC2

loads AC1 with the contents of AC2.

On the other hand, if you wish  an  instruction  to  reference  data  in
another section, then it must use indexed or indirect addressing.



8.3.3  Using Indexed Addressing

An index register contains an address which modifies the address of  the
instruction  using  it.   An  indexed  instruction in a non-zero section
treats a positive number in the left half of  an  index  register  as  a
section  number.   A  negative  left halfword is ignored, and the memory
address is considered to be local.

Let's take a look at some examples.


         Example 1.  Referencing fields of a large control block.         _______ _

         Suppose that you are writing instructions to  reference  fields
         in a large control block at a fixed location in memory.  If the
         control block begins at location 300000  in  your  non-extended
PLANNING FOR EXTENDED ADDRESSING                                Page 8-6
SPECIFIC COMPATIBLE CODING TECHNIQUES                          16 Jan 84


         program, then your program might contain instructions like:

               MOVE   AC1,300125

         or

               ADDM   AC2,300140

         These instructions will continue to work when your program runs
         in an extended section, provided that the control block remains
         in the same section as the code.

         However, if the control block is to be in a  different  section
         than  the  code  that  references it, then your references will
         have to be indexed.  This  means  that  you  should  index  the
         references  to it now in your non-extended program, so that the
         same code will work later.

         For example, the instructions shown above could be  changed  as
         follows:

             MOVE   AC3,[EXP control-block-address]
             MOVE   AC1,125(3)
             ...
             ADDM   AC2,140(3)


         When running in  section  zero,  all  these  instructions  will
         reference the control block in section 0, but when running in a
         non-zero section, these instructions will reference the control
         block in the section number in the left half of AC3.

         Example 2.  Indexing with an AOBJN pointer.         _______ _

         You may continue to use an AOBJN pointer as an index  register,
         provided  that  you  only reference data in the same section as
         the executing code.  Since the left half of an AOBJN pointer is
         always  negative,  the  CPU  will not interpret it as a section
         number, and  the  effective  address  computation  will  always
         result in an address in the same section as the executing code.

         Suppose you wish to search a 100-word array  called  TABLE  for
         the value in AC5.  The following code would work:

                   MOVSI  AC1,-100
             LUP:  CAMN   AC5,TABLE(AC1)
                   JRST   FOUND
                   AOBJN  AC5,LUP


         In a non-zero section, the same code works provided that  TABLE
         is in the same section as the code.

PLANNING FOR EXTENDED ADDRESSING                                Page 8-7
SPECIFIC COMPATIBLE CODING TECHNIQUES                          16 Jan 84


Notice that an important consequence of these rules is that  you  should
never  put  a  positive  number into the left half of an index register.
This means that most AOBJP loops will have to be recoded.



8.3.4  Using Indirect Addressing

A non-extended indirect address word contains an 18-bit address as  well
as  an  optional  indirect bit and index register field.  This format is
recognized when the program is running in a non-zero  section,  provided
that  bit 0 of the indirect address word contains a 1-bit.  If the first
bit is a 0-bit, then the word is considered to be in an extended format,
containing  a  30-bit  address  and  repositioned indirect bit and index
register fields.

In many cases, the easiest way to deal with this rule is simply  to  set
the leftmost bit of indirect words of non-extended programs, for example
when the word is part of an argument list.   For  this  purpose,  it  is
useful to define

          OPDEF    ifiw[1b0]

and use IFIW to define indirect words.  When the program is moved  to  a
nonzero  section, the indirect reference will still work as before, even
in the case where the indirect word contains  an  indexed  offset.   The
index  register in the extended program can contain an extended address,
so the same indirect word can reference data in other sections.

If the indirect word contains only the address  of  the  data,  with  no
indirection  or indexing, then leave the leftmost bit off.  The extended
version of the word will, of course,  have  to  contain  a  full  30-bit
address.

Finally, if the word must contain both a  full  address  and  either  an
indirect  bit  or an index register, then the section of code setting up
the indirect word may have  to  be  reprogrammed  when  the  program  is
extended.

         Example 3.  Indirect Address Word with Indexing         _______ _

         Let's modify example 2 to do the same thing, but  so  that  the
         array  TABLE  will be in a different section than the code when
         the program is extended.

PLANNING FOR EXTENDED ADDRESSING                                Page 8-8
SPECIFIC COMPATIBLE CODING TECHNIQUES                          16 Jan 84


                   MOVEI  AC1,0
             LUP:  CAMN   AC5,@[TABLE(AC1)]
                   JRST   FOUND
                   CAIGE  AC5,100-1
                   AOJA   AC5,LUP


         This program segment would almost work in  a  nonzero  section,
         but  the  [TABLE(AC1)]  would  have  to  be  changed  to use an
         extended pointer.  (In assembler language, this could be  coded
         as  [EFIW TABLE,AC5].)  Thus,  this  segment  would  have to be
         recoded, if only slightly.




8.3.5  Stacks

The stack instructions (PUSH, POP, PUSHJ, POPJ and ADJSP)  use  a  stack
pointer  in  a register.  If you are certain that your stack will always
be in the same section as the code that uses it, then  you  may  keep  a
negative  stack count in the stack pointer.  As in the case of the index
register, the CPU will always assume that the stack is  in  the  current
section.   You  should  never  use the left half of the stack pointer to
store a positive value.

If the stack might sometimes be in a different section  from  the  code,
then  your converted program will have to use an extended stack pointer,
which contains the section number in the left  half.   When  running  in
section  zero,  the  left  halfword  of  your  stack  pointer  should be
initialized to zero, and never tested in any way.  If you use  the  left
half  as  a  stack count, then you must write additional instructions to
test for stack overflow.

Use the ADJSP instruction to adjust a stack pointer.  Avoid use  of  ADD
or SUB for this purpose.



8.3.6  The MOVEI And XMOVEI Instructions

The MOVEI instruction has several purposes, some of which will not  work
in a nonzero section.  This means that great care must be used.

The MOVEI instruction loads the right halfword of the  operand  register
with  the effective address computed from the second operand.  It zeroes
out the left halfword.  This is true in both zero and nonzero sections.

Consider the instruction

        MOVEI   AC,addr
PLANNING FOR EXTENDED ADDRESSING                                Page 8-9
SPECIFIC COMPATIBLE CODING TECHNIQUES                          16 Jan 84


If "addr" represents a data value to be  loaded  into  the  accumulator,
then the instruction should remain as is.  If the instruction is to load
the AC with the actual address of a data area, then it should be changed
in one of the following ways:

     a.  If the data area will be in the same section as the  code  when
         the program is converted to run in a nonzero section, then use:

                 XMOVEI  AC,addr

         The XMOVEI instruction (which has the  same  opcode  as  SETMI)
         works the same as MOVEI in section 0.  In a nonzero section, it
         loads the left halfword of AC with the section  number  of  the
         instruction.

     b.  If the data area will be in a different section, use

                 MOVE   AC,[EXP addr]


In either case, the AC will contain the correct section  number  in  the
left halfword.

Now consider this instruction:

        MOVEI  AC1,1(AC1)

This is a standard technique to add 1 to an address in  an  accumulator,
but it will not work for an extended address.  Replace it with:

        ADDI   AC1,1

This will work correctly for both nonextended and extended addresses.

Finally, the instruction:

        MOVEI  AC1,1(AC2)

must be replaced with:

        MOVE  AC1,AC2
        ADDI  AC1,1

if you wish to have compatible code.



8.3.7  Using XHLLI To Test For A Nonzero Section

The XHLLI instruction has the same opcode as HLLI, and in section  0  it
loads  the  left  half  of the register operand with zero.  In a nonzero
section, XHLLI loads the left half of  the  operand  register  with  the
section  number.   Therefore,  it  is  useful  for constructing extended
addresses.
PLANNING FOR EXTENDED ADDRESSING                               Page 8-10
SPECIFIC COMPATIBLE CODING TECHNIQUES                          16 Jan 84


If you wish to write a section of code that you know  won't  work  in  a
nonzero section, you may want to add a test to see if it is executing in
section zero.  The following test will work:

         XHLLI  AC,
         TLNE   AC,-1
         JRST   ERROR


The XHLLI instruction loads the left half of AC with the current section
number,  and  the  two instructions which follow test for zero and go to
ERROR if the section number is not zero.












                               CHAPTER 9

                 OBTAINING MONITOR INFORMATION (GETTAB)



TOPS-10 programs obtain monitor  information  from  a  number  of  UUOs,
principally  GETTAB.   The  last  chapter  of  this manual describes the
corresponding TOPS-20 procedure for each UUO (including,  at  a  general
level, GETTAB).  This chapter focuses on GETTAB.

Many of the GETTAB tables permit you to obtain information  about  other
jobs  in  the  system.   Much  of  this information is not available for
TOPS-20 jobs, usually because the process orientation of  TOPS-20  makes
that information meaningless.

As a general rule, information about other jobs can be obtained only  by
means  of  the  GETJI and GETAB JSYSs.  If you can't get the information
from one of those JSYSs, then it is not available  to  a  non-privileged
program.   A  privileged  program can, of course, use the SNOOP% JSYS to
patch the monitor to obtain any information desired.

The remainder  of  this  chapter  describes  the  method  for  obtaining
information corresponding to each of the GETTAB UUO tables.



9.1  .GTSTS (GETTAB TABLE 0)

Job status word, indexed by job or segment number.

Bits:

     a.  JB.UJA -- Job number is assigned

         JSYS:  The GETJI JSYS gives an error return if the  job  number
         argument is invalid.

     b.  JB.ULI -- Job is logged in.

         JSYS:  The word at offset .JILNO in the job  information  table
         contains  the  job's  logged-in  directory  number, and will be
         non-zero if the job is logged in.  This word  may  be  obtained
         with the GETJI JSYS.
OBTAINING MONITOR INFORMATION (GETTAB)                          Page 9-2
.GTSTS (GETTAB TABLE 0)                                        16 Jan 84


     c.  JB.UML -- Terminal is at monitor level.

         JSYS:  The word at offset .JIT20 in the job  information  table
         indicates  whether  the job is at EXEC level.  This word may be
         obtained with the GETJI JSYS.

     d.  JB.UOA -- Terminal output is available.

         JSYS:  This information may be obtained for any job by means of
         the following procedure:

         a.  Obtain the job's terminal number from the  job  information
             table at offset .JITNO.  This word may be obtained with the
             GETJI JSYS.

         b.  Use the SOBE JSYS  to  skip  if  the  specified  terminal's
             output buffer is empty.


     e.  JB.UDI -- Job is waiting at monitor level.

         JSYS:  Under TOPS-20, this state is functionally equivalent  to
         JB.UML, described above.

     f.  JB.UJC -- JACCT set for job.

         JSYS:  TOPS-20 has no equivalent to JACCT.

     g.  JB.URN -- Job is running.

         JSYS:   Because  TOPS-20  is   process-oriented   rather   than
         job-oriented,  the  concept of a job running is not relevant to
         TOPS-20.  However, you can determine if a terminal is in  input
         wait  by  means  of the .MOPIH function of the MTOPR JSYS.  The
         controlling terminal number of a job will be  found  at  offset
         .JITNO in the job information table.  This word can be obtained
         with the GETJI JSYS.

     h.  JB.UFC -- TTY is in full character set mode.

         JSYS:  The TT%WAK field  returned  by  the  RFMOD  JSYS  for  a
         terminal  indicates  the  wakeup  characters.   The controlling
         terminal number for a job can be found as for JB.URN above.

     i.  JB.UNE -- TTY has no echo

         JSYS:  The TT%ECO bit of the value returned by the  RFMOD  JSYS
         for  a terminal indicates whether the terminal is echoing.  The
         controlling terminal number for a  job  can  be  found  as  for
         JB.URN above.

     j.  JB.UTO -- Job is in "TO" state
OBTAINING MONITOR INFORMATION (GETTAB)                          Page 9-3
.GTSTS (GETTAB TABLE 0)                                        16 Jan 84


         JSYS:  This information is not available under TOPS-20.

     k.  JB.UCC -- Change since last JOBSTS

         JSYS:  No equivalent JSYS functionality.

     l.  JB.UJN (9 bits) -- Job number

         JSYS:  The word at offset .JIJNO of the job  information  table
         contains  the  job  number.  This word may be obtained with the
         GETJI JSYS.




9.2  .GTADR (GETTAB TABLE 1)

Job relocation and protection, indexed by job or segment number.

JSYS:  There is no corresponding JSYS function.



9.3  .GTPPN (GETTAB TABLE 2)

Project-programmer number, indexed by job or segment number.

JSYS:  The job's logged-in directory number is the word at offset .JILNO
in  the job information table.  This word may be obtained with the GETJI
JSYS.



9.4  .GTPRG (GETTAB TABLE 3)

User program name, indexed by job or segment number.

JSYS:  Depending upon what is needed, there are several possibilities:

     a.  The JOBNAM table of the GETAB JSYS  gives  the  system  program
         name for each job.

     b.  The JOBPNM table of the GETAB JSYS gives the user program  name
         for each job.

     c.  The GETNM JSYS gives the program name for the current job.

OBTAINING MONITOR INFORMATION (GETTAB)                          Page 9-4
.GTTIM (GETTAB TABLE 4)                                        16 Jan 84


9.5  .GTTIM (GETTAB TABLE 4)

User runtime in jiffies, indexed by job number.

JSYS:  There are two possibilities:

     a.  The JOBRT table of the GETAB JSYS gives the  runtime  for  each
         job.

     b.  The RUNTM JSYS gives the runtime for either the entire  current
         job or for a specific process in the job.


The TICKPS table of the GETAB JSYS returns the number of  jiffies  in  a
second.



9.6  .GTKCT (GETTAB TABLE 5)

Job kilo-core ticks, indexed by job number

JSYS:  There is no equivalent JSYS functionality  since  kilocore  ticks
are not computed by TOPS-20.



9.7  .GTPRV (GETTAB TABLE 6)

Job privilege bits, indexed by job number.

Bits:
     a.  JP.IPC -- IPCF
     b.  JP.DPR -- Highest disk priority for job
     c.  JP.MET -- METER.
     d.  JP.POK -- POKE.
     e.  JP.CCC -- Change CPU specification
     f.  JP.HPQ -- Highest high-priority queue
     g.  JP.NSP -- Device unspooling
     h.  JP.ENQ -- ENQ/DEQ
     i.  JP.RTT -- RTTRP (real time trap)
     j.  JP.SPA -- PEEK/SPY -- any core
     k.  JP.SPM -- PEEK/SPY -- monitor core


JSYS:  Information of this type is not available for an arbitrary job in
the  system.  However, you can use RPCAP to return the capabilities of a
particular process that is under control of your job.
OBTAINING MONITOR INFORMATION (GETTAB)                          Page 9-5
.GTSWP (GETTAB TABLE 7)                                        16 Jan 84


9.8  .GTSWP (GETTAB TABLE 7)

Swapping parameters, indexed by job number

JSYS:  There is no equivalent JSYS information on  a  job-by-job  basis.
However,  the  SYSTAB  and  NSWPGS  tables  of  the  GETAB  JSYS provide
system-wide swapping information.



9.9  .GTTTY (GETTAB TABLE 10)

Job's controlling terminal, indexed by job number

JSYS:  The JOBTTY table of the GETAB JSYS gives the same information.



9.10  .GTCNF (GETTAB TABLE 11)

System configuration table, indexed by item number.

Items:

     a.  %CNFG0-CNFG4 -- ASCIZ system name

         JSYS:  The SYSVER table of  the  GETAB  JSYS  gives  the  ASCIZ
         system name.

     b.  %CNDT0-CNDT1 -- ASCIZ system creation date

         JSYS:  The SYSVER table of the GETAB JSYS gives an ASCIZ string
         containing  the system name and creation date.  The BLDTD table
         of the GETAB JSYS gives the system generation date and time.

     c.  %CNTAP -- SIXBIT name of system device

         JSYS:  There is no corresponding TOPS-20  system  device.   For
         most  purposes,  PS:  serves as the system device.  If desired,
         you may use the LNMST JSYS to translate PS:   to  its  original
         definition string.

     d.  %CNTIM -- Time of day in jiffies

         JSYS:  The ODCNV JSYS can return the time of day  milliseconds.
         The  number  of  jiffies  in  a second can be obtained from the
         TICKPS table of the GETAB JSYS.

     e.  %CNDAT -- Date in 15-bit binary format

         JSYS:  ODCNV can return the date in universal time/date format.
         The  GTAD  JSYS  returns  the current date and time in internal
         system format.
OBTAINING MONITOR INFORMATION (GETTAB)                          Page 9-6
.GTCNF (GETTAB TABLE 11)                                       16 Jan 84


     f.  %CNSIZ -- System memory size in words

         JSYS:  The NCPGS table of the GETAB JSYS gives  the  number  of
         pages of real (physical) user core.

     g.  %CNOPR -- SIXBIT name for operator TTY

         JSYS:  The name for the operator TTY is "CTY:", but  note  that
         the  operator  need  not  actually  be  at  that  terminal.  To
         communicate with the operator, a program should use the  PLEASE
         program.

     h.  %CNDEV -- Start of DDB chain

         JSYS:  This is not relevant to TOPS-20.

     i.  %CNSJN -- LH:  Maximum number of high segments.   RH:   Maximum
         number of jobs.

         JSYS:  SYSGT with the table name SNAMES returns the  number  of
         names  of  system  programs.  This is roughly equivalent to the
         TOPS-10 high segment concept.

         SYSGT with the table name JOBNAM returns the maximum number  of
         jobs that the system is configured for.

     j.  %CNTWR -- Two-register hardware and software flag

         JSYS:  No equivalent JSYS information.

     k.  %CNSTS -- Feature test switches

         JSYS:  In many cases there is no equivalent  JSYS  information,
         although  in  some  cases  the  TMON  JSYS  returns  equivalent
         information.

     l.  %CNSER -- APR serial number

         JSYS:  The APRID table of the GETAB JSYS  gives  the  processor
         serial number.

     m.  %CNNSM -- Number of nanoseconds per memory cycle

         JSYS:  This information is not available under TOPS-20.

     n.  %CNPTY -- LH:  Number of first PTY.  RH:   Number  of  PTYs  in
         system.

         JSYS:  The PTYPAR table  of  the  GETAB  JSYS  gives  the  same
         information, but with the halves reversed.

     o.  %CNFRE -- Pointer to bit map of core blocks.
OBTAINING MONITOR INFORMATION (GETTAB)                          Page 9-7
.GTCNF (GETTAB TABLE 11)                                       16 Jan 84


         JSYS:  This is not relevant to TOPS-20.

     p.  %CNLOC -- Address of low-segment core blocks

         JSYS:  This is not relevant to TOPS-20.

     q.  %CNOPL -- Pointer to Line Data Block (LDB) of operator TTY

         JSYS:  This is not relevant to TOPS-20.

     r.  %CNTTF -- Pointer to TTY free chunks

         JSYS:  This is not relevant to TOPS-20.

     s.  %CNLNS -- Pointer to current command TTY

         JSYS:  This information is not available under TOPS-20.

     t.  %CNLNP -- LH:  -(# of  TTY+PTY+CTY  lines).   RH:   Address  of
         LINTAB.

         JSYS:  The PTYPAR table of GETAB  can  give  you  the  terminal
         number  of the first pseudo-terminal (this equals the number of
         terminal lines) and the number of pseudo-terminals.

     u.  %CNVER -- Monitor version number

         JSYS:  The SYSVER table of GETAB returns an ASCIZ string giving
         the monitor name, version and date.

     v.  %CNDSC -- Dataset control table information

         JSYS:  This information is not available under TOPS-20.

     w.  %CNSGT -- Pointer to last dormant segment that was  deleted  to
         free a segment number

         JSYS:  This information is not relevant to TOPS-20.

     x.  %CNPOK -- Last location changed by a POKE. monitor call

         JSYS:  This information is not relevant to TOPS-20.

     y.  %CNPUC -- LH:  Job that made last POKE. RH:   Number  of  POKEs
         made.

         JSYS:  This information is not relevant to TOPS-20.

     z.  %CNWHY -- SIXBIT "reason for last reload"

         JSYS:  This information is not available under TOPS-20.
OBTAINING MONITOR INFORMATION (GETTAB)                          Page 9-8
.GTCNF (GETTAB TABLE 11)                                       16 Jan 84


    aa.  %CNTIC -- Number of clock ticks (jiffies) per second

         JSYS:  The TICKPS table of GETAB returns the same information.

    ab.  %CNPDB -- Pointer to Process Data Block (PDB) pointer tables

         JSYS:  This information is not relevant to TOPS-20.

    ac.  %CNRTC -- Resolution of runtime clock (units/sec)

         JSYS:  This information is not available under TOPS-20.

    ad.  %CNCHN -- Pointer to channel data block

         JSYS:  This information is not relevant to TOPS-20.

    ae.  %CNLMX -- Maximum number of logged-in jobs allowed

         JSYS:  The SYSGT JSYS with table  JOBNAM  returns  the  maximum
         number of jobs that the monitor is built for.

    af.  %CNBMX -- Maximum number of batch jobs allowed

         JSYS:  This information is not available under TOPS-20.

    ag.  %CNBMN -- Minimum number of jobs reserved to batch

         JSYS:  This information is not available under TOPS-20.

    ah.  %CNDTM -- Date/time in universal date/time format

         JSYS:  The GTAD JSYS returns the date  and  time  in  the  same
         format.

    ai.  %CNLNM -- Number of jobs logged in

         JSYS:  The SYSGT JSYS with the JOBNAM table returns the  number
         of  jobs the monitor is built for.  Write a loop with the GETJI
         JSYS for each possible job number, and count the number of jobs
         that are logged in.

    aj.  %CNBNM --Number of batch jobs logged in

         JSYS:  The SYSGT JSYS with the JOBNAM table returns the  number
         of  jobs the monitor is built for.  Write a loop with the GETJI
         JSYS for each possible job number, and test the .JIBCH field of
         the  job information block to count the number of jobs that are
         batch jobs.

    ak.  %CNYER, %CNMON, %CNDAY, %CNHOR, %CNMIN, %CNSEC -- Current year,
         month, day, hour, minute, second.
OBTAINING MONITOR INFORMATION (GETTAB)                          Page 9-9
.GTCNF (GETTAB TABLE 11)                                       16 Jan 84


         JSYS:  The ODCNV JSYS returns this information.

    al.  %CNGMB -- Offset from Greenwich Mean Time

         JSYS:  The ODCNV JSYS returns the offset  for  the  local  time
         zone  in  AC4, field IC%TMZ.  Also, the .SFTMZ function of TMON
         returns the local time zone.

    am.  %CNDBG -- Debug status
        (i)  ST%DBG -- System debugging in progress
       (ii)  ST%RDC -- Reload system on DEBUG stopcode
      (iii)  ST%RJE -- Reload system on JOB stopcode
       (iv)  ST%NAR -- No automatic reloading
        (v)  ST%CP1 -- Stop system if any CPU gets a CPU stopcode


         JSYS:  The DBUGSW table of  the  GETAB  JSYS  gives  equivalent
         information.

    an.  %CNFRU -- Number of free core blocks in use by monitor

         JSYS:  This information is not relevant to TOPS-20.

    ao.  %CNTCM -- Address of last TTY chunk

         JSYS:  This information is not relevant to TOPS-20.

    ap.  %CNCVN -- Customer version number

         JSYS:  The SYSVER  table  of  GETAB  returns  an  ASCIZ  string
         containing the monitor version number.

    aq.  %CNDVN -- DIGITAL version number

         JSYS:  The SYSVER  table  of  GETAB  returns  an  ASCIZ  string
         containing the monitor version number.

    ar.  %CNDFC -- Number of data channels on the system

         JSYS:  This information is not available under TOPS-20.

    as.  %CNRTD -- Number of realtime devices

         JSYS:  This information is not relevant to TOPS-20 because real
         time devices are not supported.

    at.  %CNHPQ -- Number of high priority queues

         JSYS:  This information is not relevant to TOPS-20 because high
         priority  queues  are  not  supported.  However, the SKED% JSYS
         returns information on the scheduler.
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-10
.GTCNF (GETTAB TABLE 11)                                       16 Jan 84


    au.  %CNLDB -- TTY device data block  word  pointing  to  line  data
         block

         JSYS:  This information is not relevant to TOPS-20.

    av.  %CNMVO -- Maximum vector offset for PISYS.

         JSYS:  This information is not relevant to TOPS-20.

    aw.  %CNMIP -- Maximum priority for PISYS.

         JSYS:  This information is not relevant to TOPS-20.

    ax.  %CNMER --  LH:   Offset  of  MTA  error  reporting  word.   RH:
         Address of first MTA DDB.

         JSYS:  This information is not relevant to TOPS-20.

    ay.  %CNET1 -- User address of EXEC AC T1 (for DAEMON)

         JSYS:  This information is not relevant to TOPS-20.

    az.  %CNLSD, %CNLLD, %CNLDD -- lengths of device data blocks

         JSYS:  This information is not relevant to TOPS-20.

    ba.  %CNEXM -- Address in JOBDAT of last examine  ("E")  or  deposit
         ("D") command

         JSYS:  This information is not relevant to TOPS-20.

    bb.  %CNST2 -- Software configuration flags

         Bits:

        (i)  ST%MDA -- Mountable device allocation (MDA) being done

             JSYS:  The .SFMTA function of the TMON JSYS returns a value
             indicating whether magtape allocation is enabled.

       (ii)  ST%LSC -- Low segment of monitor is cached

             JSYS:  This information is not relevant to TOPS-20.

      (iii)  ST%SCV -- Account validation

             JSYS:  The .SFAVR function of the  TMON  JSYS  returns  the
             same information.

       (iv)  ST%NER -- 6.03 error reporting

             JSYS:  This information is not relevant to TOPS-20.
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-11
.GTCNF (GETTAB TABLE 11)                                       16 Jan 84


        (v)  ST%NCS -- Scheduler is not a class system scheduler

             JSYS:  The SKED% JSYS allows  you  to  test  various  class
             scheduler parameters.

       (vi)  ST%ITA -- Interval timer available

             JSYS:   Under  TOPS-20,  an  interval   timer   is   always
             available.

      (vii)  ST%NDN -- Network device name flag

             JSYS:  This information is not relevant to TOPS-20.

     (viii)  ST%XPI -- PI time excluded from runtime

             JSYS:  This information is not relevant to TOPS-20.

       (ix)  ST%ERT -- EBOX/MBOX runtime (KL10 only)

             JSYS:  The METER% JSYS returns this information.

        (x)  ST%EXE -- .EXE files written by SAVE and SSAVE

             JSYS:  This information is not relevant to TOPS-20.

       (xi)  ST%NJN -- System uses 9-bit job numbers

             JSYS:  This information is not relevant to TOPS-20.

      (xii)  ST%EER -- Extended error reporting

             JSYS:  This information is not relevant to TOPS-20.

     (xiii)  ST%TAP -- TAPSER included in the monitor

             JSYS:  This information is not relevant to TOPS-20.

      (xiv)  ST%MBE -- Massbus error reporting

             JSYS:  This information is not relevant to TOPS-20.

       (xv)  ST%GAL -- GALAXY supported

             JSYS:  GALAXY is always supported.

      (xvi)  ST%ENQ -- ENQ./DEQ.  monitor calls included

             JSYS:  ENQ/DEQ is always supported.

     (xvii)  ST%SHC -- Scheduler is a class type scheduler
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-12
.GTCNF (GETTAB TABLE 11)                                       16 Jan 84


             JSYS:  The SKED% JSYS permits you  to  test  various  class
             scheduler parameters.

    (xviii)  ST%NSE -- Nonsuperseding ENTER call

             JSYS:  This information is not relevant to TOPS-20.

      (xix)  ST%MSG -- MPX channels supported

             JSYS:  This information is not relevant to TOPS-20.

       (xx)  ST%PSI -- Software interrupt supported

             JSYS:  Software interrupts are always supported in TOPS-20.

      (xxi)  ST%IPC -- IPCF supported

             JSYS:  IPCF is always supported in TOPS-20.

     (xxii)  ST%VMS -- VMSER included in monitor

             JSYS:  This information is not relevant to TOPS-20, because
             TOPS-20 is always a paging monitor.

    (xxiii)  ST%MER -- Magtape error reporting

             JSYS:  This information is not relevant to TOPS-20.

     (xxiv)  ST%SSP -- Swapping done in page units

             JSYS:  This information is not relevant to TOPS-20, because
             page size is constant in TOPS-20.


    bc.  %CNPIM -- Minimum condition in PISYS.

         JSYS:  This information is not relevant to TOPS-20.

    bd.  %CNPIL -- Length of internal PITs

         JSYS:  This information is not relevant to TOPS-20.

    be.  %CNPIA -- Address of JBTPIA

         JSYS:  This information is not relevant to TOPS-20.

    bf.  %CNMNT -- Monitor type

         JSYS:  The SYSVER  table  of  GETAB  returns  an  ASCIZ  string
         containing the monitor name, date and version number.

    bg.  %CNOCR, %CNOCP -- Card reader/punch DDB information
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-13
.GTCNF (GETTAB TABLE 11)                                       16 Jan 84


         JSYS:  This information is not relevant to TOPS-20.

    bh.  %CNPGS -- Unit of core allocation in words

         JSYS:  This information is not relevant to TOPS-20.

    bi.  %CNMMX -- Maximum allowable CORMAX

         JSYS:  This information is not relevant to  TOPS-20.   However,
         the  NCPGS  table  of GETAB returns the number of pages of user
         core available.

    bj.  %CNNSC -- Number of scheduler classes

         JSYS:  To obtain this information,  execute  a  loop  with  the
         .SKSBC  function  code  to  the  SKED%  JSYS,  and  count valid
         scheduler classes.

    bk.  %CNUTF -- Exponential user time factor

         JSYS:  Performance-related information may be obtained from the
         SYSTAB table of GETAB JSYS.

    bl.  %CNHSO -- Address of start of monitor high segment

         JSYS:  This information is not relevant to TOPS-20.

    bm.  %CNHSL -- Length of monitor high segment

         JSYS:  This information is not relevant to TOPS-20.

    bn.  %CNNWC -- Number of words in core -- highest address of on-line
         memory

         JSYS:  The NCPGS table of the GETAB JSYS gives  the  number  of
         pages of real (physical) user core.

    bo.  %CNNXM -- AOBJN pointer to NXMTAB used to scan for zeroes

         JSYS:  This information is not relevant to TOPS-20.

    bp.  %CNNDB -- Address of first network node data block

         JSYS:  This information is not relevant to TOPS-20.

    bq.  %CNTKB -- Offset in MTA KDB of address of DCB

         JSYS:  This information is not relevant to TOPS-20.

    br.  %CNHDL -- Potentially hung device list

         JSYS:  This information is not relevant to TOPS-20.
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-14
.GTCNF (GETTAB TABLE 11)                                       16 Jan 84


    bs.  %CNBTX -- Address of reload .CCL text for BOOTS

         JSYS:  This information is not relevant to TOPS-20.

    bt.  %CNTDB -- Offset in MTA UDB of address of DDBs

         JSYS:  This information is not relevant to TOPS-20.

    bu.  %CNMTK -- Address of first MTA KDB in system

         JSYS:  This information is not relevant to TOPS-20.

    bv.  %CNCPU -- Number of CPUs monitor was built for

         JSYS:  A TOPS-20 monitor is always built for a single CPU.

    bw.  %CNDJB -- Byte pointer to jobno in DDB

         JSYS:  This information is not relevant to TOPS-20.

    bx.  %CNSUP -- System uptime

         JSYS:  The same information is returned  (in  milliseconds)  by
         the TIME JSYS.

    by.  %CNBCP -- Bootstrap CPU number

         JSYS:  This information is not  relevant  to  TOPS-20,  because
         TOPS-20 does not support multiple CPUs.

    bz.  %CNBCL -- Bootstrap CTY line number

         JSYS:  This information is not relevant to TOPS-20.

    ca.  %CNNCR -- Number of CPUs allowed to run

         JSYS:  This information is not  relevant  to  TOPS-20,  because
         TOPS-20 does not support multiple CPUs.

    cb.  %CNMBS,  %CNMBF,  %CNMBX,  %CNMBD  --  monitor  bootstrap  file
         specification information

         JSYS:  This information is not relevant to TOPS-20.

    cc.  %CNBPM -- Maximum number of SNOOP. breakpoints allowed

         JSYS:  There is no  limit  to  the  number  of  breakpoints  on
         TOPS-20.

    cd.  %CNMXF -- First free virtual address above the monitor

         JSYS:  This information is not relevant to TOPS-20.
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-15
.GTCNF (GETTAB TABLE 11)                                       16 Jan 84


    ce.  %CNLVO -- Virtual address where LDBs start

         JSYS:  This information is not relevant to TOPS-20.

    cf.  %CNHXC -- Maximum number of FILOP. extended channels

         JSYS:  TOPS-20 has no limit to the number of open files, except
         that a JFN (job file number) is an 18-bit value.

    cg.  %CNVSH -- Monitor virtual start address of high segment

         JSYS:  This information is not relevant to TOPS-20.

    ch.  %CNRST -- Universal date/time of last role switch  on  multiple
         CPU systems

         JSYS:  This information is not relevant to TOPS-20.

    ci.  %CNDCH -- Offset into LDB of LDBDCH

         JSYS:  This information is not relevant to TOPS-20.

    cj.  %CNSF1, %CNSF2, %CNSF3, %CNSF4,  %CNSF5  --  Monitor  bootstrap
         SFDs

         JSYS:  This information is not relevant to TOPS-20.

    ck.  %CNFLN -- TTY number of FRCLIN

         JSYS:  This information is not relevant to TOPS-20.

    cl.  %CNPNP -- Pointer to PTY table

         JSYS:  This information is not relevant to TOPS-20.




9.11  .GTNSW (GETTAB TABLE 12)

Nonswapping data table, indexed by item number

Items:

     a.  %NSCMX -- System CORMAX (size of largest user job + 1)

         JSYS:  This information is not relevant to the TOPS-20  virtual
         memory  system.   However,  the  NCPGS table of GETAB gives the
         number of pages available for user core.

     b.  %NSCLS -- Byte pointer to last free core area
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-16
.GTNSW (GETTAB TABLE 12)                                       16 Jan 84


         JSYS:  This information is not relevant to TOPS-20.

     c.  %NSCTL -- Virtual core tally

         JSYS:  The SYSTAT  table  of  GETAB  gives  performance-related
         information.

     d.  %NSUPT -- CPU0 uptime

         JSYS:  The TIME JSYS returns the system uptime in milliseconds.

     e.  %NSHJB -- Highest job number in use

         JSYS:  The SYSGT JSYS with the JOBNAM table  name  returns  the
         number  of jobs that the monitor is built for.  You may program
         a loop which does the GETJI for all  possible  job  numbers  to
         find the highest job number in use.

     f.  %NSCLW -- Words cleared by system

         JSYS:  This information is not relevant to TOPS-20.

     g.  %NSLST -- Lost time

         JSYS:  Index value 1 into the SYSTAT  table  of  GETAB  returns
         this information.

     h.  %NSMMS -- Memory size in words

         JSYS:  The NCPGS table of GETAB returns the number of words  in
         memory available for user jobs.

     i.  %NSTPE, %NSSPE, %NSMPC, %NSMPA, %NSMPW, %NSMPP -- memory parity
         error information

         JSYS:  This information is not relevant to TOPS-20.

     j.  %NSEPO, %NSEPR -- Executive PDL overflow information

         JSYS:  This information is not relevant to TOPS-20.

     k.  %NSMXM -- maximum value of CORMAX

         JSYS:  This information is not relevant  to  TOPS-20,  but  the
         NCPGS  table of GETAB returns the number of words available for
         user core.

     l.  %NSKTM -- KSYS timer

         JSYS:  The DWNTIM table of GETAB returns the date and  time  of
         the next system shutdown.
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-17
.GTNSW (GETTAB TABLE 12)                                       16 Jan 84


     m.  %NSCMN -- Amount of  memory  guaranteed  to  nonlogged-in  jobs
         (CORMIN)

         JSYS:  This information is not relevant to TOPS-20.

     n.  %NSABC -- Count of address breaks

         JSYS:  This information is not available under TOPS-20.

     o.  %NSABA -- Address break addresses

         JSYS:  This information is not available under TOPS-20.

     p.  %NSLJR -- Last job run

         JSYS:  This information is not available under TOPS-20.




9.12  .GTSDT (GETTAB TABLE 13)

Swapping data table.

JSYS:  Use the SYSTAT table of the GETAB JSYS to  get  TOPS-20  swapping
data, as well as other performance data.



9.13  .GTSGN (GETTAB TABLE 14)

High segment parameter, indexed by job number

Bits:
     a.  SN%SPY -- Job is spying
     b.  SN%SHR -- High segment is sharable
     c.  SN%UWP -- High segment is write-enabled
     d.  SN%MDL -- High segment meddled
     e.  SN%LOK -- High segment locked in memory
     f.  SN%NCS -- High segment not cached
     g.  SN%GTS -- High segment obtained by GETSEG


JSYS:  This information is not available  on  a  job-by-job  basis,  but
related  information  is  provided  by  the GETAB tables SNBLKS, SPFLTS,
SSIZE and STIMES.
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-18
.GTODP (GETTAB TABLE 15)                                       16 Jan 84


9.14  .GTODP (GETTAB TABLE 15)

ONCE-only disk parameters

JSYS:  This information is not relevant to TOPS-20.



9.15  .GTLVD (GETTAB TABLE 16)

Level D disk parameters

JSYS:  This information is not relevant to TOPS-20.



9.16  .GTRCT (GETTAB TABLE 17)

Disk blocks read, both incremental and total, indexed by job number.

JSYS:  This information is not available for  individual  TOPS-20  jobs,
but the SYSTAB table of GETAB gives relevant system-wide information.



9.17  .GTWCT (GETTAB TABLE 20)

Disk blocks written, both incremental and total, indexed by job number.

JSYS:  This information is not available for  individual  TOPS-20  jobs,
but the SYSTAB table of GETAB gives relevant system-wide information.



9.18  .GTDBS (GETTAB TABLE 21)

Obsolete.



9.19  .GTTDB (GETTAB TABLE 22)

Obsolete.



9.20  .GTSLF (GETTAB TABLE 23)

GETTAB table data (size of tables, type  of  indexing,  and  so  forth),
indexed by GETTAB table number

JSYS:  Similar information for TOPS-20 GETAB system tables  is  provided
by the SYSGT JSYS.
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-19
.GTDEV (GETTAB TABLE 24)                                       16 Jan 84


9.21  .GTDEV (GETTAB TABLE 24)

Segment's device or structure, indexed by segment number.

JSYS:  This information is not available under TOPS-20.



9.22  .GTWSN (GETTAB TABLE 25)

Two-character SIXBIT names for wait states

JSYS:  This information is not relevant to TOPS-20.



9.23  .GTLOC (GETTAB TABLE 26)

Job logical remote station number, indexed by job number.

JSYS:  The word at offset .JILLO in the job information table gives  the
same information.  This word may be obtained with the GETJI JSYS.



9.24  .GTCOR (GETTAB TABLE 27)

Physical core allocation table

JSYS:  This information is not relevant to TOPS-20.



9.25  .GTCOM (GETTAB TABLE 30)

Table of SIXBIT monitor command names, indexed by command number.

JSYS:  This information is stored in the TOPS-20 EXEC, not  the  TOPS-20
monitor.  To obtain this information in a program, write code to proceed
as follows:

    (1)  Use GTJFN and OPENF to obtain a pseudo-terminal.

    (2)  Transmit an appropriate LOGIN command to  the  pseudo-terminal.
         (This step is not required on many systems.)

    (3)  Transmit the "?" command to the pseudo-terminal.   The  TOPS-20
         EXEC  will type out a list of commands, which you may read from
         the pseudo-terminal.

OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-20
.GTNM1 (GETTAB TABLE 31)                                       16 Jan 84


9.26  .GTNM1 (GETTAB TABLE 31)

First half of SIXBIT user name, indexed by job number.

JSYS:  The word at offset .JIUNO in the job information table gives  the
user number for any job.  This word may be obtained with the GETJI JSYS.
You may then use the DIRST JSYS to translate the user number to  a  user
name.



9.27  .GTNM2 (GETTAB TABLE 32)

Second half of SIXBIT user name, indexed by job number.

JSYS:  See .GTNM1 above.



9.28  .GTCNO (GETTAB TABLE 33)

Job's charge number, indexed by job number.

JSYS:  The GACCT JSYS returns the alphanumeric account designator string
for  a  specified  job.   The  GACTF JSYS returns the account to which a
specified file is being charged.



9.29  .GTTMP (GETTAB TABLE 34)

Obsolete.



9.30  .GTWCH (GETTAB TABLE 35)

Job's watch bits, indexed by job number

JSYS:  No corresponding JSYS functionality, because  SET  WATCH  is  not
available.   Note that you may use the TFORK JSYS to trap all JSYS calls
and implement your own SET WATCH functionality.



9.31  .GTSPL (GETTAB TABLE 36)

Spooling control flags, indexed by job number

Bits:
     a.  (No symbol) -- Spooled CDR file name
     b.  JS.PRI -- Disk priority
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-21
.GTSPL (GETTAB TABLE 36)                                       16 Jan 84


     c.  JS.DFR -- Deferred spooling
     d.  JS.PCR, JS.PCP, JS.PPT, JS.PPL, JS.PLP --  spool  card  reader,
         card punch, paper tape, plotter, line printer


JSYS:  This information is not available under  TOPS-20.   Note  however
that  spooled  devices  and logical devices have different device names.
For example, LPT:  refers to the spooled printer, while PLPT:  refers to
the physical printer.



9.32  .GTRTD (GETTAB TABLE 37)

Real time status word, indexed by job number

JSYS:  This information is not relevant to TOPS-20,  because  real  time
devices are not supported.



9.33  .GTLIM (GETTAB TABLE 40)

Time limit and batch status, indexed by job number.

JSYS:  The word at offset .JIBCH in the job  information  table  returns
batch stream and batch flag information for a job.  To obtain this word,
use the GETJI JSYS.



9.34  .GTQQQ (GETTAB TABLE 41)

Obsolete



9.35  .GTQJB (GETTAB TABLE 42)

Obsolete



9.36  .GTCM2 (GETTAB TABLE 43)

SET command names, indexed by command number

JSYS:  This information is stored in the TOPS-20 EXEC, not  the  TOPS-20
monitor.  To obtain this information in a program, write code to proceed
as follows:

    (1)  Use GTJFN and OPENF to obtain a pseudo-terminal.
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-22
.GTCM2 (GETTAB TABLE 43)                                       16 Jan 84


    (2)  Transmit an appropriate LOGIN command to  the  pseudo-terminal.
         (This step is not required on all systems.)

    (3)  Transmit the "SET  ?"  command  to  the  pseudo-terminal.   The
         TOPS-20  EXEC  will  type out a list of commands, which you may
         read from the pseudo-terminal.




9.37  .GTCRS (GETTAB TABLE 44)

Hardware status after crash.

JSYS:  This information is not relevant to TOPS-20.



9.38  .GTISC (GETTAB TABLE 45)

Swapper input scan list of queues, indexed by queue number.

JSYS:  This information is not available under TOPS-20.



9.39  .GTOSC (GETTAB TABLE 46)

Swapper output scan list of queues, indexed by queue number.

JSYS:  This information is not available under TOPS-20.



9.40  .GTSSC (GETTAB TABLE 47)

Scheduler scan list of queues

JSYS:  This information is not available under  TOPS-20.   However,  the
SKED% JSYS returns information about scheduler classes.



9.41  .GTRSP (GETTAB TABLE 50)

Response counter table, time in jiffies when  job  began  its  wait  for
running,  with time cleared when submitted to scheduler.  Indexed by job
number.

JSYS:  Information of this type is not available on a job-by-job  basis.
System-wide  performance  data  can be obtained from the SYSTAT table of
the GETAB JSYS.
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-23
.GTSYS (GETTAB TABLE 51)                                       16 Jan 84


9.42  .GTSYS (GETTAB TABLE 51)

System-wide data concerning  errors  and  stopcodes.   Indexed  by  item
number.   Items include counts of different types of hardware errors and
stopcodes.

JSYS:  The DRMERR and DSKERR tables of the GETAB JSYS give the drum  and
disk error information.  Other information is not relevant to TOPS-20.



9.43  .GTWHY (GETTAB TABLE 52)

Operator reload comments in ASCIZ.

JSYS:  No corresponding JSYS functionality.



9.44  .GTTRQ (GETTAB TABLE 53)

Total time in run queue, indexed by job number.

JSYS:  No corresponding JSYS functionality.



9.45  .GTSPS, .GTCxC, .GTCxV (GETTAB TABLES 54-70)

Data on multiple CPUs.

JSYS:  This information is not relevant  to  TOPS-20,  because  multiple
CPUs are not supported.



9.46  .GTFET (GETTAB TABLE 71)

Feature test settings, indexed by item number.

JSYS:  This information is not relevant to TOPS-20.



9.47  .GTEDN (GETTAB TABLE 72)

SIXBIT names of ersatz devices, indexed by item number.

JSYS:  You may use the INLNM JSYS to obtain all logical names  used  for
this job or for the system.
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-24
.GTSCN (GETTAB TABLE 73)                                       16 Jan 84


9.48  .GTSCN (GETTAB TABLE 73)

Scanner data, indexed by item  number.   Items  include  information  on
terminal input/output scanner.

JSYS:  This information is not relevant to TOPS-20.



9.49  .GTSNA (GETTAB TABLE 74)

Data for last SEND ALL message.

JSYS:  This information is not relevant to TOPS-20.



9.50  .GTCMT (GETTAB TABLE 75)

SET TTY command names, indexed by command number.

JSYS:  This information is stored in the TOPS-20 EXEC, not  the  TOPS-20
monitor.  To obtain this information in a program, write code to proceed
as follows:

    (1)  Use GTJFN and OPENF to obtain a pseudo-terminal.

    (2)  Transmit an appropriate LOGIN command to  the  pseudo-terminal.
         (This step is not necessary on many systems.)

    (3)  Transmit the "TERM ?"  command  to  the  pseudo-terminal.   The
         TOPS-20  EXEC  will  type out a list of commands, which you may
         read from the pseudo-terminal.




9.51  .GTPID (GETTAB TABLE 76)

Process communications ID (IPCF), indexed by item number.

JSYS:  This information may be obtained by means of the .IPCIG  function
to <SYSTEM>INFO used in the MSEND JSYS.



9.52  .GTIPC (GETTAB TABLE 77)

IPCF miscellaneous data, indexed by item number.

Items:
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-25
.GTIPC (GETTAB TABLE 77)                                       16 Jan 84


     a.  %IPCML -- Maximum IPCF packet length

         JSYS:   This  information  may  be  obtained  with  the  .MUMPS
         function of the MUTIL JSYS.

     b.  %IPCSI -- PID of systemwide information

         JSYS:  This information is not available under TOPS-20.

     c.  %IPCDQ -- Default data

         JSYS:  This information is not available under TOPS-20.

     d.  %IPCTS -- Total packets sent

         JSYS:  This information is not available under TOPS-20.

     e.  %IPCTO -- Total packets outstanding

         JSYS:  This information is not available under TOPS-20.

     f.  %IPCCP -- PID of [SYSTEM]IPCC

         JSYS:   This  information  can  be  obtained  with  the  .MURST
         function code to the MUTIL JSYS.

     g.  %IPCPM -- PID mask

         JSYS:  This information is not available under TOPS-20.

     h.  %IPCMP -- Length of PID table

         JSYS:  This information is not available under TOPS-20.

     i.  %IPCNP -- Number of PIDs now defined

         JSYS:  This information is not available under TOPS-20.

     j.  %IPCTP -- Total PIDs defined since reload

         JSYS:  This information is not available under TOPS-20.

     k.  %IPCIC -- Number of IPCF pages in core

         JSYS:  This information is not available under TOPS-20.

     l.  %IPCSP -- PID of [SYSTEM]GOPHER

         JSYS:  This information is not available under TOPS-20.

OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-26
.GTUPM (GETTAB TABLE 100)                                      16 Jan 84


9.53  .GTUPM (GETTAB TABLE 100)

Physical page number of job's  page  map,  indexed  by  job  or  segment
number.

JSYS:  This information is not available under TOPS-20.



9.54  .GTCMW (GETTAB TABLE 101)

SET WATCH command names, indexed by command number.

JSYS:  This information is not relevant to TOPS-20, since SET  WATCH  is
not  implemented.  Note that you may use the TFORK JSYS to trap all JSYS
calls and implement your own SET WATCH functionality.



9.55  .GTCVL (GETTAB TABLE 102)

Current virtual and physical page limits, indexed by job number.

JSYS:  This information is not relevant to TOPS-20.



9.56  .GTMVL (GETTAB TABLE 103)

Maximum virtual and physical limits, indexed by job number.

JSYS:  This information is not relevant to TOPS-20.  However, the  NCPGS
table  of the GETAB JSYS returns the number of pages of memory available
to user jobs.



9.57  .GTIPA (GETTAB TABLE 104)

IPCF statistics for job, indexed by job number.  Data includes number of
sends and receives since job logged in.

JSYS:  This information is not available under TOPS-20.



9.58  .GTIPP (GETTAB TABLE 105)

IPCF pointers and counts, indexed by job number.  Data  includes  number
of outstanding sends and receives.

JSYS:  Related information is returned by the MUTIL  JSYS.   The  .MUFPQ
function  returns  the  maximum  number  of PIDs allowed, and the .MUFJP
function returns the number of PIDs for a given job.  Note that you  can
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-27
.GTIPP (GETTAB TABLE 105)                                      16 Jan 84


set a flag in the argument block to prevent MRECV or MSEND from blocking
your job if they can't be processed immediately.



9.59  .GTIPI (GETTAB TABLE 106)

PID for job's [SYSTEM]INFO, indexed by job number.

JSYS:  The .MUGTI function of the MUTIL JSYS returns this information.



9.60  .GTIPQ (GETTAB TABLE 107)

IPCF flags and quotas for the job, indexed by job number.

Bits:
     a.  IP.CQX -- Disabled
     b.  IP.CQQ -- Quota set
     c.  IP.CQS -- Send quota
     d.  IP.CQR -- Receive quota


JSYS:  The .MUFSQ function of MUTIL returns this information.



9.61  .GTDVL (GETTAB TABLE 110)

Pointer to logical name table, indexed by job number.

JSYS:  You may use the INLNM JSYS to obtain all  logical  names,  either
for your job or for the system.



9.62  .GTABS (GETTAB TABLE 111)

Address break word, indexed by job number.

JSYS:  The ADBRK JSYS returns this information for sub-processes.



9.63  .GTCMP (GETTAB TABLE 112)

Obsolete.
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-28
.GTVM (GETTAB TABLE 113)                                       16 Jan 84


9.64  .GTVM (GETTAB TABLE 113)

General virtual memory data, indexed by item number.

JSYS:  The SYSTAT table  of  the  GETAB  JSYS  gives  performance  data,
including virtual memory information.



9.65  .GTVRT (GETTAB TABLE 114)

Paging rate for job, indexed by job number.

JSYS:  The GTRPW JSYS gives  page  trap  information  on  a  system-wide
basis.  Job-by-job information is not available.



9.66  .GTSST (GETTAB TABLE 115)

Scheduler statistics, indexed by item number.

JSYS:  The SYSTAT table of the GETAB JSYS  gives  scheduler  performance
information.



9.67  .GTDCF (GETTAB TABLE 116)

Desired use fraction for channel, indexed by job number.

JSYS:  This information is not relevant to TOPS-20.



9.68  .GTST2 (GETTAB TABLE 117)

Second job status word, indexed by job or segment number.

JSYS:  This information is not relevant to TOPS-20.



9.69  .GTJTC (GETTAB TABLE 120)

Job type and scheduler class, indexed by job number.

JSYS:  The SKRJP function of the SKED% JSYS returns this information for
a given job.
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-29
.GTCQP (GETTAB TABLE 121)                                      16 Jan 84


9.70  .GTCQP (GETTAB TABLE 121)

Scheduler class quota in percent for each class,  indexed  by  scheduler
class.

JSYS:  The .SKRCS function of the SKED% JSYS returns this information.



9.71  .GTCOJ (GETTAB TABLE 122)

Obsolete.



9.72  .GTCRT (GETTAB TABLE 123)

Class runtime since quota set, indexed by scheduler class.

JSYS:  This information is not available under TOPS-20, but  the  .SKRCS
function of the SKED% JSYS gives related information.



9.73  .GTSQH (GETTAB TABLE 124)

Obsolete



9.74  .GTSID (GETTAB TABLE 126)

Special PID table, indexed by item number

JSYS:  This information is not available, although the  .MUFJP  function
of the MUTIL JSYS returns a list of all PIDs for a specified job.



9.75  .GTENQ (GETTAB TABLE 127)

ENQ./DEQ.  statistics, indexed by item number.

Items:
     a.  %EQMSS -- Maximum string size.
     b.  %EQNAQ -- Number of active queues
     c.  %EQESR -- Total ENQ. since reload
     d.  %EQDSR -- Total DEQ. since reload
     e.  %EQAPR -- Number of active pooled resources
     f.  %EQDEQ -- Default ENQ. quota
     g.  %EQMMS -- Maximum pie-slice lock mask block size
     h.  %EQMTS -- Maximum LOCK-associated table size
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-30
.GTENQ (GETTAB TABLE 127)                                      16 Jan 84


     i.  %EQLTL -- Minutes unused long term locks stay around


JSYS:  Related information is returned by the ENQC JSYS.



9.76  .GTJLT (GETTAB TABLE 130)

LOGIN time for job in universal date/time format, indexed by job number.

JSYS:  The word at offset .JILLN in the job information table gives this
information.  This word can be obtained with the GETJI JSYS.



9.77  .GTEBT (GETTAB TABLE 131)

KL10 EBOX time in jiffies, indexed by job number.

JSYS:  The METER% JSYS returns this information on a system-wide  basis.
It is not available on a job-by-job basis.



9.78  .GTEBR (GETTAB TABLE 132)

Jiffy (.GTEBT) remainder, indexed by job number.

JSYS:  This information is not relevant to TOPS-20.



9.79  .GTMBT (GETTAB TABLE 133)

KL10 MBOX time in jiffies, indexed by job number.

JSYS:  The METER% JSYS returns this information on a system-wide  basis.
It is not available on a job-by-job basis.



9.80  .GTMBR (GETTAB TABLE 134)

Jiffy (.GTMBT) remainder, indexed by job number.

JSYS:  This information is not relevant to TOPS-20.
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-31
.GTRDV (GETTAB TABLE 135)                                      16 Jan 84


9.81  .GTRDV (GETTAB TABLE 135)

Program run device, indexed by job number.

JSYS:  This information may be obtained for a process in your  own  job,
but not for other jobs.  To obtain the entire file specification for the
.EXE file that a process is executing, use the following procedure:

    (1)  Get the page number of  one  of  the  read-only  pages  of  the
         program you are executing.

    (2)  Execute the RMAP JSYS to obtain a JFN for the .EXE file.

    (3)  Perform the JFNS JSYS to obtain a file specification string for
         the file.




9.82  .GTRDI (GETTAB TABLE 136)

Program run directory, indexed by job number.

JSYS:  See .GTRDV above.



9.83  .GTRFN (GETTAB TABLE 137)

Program run filename, indexed by job number.

JSYS:  The JOBPNM table of the GETAB JSYS gives the program name of  any
specified  job.   For  other  file specification information, see .GTRDV
above.



9.84  .GTDFL (GETTAB TABLE 140)

User defaults for job, indexed by job number.

Bits:
     a.  JD.PRT -- Default file protection.
     b.  JD.SPD -- Set if user set default protection.
     c.  JD.DAD -- Set if LOGIN should not ask about detached jobs.
     d.  JD.BUF -- User default number of disk buffers.


JSYS:  This information is not available under TOPS-20.
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-32
.GTNTP (GETTAB TABLE 141)                                      16 Jan 84


9.85  .GTNTP (GETTAB TABLE 141)

Network performance data, indexed by item number.

JSYS:  The GETAB  tables  give  performance  data  for  various  network
functions.



9.86  .GTSPA (GETTAB TABLE 142)

Scheduler performance data, indexed item number.

JSYS:  The SYSTAB table of the GETAB JSYS  gives  scheduler  performance
data.



9.87  .GTVKS (GETTAB TABLE 143)

Virtual kilo-core ticks for job, indexed by job number.

JSYS:  This information is not relevant to TOPS-20.



9.88  .GTUUC (GETTAB TABLE 144)

Monitor calls executed for job, indexed by job number.

JSYS:  This information is not available under TOPS-20.



9.89  .GTRSx (GETTAB TABLES 145-151)

SFDs in job run path, indexed by job number.

JSYS:  This information is not available under TOPS-20.



9.90  .GTPC (GETTAB TABLE 152)

I/O wait DDB and user PC, indexed by job number.

JSYS:  This information is not relevant to TOPS-20.
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-33
.GTCAP (GETTAB TABLE 153)                                      16 Jan 84


9.91  .GTCAP (GETTAB TABLE 153)

Job capability word (maximum privileges permitted for  job)  indexed  by
job number.

Bits:
     a.  JP.IPC -- IPCF
     b.  JP.DPR -- Highest disk priority for job
     c.  JP.MET -- METER.
     d.  JP.POK -- POKE.
     e.  JP.CCC -- Change CPU specification
     f.  JP.HPQ -- Highest high-priority queue
     g.  JP.NSP -- Device unspooling
     h.  JP.ENQ -- ENQ/DEQ
     i.  JP.RTT -- RTTRP (real time trap)
     j.  JP.SPA -- PEEK/SPY -- any core
     k.  JP.SPM -- PEEK/SPY -- monitor core


JSYS:  Job capabilities are not available for an arbitrary TOPS-20  job.
For  a  process  in  your  own  job,  the RPCAP JSYS returns the process
capabilities.



9.92  .GTIDX (GETTAB TABLE 154)

Range of each GETTAB table, indexed by GETTAB table number.

JSYS:  The SYSGT JSYS gives this information for the GETAB JSYS tables.



9.93  .GTGTB (GETTAB TABLE 155)

GETTAB immediate using range table, indexed by GETTAB table number.

JSYS:  The SYSGT JSYS gives this information for the GETAB JSYS tables.



9.94  .GTTNM (GETTAB TABLE 156)

Terminal type names, indexed by terminal type number.

JSYS:  The TOPS-20 terminal type names are accessed by  symbols  defined
in  the TOPS-20 Monitor Calls Manual, and obtained by means of the GTTYP                _______ _____ ______
JSYS.
OBTAINING MONITOR INFORMATION (GETTAB)                         Page 9-34
.GTOBI (GETTAB TABLE 157)                                      16 Jan 84


9.95  .GTOBI (GETTAB TABLE 157)

Write-to-operator and batch data, indexed by job number.  Data  includes
write-to-operator  privileges,  operator  privileges,  and  batch stream
numbers.

JSYS:  The word at offset .JIBCH in the job information table gives  the
same information.  This word can be obtained with the GETJI JSYS.



9.96  .GTDCB (GETTAB TABLE 160)

CONI/DATAI corresponding to device status block subtable.

JSYS:  This information is not relevant to TOPS-20.



9.97  .GTNDB (GETTAB TABLE 161)

Byte pointers into node data block, indexed by item number.

JSYS:  This information is not relevant to TOPS-20.



9.98  .GTPDB (GETTAB TABLE 162)

Number of monitor per-process pages and address of job's PDB, indexed by
job number.

JSYS:  This information is not relevant to TOPS-20.



9.99  .GTEQJ (GETTAB TABLE 163)

ENQ./DEQ. queue header, indexed by job number.

JSYS:  This information may be obtained from the .ENQCD function of  the
ENQC JSYS.



9.100  .GTDCN (GETTAB TABLE 164)

SET DEFAULT command arguments, indexed by command number.

JSYS:  This information is not relevant to TOPS-20.












                               CHAPTER 10

                   UUO TO JSYS CONVERSION ALGORITHMS



The primary purpose of this chapter is to provide a reference guide  for
the  conversion  of  MACRO-10 programs (using UUOs) to MACRO-20 programs
(using JSYSs).  A secondary  purpose  of  this  chapter  is  to  provide
greater  information  about  PA1050's  level  of support for each of the
UUOs.

There is one section in this chapter for each of the UUOs.  This section
gives the following information:

     1.  A brief description of the UUO function under TOPS-10.

     2.  Information about how to convert this UUO into equivalent  JSYS
         calls.   The  user  must  refer  to  the  TOPS-20 Monitor Calls                                                           _______ _____
         Reference Manual for information on the  calling  sequences  of         _________ ______
         the individual JSYSs.

     3.  An indication of whether PA1050 supports the UUO.







10.1  ACCT.  -- CALLI 167

-- Reads or changes the account string for a job

JSYS:  The following JSYSs perform  functions  related  to  the  account
string:

     a.  The CACCT JSYS changes the account string for a job.

     b.  The GACCT JSYS reads the account string for a job.

     c.  The SACTF JSYS changes the  account  designator  to  which  the
         specified file is being charged.
UUO TO JSYS CONVERSION ALGORITHMS                              Page 10-2
ACCT. -- CALLI 167                                             16 Jan 84


     d.  The GACTF JSYS  reads  the  account  designator  to  which  the
         specified file is being charged.


PA1050:  Unsupported.






10.2  APRENB -- CALLI 16

--  Enables  trap  services  for  a  program.   Handles  the   following
conditions:    Repetitive   enable,   pushdown   list  overflow,  memory
protection violation, nonexistent memory,  memory  parity  error,  clock
tick, floating-point overflow, and arithmetic overflow.

JSYS:  The software interrupt system  permits  you  to  handle  all  the
conditions  that  the  APRENB  UUO  handles.  If you wish to handle only
arithmetic interrupts, then you should use the SWTRP% JSYS, which allows
you  to  trap  floating-point overflow and arithmetic overflow with good
performance.  For more information on interrupts, please see the chapter
on TRAP AND INTERRUPT HANDLING in this manual.

PA1050:  Supported.






10.3  ATTACH -- CALLI 104

-- Attaches a job to a terminal line.  An unprivileged job can  use  the
ATTACH  UUO  only if its terminal is in user mode and it may only detach
its own controlling terminal.  A privileged job can use it to attach any
job.  It can also detach a job.

JSYS:  The DTACH JSYS detaches the  current  job  from  its  controlling
terminal.  The ATACH JSYS can detach a job from its controlling terminal
and reattach it to another terminal.

PA1050:  Unsupported.



UUO TO JSYS CONVERSION ALGORITHMS                              Page 10-3
CALL -- 40B8                                                   16 Jan 84


10.4  CALL -- 40B8

-- Obsolete form of CALLI, with SIXBIT UUO name.

PA1050:  Supported.






10.5  CALLI -- 47B8

-- See corresponding mnemonic name.

PA1050:  Supported.






10.6  CAL11.  -- CALLI 125

-- Performs front end testing and debugging functions.

JSYS:  The BOOT JSYS provides similar functionality.

PA1050:  Unsupported.






10.7  CHGPPN -- CALLI 74

-- Used only by LOGIN.  Changes the PPN for the current job.

JSYS:  The LOGIN JSYS is used by TOPS-20 to log a job in.

PA1050:  Unsupported.






10.8  CHKACC -- CALLI 100

-- Determines whether a file can be accessed.
UUO TO JSYS CONVERSION ALGORITHMS                              Page 10-4
CHKACC -- CALLI 100                                            16 Jan 84


JSYS:  The CHKAC JSYS performs the same functionality.

PA1050:  Supported.






10.9  CLOSE -- 70B8

-- Terminates transmission of data to or from a file.

JSYS:  The functions of CLOSE are performed by  the  CLOSF  JSYS,  which
closes the file.

PA1050:  Supported.






10.10  CLRBFI -- TTCALL 11,

-- Clears typeahead and other text from the terminal input buffer.

JSYS:  The CFIBF JSYS performs the same functionality.

PA1050:  Supported.






10.11  CLRBFO -- TTCALL 12,

-- Clears the terminal output buffer, as though the user pressed CTRL/O.

JSYS:  The CFOBF JSYS performs the same functionality.

PA1050:  Supported.



UUO TO JSYS CONVERSION ALGORITHMS                              Page 10-5
CLRST. -- CALLI 134                                            16 Jan 84


10.12  CLRST.  -- CALLI 134

-- Clears the status  bits  for  a  device.   This  enables  program  to
continue after a device error has occurred.  You can examine the current
setting of the status bits by using the SENSE. UUO.

JSYS:  The SDSTS JSYS clears and sets the status bits of a device.

PA1050:  Unsupported.






10.13  CNECT.  -- CALLI 130

-- Connects or disconnects a device associated with a multiplexed  (MPX)
channel.

JSYS:   TOPS-20  does   not   support   multiplexing.    Connecting   or
disconnecting a device can be performed by an ordinary OPENF or CLOSF.

PA1050:  Unsupported.






10.14  CORE -- CALLI 11

-- Allows program to dynamically expand or contract its core  allocation
in  either or both segments.  You can specify core assignment to virtual
or physical memory.

JSYS:  Since TOPS-20 programs automatically have all pages  assigned  to
them,  there  is  never  a  need  to expand or contract core allocation.
Therefore, the CORE UUO can simply be deleted.  For further information,
see the chapter on MEMORY MANAGEMENT in this manual.

PA1050:  Supported.






10.15  CTLJOB -- CALLI 65

-- Obtains the number of the job that  is  controlling  a  specific  job
(using pseudo-terminal control).
UUO TO JSYS CONVERSION ALGORITHMS                              Page 10-6
CTLJOB -- CALLI 65                                             16 Jan 84


JSYS:  The controlling pseudo-terminal job number may be  found  in  the
job  information  block  in the word at offset .JICPJ.  This word may be
obtained by means of the GETJI JSYS.

PA1050:  Supported.






10.16  DAEFIN -- CALLI 105

-- Used only by DAEMON to indicate that a request  to  DAEMON  has  been
completed.

JSYS:  No functional equivalent.

PA1050:  Unsupported.






10.17  DAEMON -- CALLI 102

-- Invokes DAEMON.

Function codes:

     a.  .DCORE -- Writes a dump file of your job's core area.

         JSYS:  No equivalent JSYS functionality.  You may use the  SAVE
         JSYS  to  save a core image of your program in a file, and then
         use the FILDDT program to examine its contents.

     b.  .CLOCK -- enters a request in the clock queue  to  awaken  your
         job after a specified number of seconds has elapsed.

         JSYS:  The DISMS JSYS performs the  same  function,  dismissing
         your job for a specified number of milliseconds.

     c.  .FACT -- Makes an entry in the system accounting file FACT.SYS.

         JSYS:  FACT files are not supported under TOPS-20.  You  should
         convert your accounting system to use USAGE files, as described
         in this manual in the chapter entitled "ACCOUNTING".

     d.  .DMERR -- Makes an entry in the error file.

         JSYS:  The SYERR JSYS performs the same function.

UUO TO JSYS CONVERSION ALGORITHMS                              Page 10-7
DAEMON -- CALLI 102                                            16 Jan 84


PA1050:  Unsupported.






10.18  DATE -- CALLI 14

-- Returns a code giving the system date.  The code is an integer.

JSYS:  There are several options:

     a.  The ODCNV JSYS returns the  month,  day  and  year  in  numeric
         format.

     b.  The GTAD JSYS returns the date and time  of  day  in  universal
         time/date format.

     c.  The ODTIM JSYS returns the date and time as a formatted  string
         of  characters, and various option flags permit you to vary the
         format.

     d.  Additional JSYS functions related to the  time  and  date  are:
         IDTIM, ODTNC, IDTNC, IDCNV.


PA1050:  Supported.






10.19  DDTGT -- CALLI 5

Obsolete.

PA1050:  Unsupported.






10.20  DDTIN -- CALLI 1

-- Reads one character from the user terminal without  interfering  with
any I/O from DDT.  Its use is not recommended.

JSYS:  See discussion under INCHRW UUO.
UUO TO JSYS CONVERSION ALGORITHMS                              Page 10-8
DDTIN -- CALLI 1                                               16 Jan 84


PA1050:  Supported.






10.21  DDTOUT -- CALLI 3

-- Writes ASCII text to the user terminal without interfering  with  any
I/O from DDT.  Its use is not recommended.

JSYS:  See discussion under OUTSTR UUO.

PA1050:  Supported.






10.22  DDTRL -- CALLI 7

Obsolete.

PA1050:  Unsupported.






10.23  DEACTI -- CALLI 70

Obsolete.

PA1050:  Unsupported.






10.24  DEBRK.  -- CALLI 137

-- Dismisses a software interrupt, reenabling any conditions disabled by
the interrupt.  Used by software interrupt system.

JSYS:  The DEBRK JSYS performs the same function.

PA1050:  Unsupported.
UUO TO JSYS CONVERSION ALGORITHMS                              Page 10-9
DEQ. -- CALLI 152                                              16 Jan 84


10.25  DEQ.  -- CALLI 152

-- Dequeues one or more requests for enqueued resources, or relinquishes
ownership of one or more enqueued resources.

Functions:   Dequeue  a  specific  request.   Remove  all  requests  for
ownership  in  queues  and dissolve all your resource locks.  Remove all
requests of yours with a specific request-id.

JSYS:  The DEQ JSYS performs the same functions.

PA1050:  Supported.






10.26  DEVCHR -- CALLI 4

-- Returns the physical characteristics of a specified device.

The following is a list of the information returned by DEVCHR,  and  the
method for obtaining the same information using a JSYS:

     a.  DV.DRI -- DECtape whose directory is in memory.

         JSYS:  No related function,  since  TOPS-20  does  not  support
         DECtapes.

     b.  DV.DSK -- Disk.

         JSYS:  The DV%TYP field in the word returned by the DVCHR  JSYS
         indicates  the  device type.  If this field equals .DVDSK, then
         the device is a disk.  Another method is to use the DV%DIR  bit
         in  the  device  characteristics  word returned by DVCHR, which
         indicates whether the device has  a  directory.   Only  TOPS-20
         disk devices have directories.

     c.  DV.CRD -- Card device (use input or output bit to test for card
         read or punch).

         JSYS:  The value .DVCDR in  the  DV%TYP  field  of  the  device
         characteristics  word  returned  by  DVCHR  indicates  the card
         reader device.  The card punch device is not supported.

     d.  DV.LPT -- Line printer.

         JSYS:  The value .DVLPT in  the  DV%TYP  field  of  the  device
         characteristics  word  returned  by  DVCHR  indicates  the line
         printer device.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-10
DEVCHR -- CALLI 4                                              16 Jan 84


     e.  DV.TTA -- Terminal controlling a job.

         JSYS:  DVCHR returns a device designator for the tested device.
         Compare  this designator to the values .PRIIN and .PRIOU, which
         represent   the   primary   input   and   output   designators,
         respectively.

     f.  DV.TTU -- Terminal in use.

         JSYS:  The value .DVTTY in  the  DV%TYP  field  of  the  device
         characteristics  word  returned  by  DVCHR indicates a terminal
         device.

     g.  DV.2IO -- Device that can do input and output at the same time.

         JSYS:  The DV%OUT and DV%IN  bits  returned  by  DVCHR  in  the
         device  characteristics word indicate whether the device can do
         input and output, respectively.   Only  directory  devices  can
         perform input and output simultaneously.

     h.  DV.DIS -- Display unit.

         JSYS:  The GTTYP JSYS returns the  terminal  type  code  for  a
         terminal.   You  can  test  this  code  for the various type of
         display terminals.

     i.  DV.LNG -- Device with long dispatch table --  this  means  that
         UUOs  other  than  INPUT, OUTPUT, CLOSE, and RELEAS can perform
         real functions.

         JSYS:  There is no corresponding JSYS functionality.

     j.  DV.PTP -- Papertape punch.

         JSYS:  This device is not supported by TOPS-20.

     k.  DV.PTR -- Papertape reader.

         JSYS:  This device is not supported by TOPS-20.

     l.  DV.DTA -- DECtape unit.

         JSYS:  This device is not supported by TOPS-20.

     m.  DV.AVL -- The device is available or is assigned to your job.

         JSYS:   The  DV%AV  bit  in  the  device  characteristics  word
         returned by DVCHR provides the same information.

     n.  DV.MTA -- Magtape unit.

         JSYS:  The .DVMTA value in  the  DV%TYP  field  of  the  device
         characteristics  word  returned  by  DVCHR  indicates a magtape
         unit.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-11
DEVCHR -- CALLI 4                                              16 Jan 84


     o.  DV.TTY -- Terminal.

         JSYS:  The .DVTTY value in  the  DV%TYP  field  of  the  device
         characteristics word returned by DVCHR indicates a terminal.

     p.  DV.DIR -- The device is a directory device (disk or DECtape).

         JSYS:  The DV%DIR bit returned by DVCHR indicates  a  directory
         device.

     q.  DV.IN -- Input device.

         JSYS:  The DV%IN bit  returned  by  DVCHR  indicates  an  input
         device.

     r.  DV.OUT -- Output device.

         JSYS:  The DV%OUT bit returned by  DVCHR  indicates  an  output
         device.

     s.  DV.ASC --  The  device  has  been  initialized  by  the  ASSIGN
         operating system command.

         JSYS:  The  DV%ASN  bit  in  the  device  characteristics  word
         returned by DVCHR indicates whether a device can be assigned by
         the ASSIGN EXEC command or by the ASND JSYS.

     t.  DV.ASP -- The device has been assigned by the  INIT,  OPEN,  or
         FILOP. UUO.

         JSYS:  Several pieces of information returned by DVCHR must  be
         used to determine the equivalent information:

        (i)  The DV%AV bit in the device characteristics  word  returned
             by  DVCHR  indicates  whether  the  device  is available or
             assigned to this job.

       (ii)  DVCHR returns in AC3 the value -1  if  the  device  is  not
             assigned to any job.

      (iii)  The DV%ASN bit indicates whether the device is assigned  by
             the ASSIGN EXEC command or the ASND JSYS.

       (iv)  The DV%MNT bit indicates whether the device is mounted.


         Thus, DV.ASP from the DEVCHR UUO is equivalent to  all  of  the
         following together:

          DV%AV bit is on
          AC3 does not equal -1
          DV%ASN bit is off
          DV%MNT bit is off
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-12
DEVCHR -- CALLI 4                                              16 Jan 84


u.  DV.M17, ..., DV.M0 -- mode bits.

JSYS:  The bits DV%M17, DV%M10 and DV%M0 in  the  DV%MOD  field  of  the
device  characteristics word returned by DVCHR indicate dump mode, image
mode, and normal mode, respectively.   No  other  modes  are  valid  for
TOPS-20.


NOTE:  The information returned from the DVCHR JSYS can also be obtained
from the DEVCHR table returned by the GETAB JSYS.

PA1050:  Supported.






10.27  DEVGEN -- CALLI 76

Obsolete.

PA1050:  Unsupported.






10.28  DEVLNM -- CALLI 107

-- Assigns (or clears) a logical device name to a device.

JSYS:  The following JSYSs perform these functions:

     a.  The ASND JSYS assigns a device to the caller's job.

     b.  The RELD JSYS releases a device.

     c.  The CRLNM JSYS defines or deletes a logical name assignment.


PA1050:  Unsupported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-13
DEVNAM -- CALLI 64                                             16 Jan 84


10.29  DEVNAM -- CALLI 64

-- Returns the physical name of a device.

JSYS:  There are three methods of obtaining this information:

     a.  The  JFNS  JSYS  returns  the  file   specification   currently
         associated  with  a JFN.  By setting appropriate function bits,
         you may specify that you  wish  only  the  device  name  to  be
         returned.

     b.  The DEVST JSYS translates a device designator to a string.

     c.  The DEVNAM table returned by the  GETAB  JSYS  gives  a  SIXBIT
         device name.


PA1050:  Supported.






10.30  DEVOP.  -- CALLI 171

-- Performs  miscellaneous  device  functions  for  devices  other  than
terminals.  (Use TRMOP. for terminal functions).

Handles various forms-handling I/O functions for the line printer.  Also
tests some error status bits for magnetic tapes.

JSYS:   The  DVCHR  and  MTOPR  JSYSs  perform  these  device  dependent
functions.   You  may  also  use  the SETJB JSYS to set various tape and
printer defaults for your own job.

PA1050:  Unsupported.






10.31  DEVPPN -- CALLI 55

-- Returns the PPN associated with a disk device or an ersatz device.

JSYS:  The JFNS JSYS returns the file specification  associated  with  a
JFN.   By  setting  appropriate  function bits, you may specify that you
wish only the directory name field of the file specification.   You  may
then   use  the  STPPN  JSYS  to  translate  the  directory  name  to  a
project-programmer number.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-14
DEVPPN -- CALLI 55                                             16 Jan 84


PA1050:  Supported.






10.32  DEVSIZ -- CALLI 101

-- Returns the buffer size and standard number of buffers for a device.

JSYS:  There are no default buffer sizes for TOPS-20 input/output.   You
may  use  any buffer size you wish, and then use SIN and SOUT to perform
input and output using that buffer size.  For  greater  efficiency,  you
may  use  an  entire  page  as  a  buffer, and then perform input/output
operations using PMAP to map each page of  the  file  in  turn  to  your
buffer area.

PA1050:  Supported.






10.33  DEVSTS -- CALLI 54

-- Returns the device status word from  the  device  data  block  (DDB).
This returns the device status word stored from a CONI instruction.

JSYS:  The .MORST function of the MTOPR JSYS returns this information.

PA1050:  Unsupported.






10.34  DEVTYP -- CALLI 53

-- Returns the physical properties for a device.

These bits are returned:

     a.  TY.MAN -- Directory device -- LOOKUP/ENTER is mandatory.

         JSYS:  The  bit  DV%DIR  in  the  device  characteristics  word
         returned  by the DVCHR JSYS indicates a directory device.  Note
         however that there  are  no  JSYSs  directly  corresponding  to
         LOOKUP  or  ENTER, and so the DV%DIR does not directly indicate
         whether some specific JSYS must be executed.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-15
DEVTYP -- CALLI 53                                             16 Jan 84


     b.  TY.GEN -- Device is generic.

         JSYS:  The LNMST JSYS translates a logical name to its original
         definition  string.   You may use this information to determine
         the characteristics of the device name.

     c.  TY.MDA -- Controlled by mountable device allocator.

         JSYS:   The  DV%AS  bit  in  the  device  characteristics  word
         returned  by  the  DVCHR JSYS indicates the opposite condition:
         whether the device is assignable.

     d.  TY.EHF  --  Extended  hardware  features;   for  example,  line
         printer has lower case.

         JSYS:  There  is  no  single  bit  or  field  which  determines
         extended  hardware features.  You must test the individual bits
         obtained by means of the MTOPR JSYS for the  particular  device
         and feature that interests you.

     e.  TY.MPX -- MPX-controllable.

         JSYS:  TOPS-20 does not support multiplexing.

     f.  TY.AVL -- Available to your job.

         JSYS:   The  DV%AV  bit  in  the  device  characteristics  word
         returned  by  the  DVCHR  JSYS  indicates whether the device is
         available to your job.

     g.  TY.SPL -- Spooled.

         JSYS:  You must test for a particular spooled device.  You  may
         do so by testing the DV%TYP field in the device characteristics
         word returned by the DVCHR JSYS for one of  the  values  .DVLPT
         (line printer), .DVCDR (card reader) or .DVCDP (card punch).

     h.  TY.INT --  Interactive;   there  is  output  after  each  break
         character.

         JSYS:  Only terminals are interactive.  You may test the DV%TYP
         field  in the device characteristics word returned by the DVCHR
         JSYS to determine whether the device type is .DVTTY (terminal).

     i.  TY.VAR -- Capable of variable buffer size.

         JSYS:  All TOPS-20 devices are capable  of  a  variable  buffer
         size,  since you may use any buffer size you desire and use the
         SIN and SOUT JSYSs with that buffer.

     j.  TY.IN -- Input capability.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-16
DEVTYP -- CALLI 53                                             16 Jan 84


         JSYS:   The  DV%IN  bit  in  the  device  characteristics  word
         returned  by the DVCHR JSYS indicates whether the device has an
         input capability.

     k.  TY.OUT -- Output capability.

         JSYS:  The  DV%OUT  bit  in  the  device  characteristics  word
         returned  by the DVCHR JSYS indicates whether the device has an
         output capability.

     l.  TY.RAS -- (Restricted) Assigned only to privileged  job  or  by
         MOUNT command.

         JSYS:   The  DV%AS  bit  in  the  device  characteristics  word
         returned  by the DVCHR JSYS indicates the opposite condition --
         whether the device can be assigned by your job.


Also returns the following fields:

     a.  Job number to which device is currently assigned.

         JSYS:  This information is not available.

     b.  Device type code

        (i)  .TYDSK -- disk

             JSYS:  The DV%TYP field in the device characteristics  word
             returned  by the DVCHR JSYS indicates the device type.  The
             value .DVDSK indicates a disk device.

       (ii)  .TYDTA -- DECtape

             JSYS:  DECtape devices are not supported by TOPS-20.

      (iii)  .TYMTA -- magnetic tape

             JSYS:  The DV%TYP field in the device characteristics  word
             returned  by the DVCHR JSYS indicates the device type.  The
             value .DVMTA indicates a magnetic tape device.

       (iv)  .TYTTY -- terminal

             JSYS:  The DV%TYP field in the device characteristics  word
             returned  by the DVCHR JSYS indicates the device type.  The
             value .DVTTY indicates a terminal device.

        (v)  .TYPTR -- paper tape reader

             JSYS:  The paper tape reader device  is  not  supported  by
             TOPS-20.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-17
DEVTYP -- CALLI 53                                             16 Jan 84


       (vi)  .TYPTP -- paper tape punch

             JSYS:  The paper tape punch  device  is  not  supported  by
             TOPS-20.

      (vii)  .TYDIS -- display unit

             JSYS:  The GTTYP JSYS returns the terminal type.   You  may
             test this code for the various display unit types.

     (viii)  .TYLPT -- line printer

             JSYS:  The DV%TYP field in the device characteristics  word
             returned  by the DVCHR JSYS indicates the device type.  The
             value .DVLPT indicates a line printer device.

       (ix)  .TYCDR -- card reader

             JSYS:  The DV%TYP field in the device characteristics  word
             returned  by the DVCHR JSYS indicates the device type.  The
             value .DVCDR indicates a card reader device.

        (x)  .TYCDP -- card punch

             JSYS:  The DV%TYP field in the device characteristics  word
             returned  by the DVCHR JSYS indicates the device type.  The
             value .DVCDP indicates a card punch device.

       (xi)  .TYPTY -- pseudo-terminal

             JSYS:  The DV%TYP field in the device characteristics  word
             returned  by the DVCHR JSYS indicates the device type.  The
             value .DVPTY indicates a pseudo-terminal device.

      (xii)  .TYPLT -- plotter

             JSYS:  The plotter device is not supported by TOPS-20.

     (xiii)  .TYEXT -- external task

             JSYS:  The external task as a device is  not  supported  by
             TOPS-20.

      (xiv)  .TYMPX -- MPX-controlled

             JSYS:  Multiplexed devices are not supported by TOPS-20.

       (xv)  .TYPAR -- PA611R on DC44

             JSYS:  This device is not supported by TOPS-20.

      (xvi)  .TYPCR -- PC11(R) on a DC44
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-18
DEVTYP -- CALLI 53                                             16 Jan 84


             JSYS:  This device is not supported by TOPS-20.

     (xvii)  .TYPAP -- PA611P on a DC44

             JSYS:  This device is not supported by TOPS-20.

    (xviii)  .TYLPC -- LPC-11 on a DC44

             JSYS:  This device is not supported by TOPS-20.

      (xix)  .TYPCP -- PC-11(P) on a DC11

             JSYS:  This device is not supported by TOPS-20.

       (xx)  .TYWTY -- WTY device on a DC11

             JSYS:  This device is not supported by TOPS-20.

      (xxi)  .TYTSK -- network task

             JSYS:  The DV%TYP field in the device characteristics  word
             returned  by the DVCHR JSYS indicates the device type.  The
             value .DVNET indicates an ARPAnet device.

     (xxii)  .TYD78 -- DAS78 device

             JSYS:  This device is not supported by TOPS-20.

    (xxiii)  .TYRDA -- remote data entry device

             JSYS:  This information is not available from TOPS-20.

     (xxiv)  .TYMCR -- Monitor data entry device

             JSYS:  This information is not available from TOPS-20.

      (xxv)  .TYDRA -- DTR01/DR01 device

             JSYS:  This device is not supported by TOPS-20.



PA1050:  Supported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-19
DIAG. -- CALLI 163                                             16 Jan 84


10.35  DIAG.  -- CALLI 163

-- Provides diagnostic functions for devices and CPUs.

Functions:

     a.  Return the controller and unit numbers for a device.  (This  is
         not privileged).

         JSYS:  To obtain this information, execute a loop  through  all
         unit  numbers,  using  the MSTR JSYS function code .MSRNU.  The
         .MSRSN field permits you to get an ASCIZ string containing  the
         structure  name, and the .MSRNS field contains the logical unit
         number of this unit within the structure.

     b.  Force a CPU status block read on a CPU and force DAEMON to make
         an error entry in ERROR.SYS.

         JSYS:  No equivalent functionality.

     c.  Force a device status block read on a CPU and force  DAEMON  to
         make an error entry in ERROR.SYS.

         JSYS:  No equivalent functionality.


JSYS:  Note that the DIAG% JSYS provides unrelated functionality.

PA1050:  Unsupported.






10.36  DISK.  -- CALLI 121

-- Performs miscellaneous disk functions.

Functions:

     a.  .DUPRI -- Sets the disk priority level.

         JSYS:  Disk priority levels are not supported by TOPS-20.

     b.  .DUSEM -- Sets 10/11 compatibility mode.  Privileged.

         JSYS:  No equivalent TOPS-20 functionality.

     c.  .DUSTM -- Clears 10/11 compatibility.  Privileged.

         JSYS:  No equivalent TOPS-20 functionality.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-20
DISK. -- CALLI 121                                             16 Jan 84


     d.  .DUUNL -- Unloads an RP04 or RP06 drive.  Privileged.

         JSYS:  The .MSDIS function of the MSTR JSYS dismounts a disk.

     e.  .DUOLS   --   Takes   a   controller/channel   off-line   soon.
         Privileged.

         JSYS:  Set the MS%DIS status bit for the  structure  using  the
         .MSSSS function of the MSTR JSYS.

     f.  .DUOLN -- Takes a controller/channel off-line now.  Privileged.

         JSYS:  Use the .MSDIS function of the MSTR JSYS.

     g.  .DUONL -- Puts a controller/channel on-line.  Privileged.

         JSYS:  Use the .MSDIS function of the MSTR JSYS.

     h.  .DUUFD -- Sets call for UFD compressor.

         JSYS:  There is no equivalent JSYS functionality.

     i.  .DUSWP -- Removes a swapping unit.  Privileged.

         JSYS:  There is no equivalent JSYS functionality.

     j.  .DUASW -- Adds a swapping unit.

         JSYS:  There is no equivalent JSYS functionality.

     k.  .DUASD -- Add an STR to the system dump list.

         JSYS:  There is no equivalent JSYS functionality.

     l.  .DURSD -- Remove an STR from the system dump list.

         JSYS:  There is no equivalent JSYS functionality.

     m.  .DULEN -- Returns the number of written blocks in the  file  in
         ac.

         JSYS:  The GDSKC JSYS returns the number of  pages  in  a  file
         structure in use.

     n.  .DUCLM -- Clear MDA wait for specified unit.

         JSYS:  There is no equivalent JSYS functionality.

     o.  .DUFRE -- Returns the amount of  free  space  in  a  given  UFD
         before the logged in quota is exhausted.

         JSYS:  The GTDAL JSYS returns this information.

UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-21
DISK. -- CALLI 121                                             16 Jan 84


PA1050:  Unsupported.






10.37  DSKCHR -- CALLI 45

-- Returns the characteristics of a disk device.  These  characteristics
are needed to allocate storage efficiently on the disk.

The following values are returned:

     a.  .DCUFT -- Number of blocks left in job's quota.

         JSYS:  The GTDAL JSYS gives the number of  pages  remaining  in
         the job's quota.

     b.  .DCFCT  --  The  number   of   first-come-first-served   blocks
         available to all users.

         JSYS:  The GDSKC JSYS returns the number of blocks available to
         all  users.  TOPS-20 does not distinguish among different kinds
         of available blocks.

     c.  .DCUNT -- The number of blocks available to all users  on  this
         file structure.

         JSYS:  The GDSKC JSYS returns the number of blocks available to
         all  users.  TOPS-20 does not distinguish among different kinds
         of available blocks.

     d.  .DCSNM -- SIXBIT name of  the  structure  to  which  this  unit
         belongs.

         JSYS:  The .MSRSN field of  the  information  returned  by  the
         .MSRNU  function  of  the  MSTR JSYS permits you to obtain this
         information.

     e.  .DCUCH -- Size characteristics of file structure.

         JSYS:  Similar information is returned in various fields of the
         information returned by the .MSRNU function of the MSTR JSYS.

     f.  .DCUSZ -- Number of 128-word blocks on this unit.

         JSYS:  The .MSRUN function of the  MSTR  JSYS  returns  several
         fields which permit you to compute this information.

     g.  .DCSMT -- Mount count for this structure.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-22
DSKCHR -- CALLI 45                                             16 Jan 84


         JSYS:  The .MSGMC field in the  data  returned  by  the  .MSGSS
         function returned by the MSTR JSYS contains this information.

     h.  .DCWPS -- Number of words per storage allocation table.

         JSYS:  No equivalent JSYS functionality.

     i.  .DCSPU -- Number of storage allocation tables for the unit.

         JSYS:  No equivalent JSYS functionality.

     j.  .DCK4S -- Space (in K) allocated for swapping.

         JSYS:  The .MSRWS field in the  data  returned  by  the  .MSGSS
         function of the MSTR JSYS returns the swapping space in pages.

     k.  .DCSAJ -- Mount word for the structure.

         JSYS:  The mount status information is returned by  the  .MSGSS
         function of the MSTR JSYS.

     l.  .DCULN -- SIXBIT logical name of the unit.

         JSYS:  The .MSRNU function of the MSTR JSYS returns:

        (i)  the structure name, by means of a pointer in  the  word  at
             offset .MSRSN, and

       (ii)  the logical unit number, in the word at offset .MSRNS.


         This data gives you the same information as in the logical name
         of the unit.

     m.  .DCUPN -- SIXBIT physical name of the unit.

         JSYS:  The  words  beginning  at  offset  .MSRUI  in  the  data
         returned  by  the  .MSRNU function of the MSTR JSYS contain the
         unit identification code in ASCII.

     n.  .DCUID -- SIXBIT identification of the unit.

         JSYS:  The  words  beginning  at  offset  .MSRUI  in  the  data
         returned  by  the  .MSRNU function of the MSTR JSYS contain the
         unit identification code in ASCII.

     o.  .DCUFS -- First logical block to be used for swapping.

         JSYS:  No equivalent JSYS information.

     p.  .DCBUM -- Number of  blocks  per  unit,  including  maintenance
         cylinders.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-23
DSKCHR -- CALLI 45                                             16 Jan 84


         JSYS:  The GDSKC JSYS returns the number of pages  in  use  and
         number of pages not in use by a structure.

     q.  .DCCYL -- Current cylinder number.

         JSYS:  No equivalent JSYS information.

     r.  .DCBUC -- Number of blocks per  unit  in  PDP-11  compatibility
         mode.

         JSYS:  No equivalent JSYS information.

     s.  .DCLPQ -- Length of the position wait queue.

         JSYS:  No equivalent JSYS information.

     t.  .DCLTQ -- Length of the transfer wait queue.

         JSYS:  No equivalent JSYS information.

     u.  .DCALT -- Unit name for alternate port.

         JSYS:  No equivalent JSYS information.

     v.  .DCOWN -- Owner PPN of the structure.

         JSYS:  The  words  beginning  at  offset  .MSROI  in  the  data
         returned  by  the  .MSRUN function of the MSTR JSYS contain the
         owner identification in ASCII.

     w.  .DCPAS -- Position in active swapping list.

         JSYS:  No equivalent JSYS information.

     x.  .DCPSD -- Position in system dump list.

         JSYS:  No equivalent JSYS information.


In addition, the following flags are returned:

     a.  DC.RHB -- Disk pack off-line.

         JSYS:  The bit MS%RFL in the word at offset .MSRST in the  data
         returned  by the .MSRNU function of the MSTR JSYS contains this
         information.

     b.  DC.OFL -- Unit is off-line.

         JSYS:  The bit MS%RFL in the word at offset .MSRST in the  data
         returned  by the .MSRNU function of the MSTR JSYS contains this
         information.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-24
DSKCHR -- CALLI 45                                             16 Jan 84


     c.  DC.HWP -- Hardware write-protected.

         JSYS:  The bit MS%WLK in the word at offset .MSRST in the  data
         returned  by the .MSRNU function of the MSTR JSYS contains this
         information.

     d.  DC.SWP -- Belongs to write-protected file structure.

         JSYS:  No equivalent JSYS information.

     e.  DC.SAF -- Belongs to a single-access file structure.

         JSYS:  No equivalent JSYS information.

     f.  DC.ZMT -- Mount count is zero.

         JSYS:  The word at offset .MSGSC in the information returned by
         the  .MSGSS function of the MSTR JSYS returns the count for the
         structure.

     g.  DC.PRV -- Belongs to private file structure.

         JSYS:  The bit MS%PPS in the word at offset .MSGST in the  data
         returned  by  the  .MSGSS function of the MSTR JSYS indicates a
         public structure.

     h.  DC.STS -- Status code for the unit.

         JSYS:  The word at offset .MSRST in the data  returned  by  the
         .MSRNU function of the MSTR JSYS contains this information.

     i.  DC.MSB -- Unit has more than one SAT block.

         JSYS:  No equivalent JSYS information.

     j.  DC.NNA -- Belongs to a locked structure.

         JSYS:  No equivalent JSYS information.

     k.  DC.AWL -- Write-locked for all jobs.

         JSYS:  The bit MS%WLK in the word at offset .MSRST in the  data
         returned  by the .MSRNU function of the MSTR JSYS contains this
         information.

     l.  DC.ALT -- Dual-ported device.

         JSYS:  No equivalent JSYS information.

     m.  DC.TYP -- Type of argument passed with the DSKCHR UUO call.

         JSYS:  No equivalent JSYS information.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-25
DSKCHR -- CALLI 45                                             16 Jan 84


     n.  DC.DCN -- Data channel number that software lists as  connected
         to hardware.

         JSYS:  No equivalent JSYS information.

     o.  DC.CNT -- Controller type.

         JSYS:  No equivalent JSYS information.

     p.  DC.CNN -- Controller number.

         JSYS:  The word at offset .MSRCT in the data  returned  by  the
         .MSRNU function of the MSTR JSYS returns the controller number.

     q.  DC.UNT -- Unit type.

         JSYS:  The field MS%TYP in the word at  offset  .MSRST  in  the
         data  returned  by the .MSRNU function of the MSTR JSYS returns
         the unit type.

     r.  DC.UNN -- Physical unit number within the controller.

         JSYS:  No equivalent JSYS information.


PA1050:  Supported.






10.38  DTE.  -- CALLI 170

-- Performs functions for the DTE (KL systems only).

JSYS:  The MTOPR JSYS performs these functions.

PA1050:  Unsupported.






10.39  DVPHY.  -- CALLI 164

-- Returns the physical names of all devices of a given type, or of  all
devices supported by the system (except pseudo-terminals, terminals, MPX
devices, and disks).

JSYS:  There is no equivalent JSYS functionality.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-26
DVPHY. -- CALLI 164                                            16 Jan 84


PA1050:  Unsupported.






10.40  DVRST.  -- CALLI 122

-- Restricts the use of a device.  Privileged.

JSYS:  The ALLOC JSYS assigns a device to a job or to the monitor device
pool (with AC3=-2).

PA1050:  Unsupported.






10.41  DVURS.  -- CALLI 123

-- Removes the restriction created by the DVRST. UUO.  Privileged.

JSYS:  The ALLOC JSYS releases a job from the monitor device pool  (with
AC3=-1).

PA1050:  Unsupported.






10.42  ENQ.  -- CALLI 151

-- Requests shared or exclusive ownership of one  or  more  user-defined
resources.

JSYS:  The ENQ JSYS performs the same function.

PA1050:  Supported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-27
ENQC. -- CALLI 153                                             16 Jan 84


10.43  ENQC.  -- CALLI 153

-- Returns information about the current state of the enqueue  facility,
or sets access rights for the facility.  Privileged.

JSYS:  The ENQC JSYS performs the same functions.

PA1050:  Supported.






10.44  ENTER -- 77B8

-- Creates, supersedes, or updates a file.

JSYS:  The functions of ENTER are performed by  the  OPENF  JSYS,  which
opens  the  file, after the GTJFN JSYS has been executed to assign a JFN
to the file.

PA1050:  Supported.






10.45  ERLST.  -- CALLI 132

-- Returns data giving the status of each device on an MPX channel  that
has errors.

JSYS:  There is no equivalent JSYS functionality.

PA1050:  Unsupported.






10.46  ERRPT.  -- CALLI 160

-- Used by DAEMON to ask the monitor for the next error condition to  be
logged in the error file.  Privileged.

JSYS:  No equivalent JSYS functionality.

PA1050:  Unsupported.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-28
EXIT -- CALLI 12                                               16 Jan 84


10.47  EXIT -- CALLI 12

-- Stops job execution and optionally resets the job.

Note:  EXIT 1, is the same as MONRT. UUO.

JSYS:  The HALTF JSYS terminates the execution of  a  process.   If  the
process  is  not  to  be  restarted,  then it can perform the RESET JSYS
first.

PA1050:  Supported.






10.48  FILOP.  -- CALLI 155

-- Performs various file operations, including initializing channels and
creating,  deleting,  writing,  reading,  renaming,  appending  to,  and
superseding files.

Function codes:

     a.  .FORED -- Reads the file described by the LOOKUP/ENTER block.

         JSYS:  This function is performed by the GTJFN JSYS followed by
         the OPENF JSYS with the OF%RD option bit.

     b.  .FOCRE -- Creates the file described by the LOOKUP/ENTER block.
         Error if file already exists.

         JSYS:  This function is performed by the GTJFN  JSYS  with  the
         GJ%NEW  flag  bit,  followed  by  the OPENF JSYS with the OF%WR
         option bit.

     c.  .FOWRT -- Writes the file described by the LOOKUP/ENTER  block.
         Either supersede or create.

         JSYS:  This function is performed by the GTJFN  JSYS  with  the
         GJ%FOU  flag  bit,  followed  by  the OPENF JSYS with the OF%WR
         option bit.

     d.  .FOSAU -- Updates the file described by the LOOKUP/ENTER  block
         in single-access mode.

         JSYS:  This function is performed by the GTJFN JSYS followed by
         the OPENF JSYS with the OF%RD and OF%WR option bits.

     e.  .FOMAU -- Updates the file described by the LOOKUP/ENTER  block
         in multi-access mode.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-29
FILOP. -- CALLI 155                                            16 Jan 84


         JSYS:  This function is performed by the GTJFN JSYS followed by
         the OPENF JSYS with the OF%RD, OF%WR and OF%THW option bits.

     f.  .FOAPP -- Appends to the file  described  in  the  LOOKUP/ENTER
         block.

         JSYS:  This function is performed by the GTJFN JSYS followed by
         the OPENF JSYS with the OF%APP option bit.

     g.  .FOCLS -- Closes the file described by the LOOKUP/ENTER block.

         JSYS:  This function is performed by the CLOSF JSYS.

     h.  .FOURB -- Checkpoints the file described  by  the  LOOKUP/ENTER
         block.

         JSYS:  You may use the UFPGS JSYS to update all the pages of  a
         given  disk file.  You can perform a complete checkpoint if you
         use the CLOSF JSYS with the CO%NRJ flag to close the file while
         retaining the JFN, then use OPENF to reopen it.

     i.  .FOUSI -- Performs USETI to specify next  block  number  to  be
         input for the file specified by the LOOKUP/ENTER block.

         JSYS:  The replacement for .FOUSI depends on the type of  input
         operations you are using:

        (i)  The PMAP JSYS is preferred for disk I/O operations.   Since
             you  specify a file page number in each PMAP call, there is
             no need for a separate JSYS to replace the .FOUSI  function
             of FILOP..

       (ii)  If you are using BIN or SIN  to  perform  character  input,
             then  you  may use SFPTR to reset the input file pointer to
             an arbitrary point in the file.  Note  that  SFPTR  uses  a
             byte  position  which  your program must recompute from the
             block number specified to the the .FOUSI function of FILOP.

             Instead of SFPTR, you may use BKJFN to back up  your  input
             pointer by precisely one byte.

             If you are using  SFPTR  followed  by  BIN,  then  you  may
             combine them into a single RIN JSYS.


     j.  .FOUSO -- Performs USETO to specify next  output  block  number
         for the file specified by the LOOKUP/ENTER block.

         JSYS:  The replacement for the .FOUSO function  of  the  FILOP.
         UUO depends on the type of output operations you are using:

        (i)  The PMAP JSYS is preferred for disk I/O operations.   Since
             you  specify a file page number in each PMAP call, there is
             no need for a separate JSYS to replace the .FOUSO  function
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-30
FILOP. -- CALLI 155                                            16 Jan 84


             of the FILOP. UUO.

       (ii)  If you are using BOUT or SOUT to perform character  output,
             then  you may use SFPTR to reset the output file pointer to
             an arbitrary point in the file.  Note  that  SFPTR  uses  a
             byte  position  which  your program must recompute from the
             block number specified to the the .FOUSO  function  of  the
             FILOP. UUO.

             Instead of SFPTR, you may use BKJFN to back up your  output
             pointer by precisely one byte.

             If you are using SFPTR  followed  by  BOUT,  then  you  may
             combine them into a single ROUT JSYS.


     k.  .FORNM -- Renames the file described by the RENAME block.

         JSYS:  Use the RNAMF JSYS to change the name of a file.

     l.  .FODLT -- Deletes the file described by the LOOKUP/ENTER block.

         JSYS:  Use DELF to  delete  a  file,  once  the  JFN  has  been
         obtained.   You may then use DELDF to expunge deleted files, if
         desired.

         TOPS-20 permits you to retain a specified number of generations
         of  deleted  files.   You may specify the number of generations
         you wish to keep by means of the DELNF JSYS.

     m.  .FOPRE -- Preallocates space for  the  file  described  by  the
         LOOKUP/ENTER block.  Most useful for batch jobs.

         JSYS:  There is no equivalent JSYS functionality.

     n.  .FOSIO -- Opens a device for super-I/O.

         JSYS:  The functionality of super-I/O is performed by the DSKOP
         JSYS.

     o.  .FOINP -- Performs INPUT UUO.

         JSYS:  See discussion with the IN UUO.

     p.  .FOOUT -- Performs OUTPUT UUO.

         JSYS:  See discussion with the OUT UUO.

     q.  .FOSET -- Performs SETSTS UUO.

         JSYS:  See discussion with the SETSTS UUO.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-31
FILOP. -- CALLI 155                                            16 Jan 84


     r.  .FOGET -- Performs GETSTS UUO.

         JSYS:  See discussion with the GETSTS UUO.

     s.  .FOREL -- Performs RELEAS UUO.

         JSYS:  The functions of the .FOREL function of the  FILOP.  UUO
         are performed by the CLOSF JSYS, which closes the file.  If you
         wish to release the JFN allocated for the file, use  the  RLJFN
         JSYS.

     t.  .FLWAT -- Waits for I/O to complete.

         JSYS:  Since all disk I/O operations cause your process to wait
         anyway,  there  is  no  corresponding  JSYS functionality.  The
         UFPGS updates all the pages of a specified file.

         The WAIT JSYS performs a related function.   It  dismisses  the
         process   indefinitely,  waiting  for  an  interrupt  from  the
         software interrupt system.

     u.  .FOSEK -- Performs SEEK UUO.

         JSYS:  There is no equivalent JSYS functionality.

     v.  .FORRC -- Rewrites the RIB of a file if it has changed.

         JSYS:  There is no  directly  equivalent  JSYS  function.   For
         information on checkpointing a file, see the earlier discussion
         of the .FOURB function of the FILOP.  UUO.   You  can  use  the
         CHFDB JSYS to change a file descriptor block.


PA1050:  Unsupported except for a small number of function  codes.   The
new  version  of  PA1050 described earlier in this manual in the chapter
entitled "THE PA1050 COMPATIBILITY PACKAGE" supports all function  codes
for the FILOP. UUO.






10.49  FRCUUO -- CALLI 106

-- Forces a command for a job or a terminal.  Privileged.

Functions:

     a.  .HALT -- stops the job.

         JSYS:   The  AT%CCJ  function  bit  in  the  ATACH  permits   a
         privileged  program  to generate a CTRL/C interrupt on any job.
         Note however that this will not stop a program that has  CTRL/C
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-32
FRCUUO -- CALLI 106                                            16 Jan 84


         interrupts enabled.

     b.  .BYE -- detaches the job.

         JSYS:  The ATACH JSYS permits a privileged  program  to  detach
         any job from its controlling terminal.

     c.  .HELLO -- Connects the job.

         JSYS:  The ATACH JSYS permits a privileged  program  to  attach
         any job to an available terminal as a controlling terminal.

     d.  .RESTA -- Displays the  configuration  name  and  time  on  the
         terminal.

         JSYS:  There is no JSYS functionality to do this for any but  a
         job's controlling terminal.  The SYSVER table of the GETAB JSYS
         gives the ASCIZ system name.

     e.  KJOB -- Kills the job.

         JSYS:  The LGOUT JSYS permits a privileged program to  log  out
         any job on the system.

     f.  INITIA -- runs INITIA.

         JSYS:  There is no JSYS functionality to run an  initialization
         program  on  another  terminal.   Remember  that  every  active
         terminal is always under the control of the TOPS-20 EXEC.

     g.  .FCONT -- Continues the job.

         JSYS:  No corresponding JSYS functionality.

     h.  .DUMP -- Calls DAEMON to write a core dump file.

         JSYS:  The SAVE and SSAVE JSYSs save the pages of a process  in
         a file.

     i.  .TYPE -- Displays the current input buffer (CTRL/R).

         JSYS:  A privileged program may use the STI  JSYS  to  put  the
         CTRL/R character into any job's input buffer.

     j.  USESTA -- Displays status information.  (CTRL/T)

         JSYS:  A privileged program may use the STI  JSYS  to  put  the
         CTRL/T character into any job's input buffer.

     k.  .NETLD -- invokes execution of the program which does automatic
         down-line loading for ANF-10 remote software.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-33
FRCUUO -- CALLI 106                                            16 Jan 84


         JSYS:  ANF network functionality is not supported by TOPS-20.

     l.  HALT -- Terminates the job (regardless of CTRL/C trapping)

         JSYS:  There is no corresponding JSYS functionality.  (See  the
         discussion of the .HALT function above.)


PA1050:  Unsupported.






10.50  FRECHN -- CALLI 52

Obsolete.

PA1050:  Unsupported.






10.51  GETCHR -- CALLI 6

-- Returns the physical characteristics of a specified device.  Same  as
DEVCHR.

JSYS:  See the DEVCHR UUO.

PA1050:  Supported.






10.52  GETLCH -- TTCALL 6,

-- Returns the line characteristics for a terminal line.

The following bits are returned:

     a.  GL.ITY -- Pseudo-terminal

         JSYS:  The DV%TYP field  in  the  device  characteristics  word
         returned  by the DVCHR JSYS contains the device type.  A device
         type value of .DVPTY indicates a pseudo-terminal.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-34
GETLCH -- TTCALL 6,                                            16 Jan 84


     b.  GL.CTY -- Operator's terminal.

         JSYS:  There is no equivalent JSYS information.

     c.  GL.DSP -- Display console.

         JSYS:  The GTTYP JSYS returns the terminal type code.  You  may
         test this code for various types of display terminals.

     d.  GL.DSL -- Dataset data line.

         JSYS:  The TT%CAR bit in the word returned by  the  RFMOD  JSYS
         indicates a dataset line.

     e.  GL.HDP -- Half-duplex line.

         JSYS:  The bits in the TT%DUM field of the  value  returned  by
         the RFMOD JSYS contain the duplex mode for a terminal line.

     f.  GL.REM -- Remote terminal.

         JSYS:  The bit MO%RMT in the word returned in AC2 by the .MORSP
         function of the MTOPR JSYS indicates a remote terminal.

     g.  GL.RBS -- Remote batch terminal.

         JSYS:  There is no equivalent JSYS information.

     h.  GL.LIN -- User has typed some input.

         JSYS:  The SIBE JSYS skips if the input buffer of a terminal is
         empty.

     i.  GL.LCM -- Terminal is in lowercase mode.

         JSYS:  The TT%LCA bit in the word returned by  the  RFMOD  JSYS
         indicates lowercase mode.

     j.  GL.TAB -- Terminal has tab capability.

         JSYS:  The TT%TAB bit in the word returned by  the  RFMOD  JSYS
         indicates a tab capability.

     k.  GL.LCP -- Local copy only (no echo).

         JSYS:  The TT%ECM bit in the word returned by  the  RFMOD  JSYS
         indicates the echo mode.

     l.  GL.PTM -- CTRL/Q papertape switch is on.

         JSYS:  No equivalent JSYS functionality.

UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-35
GETLCH -- TTCALL 6,                                            16 Jan 84


PA1050:  Supported.






10.53  GETLIN -- CALLI 34

-- Returns the SIXBIT physical name of the  terminal  attached  to  your
job.

JSYS:  The GJINF JSYS returns the terminal  number  of  the  controlling
terminal.   The  same information is available using GETJI to obtain the
word at offset .JITNO in the job information table.  You  may  then  use
this number to form a SIXBIT name if desired.

PA1050:  Supported.






10.54  GETPPN -- CALLI 24

-- Returns the PPN for your job.

JSYS:  The GJINF JSYS returns the directory number to which the  job  is
connected.   The  same information is available by using GETJI to obtain
the word at offset .JIDNO in the job information table.   You  may  then
use the DIRST JSYS to convert the directory number to a directory string
if desired.

PA1050:  Supported.






10.55  GETSEG -- CALLI 40

-- Replaces the current program high segment with a given high segment.

JSYS:  The GET JSYS can be used to get any portion of an EXE file into a
process  map.   Since  there is no concept of "high segment" in TOPS-20,
your GET argument list must specify the  exact  range  of  pages  to  be
loaded.

PA1050:  Supported.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-36
GETSTS -- 62B8                                                 16 Jan 84


10.56  GETSTS -- 62B8

-- Returns the file status bits for a device.

JSYS:  The following JSYSs provide device status information:

     a.  The GTSTS JSYS returns the status of a file associated  with  a
         JFN.

     b.  The GDSTS JSYS returns device-dependent status.

     c.  The RFMOD JSYS returns the JFN mode word.

     d.  The MTOPR JSYS returns device-dependent information.


PA1050:  Supported.






10.57  GETTAB -- <CALLI 41

-- Returns a word from one of the monitor's tables.

JSYS:  See the chapter "OBTAINING MONITOR INFORMATION"  in  this  manual
for  detailed information on JSYSs providing equivalent functionality to
the GETTAB UUO.  Note that if the  AC  contains  <%CNMNT==112,,11>,  the
TOPS-20  monitor  will  return  <.CNT20==040000>  without  invoking  the                                                  _______
compatibility package.

PA1050:  Supported.






10.58  GOBSTR -- CALLI 66

-- Returns file structure names from the search list for a job  or  from
the system.  (Related to JOBSTR UUO.)

JSYS:  This information is not available for any job but  your  own.   A
process  of your job can use the LNMST to translate either DSK:  or SYS:
to its definition string.  Note that LNMST may have  to  be  applied  to
some  of  the  names  returned  because  these may themselves be logical
names.

PA1050:  Supported.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-37
GTNTN. -- CALLI 165                                            16 Jan 84


10.59  GTNTN.  -- CALLI 165

-- Returns the line number and ANF-10 station number for a terminal.

JSYS:  ANF-10 is not supported under TOPS-20.

PA1050:  Unsupported.






10.60  GTXTN.  -- CALLI 166

-- Returns the physical name of the terminal for a given line number.

JSYS:  The GJINF JSYS returns the terminal  number  of  the  controlling
terminal.   The  same information is available using GETJI to obtain the
word at offset .JITNO in the job information table.  You  may  then  use
this number to form a SIXBIT name if desired.

PA1050:  Unsupported.






10.61  HIBER -- CALLI 72

-- Stops execution of the job until a specified event occurs.

Functions:

     a.  HB.IPC -- Wake the job when an IPCF packet  is  placed  in  its
         input queue.

         JSYS:  The .MUPIC  function  of  the  MUTIL  JSYS  enables  the
         software interrupt facility to handle this function.

     b.  HB.RIO -- Wake the job when asynchronous I/O is completed.

         JSYS:  There is no corresponding function  since  TOPS-20  does
         not  support asynchronous I/O supervisor calls.  You may obtain
         the same effect by having a sub-process  perform  the  I/O,  as
         described in this manual in the chapter entitled INPUT/OUTPUT.

     c.  HB.RPT -- Wake the job on PTY activity.

         JSYS:  The .MOAPI function of  the  MTOPR  JSYS  performs  this
         function.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-38
HIBER -- CALLI 72                                              16 Jan 84


     d.  HB.RTL -- Wake when a line of terminal input is ready.

         JSYS:  Use the software interrupt system.

     e.  HB.RTC -- Wake when a character of terminal input is ready.

         JSYS:  Use the software interrupt system.  You use  the  TT%WAK
         function   bits   of  the  SFMOD  JSYS  to  specify  the  break
         characters.

     f.  HB.RWJ -- Don't allow another job to issue WAKE for  your  job,
         unless that job is privileged.

         JSYS:  There  is  no  corresponding  JSYS  functionality.   See
         description of TWAKE JSYS below.

     g.  HB.RWP -- Wake job only on a WAKE UUO from  a  job  having  the
         same PPN.

         JSYS:  There  is  no  corresponding  JSYS  functionality.   See
         description of TWAKE JSYS below.

     h.  HB.RWT -- Wake the job only on a WAKE UUO from a job having the
         same project number.

         JSYS:  There  is  no  corresponding  JSYS  functionality.   See
         description of TWAKE JSYS below.


JSYS:  The DISMS  JSYS  permits  you  to  dismiss  your  process  for  a
specified number of milliseconds.  The THIBR JSYS dismisses your process
until either a specified number of milliseconds passes  or  another  job
issues  a TWAKE JSYS, whichever comes first.  Once your job has executed
THIBR, any job may waken it with TWAKE.

PA1050:  Supported.






10.62  HPQ -- CALLI 71

-- Place your job in high-priority scheduler queue.  Privileged.

JSYS:  High priority queues, as such,  are  not  available.   Equivalent
functionality  can  be obtained, but the method depends on which TOPS-20
scheduler is running:

     a.  If the class scheduler is running, use the SKED%  JSYS  to  put
         your job into a special class by itself, and give this class as
         much of the CPU as it desires.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-39
HPQ -- CALLI 71                                                16 Jan 84


     b.  If the class scheduler is not running, use the  SJPRI  JSYS  to
         set job priority.


PA1050:  Unsupported.






10.63  IN -- 56B8

-- Inputs data from an initialized channel to memory.

JSYS:  The type of preferred input JSYS depends on the type of device.

     a.  For disk input, the preferred input method is by means  of  the
         PMAP  JSYS.   Your  input  buffer  must  be page-aligned, and a
         multiple of a page in size -- this is different  from  TOPS-10,
         where the disk buffer size is 128 words.  You use the PMAP JSYS
         to map a page of a file to  your  input  buffer.   If  you  are
         performing  both  input  and output to the same disk page, then
         you specify both read and write access in the  PMAP  JSYS.   If
         you  do  that,  then  any  stores  into  the  input buffer will
         automatically update the corresponding page in the  disk  file,
         and no "write" operation will be necessary later.

     b.  For device-independent input, the  preferred  input  method  is
         SIN,  which inputs an arbitrary length string of bytes or words
         from any device.  BIN is used to input one byte at a time,  but
         it  is  far less efficient than SIN.  For disk devices, PMAP is
         far more efficient than either BIN or SIN.

     c.  To input bytes from random positions in a disk  file,  use  the
         RIN JSYS or PMAP JSYS.

     d.  For input from tape devices with fixed length records, use  SIN
         as  described above.  For input from tape devices with variable
         length records, use SINR to input one record at a time.

     e.  For input from the terminal, the preferred JSYS is RDTTY.   You
         may  also use TEXTI, which prompts the terminal user for input.
         In addition, PBIN inputs a single character from your terminal,
         but   is  less  efficient  than  RDTTY.   For  writing  command
         processors, use the COMND JSYS.

     f.  If your MACRO-10 program uses dump mode (with IOWDs), then  you
         can  use  the  DUMPI JSYS for compatibility.  However, DUMPI is
         less efficient than SIN or PMAP for disk devices.  DUMPI can be
         used for tape devices.

UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-40
IN -- 56B8                                                     16 Jan 84


PA1050:  Supported.






10.64  INBUF -- 64B8

-- Sets up an input buffer ring with a given number  of  buffers  for  a
given initialized channel.

JSYS:  There is no buffer ring  concept  in  TOPS-20,  so  there  is  no
corresponding  JSYS.   Your program must allocate its own I/O buffers by
any of the usual methods for allocating  blocks  of  storage.   If  your
program  is  going  to  use PMAPs to do input/output operations, the I/O
buffers must lie on page boundaries and be a multiple of a page in size.

PA1050:  Supported.






10.65  INCHRS -- TTCALL 2,

-- Inputs an  ASCII  character  from  the  job's  controlling  terminal,
skipping on return if the character was available.  Also sets "character
mode."

JSYS:  Use the SIBE JSYS to skip if the input buffer is empty.  When the
input buffer is not empty, then use PBIN to input a character.

PA1050:  Supported.






10.66  INCHRW -- TTCALL 0,

--  Inputs  an  ASCII  character  from  job's  controlling  terminal  in
character mode.

JSYS:  Use the PBIN JSYS to input a single character from the terminal.

PA1050:  Supported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-41
INCHSL -- TTCALL 5,                                            16 Jan 84


10.67  INCHSL -- TTCALL 5,

-- Inputs a character in line mode from the job's  controlling  terminal
in line mode, skipping on return if a line is available.

JSYS:  The SIBE JSYS can be used to test if the terminal input buffer is
empty.   If  the  input buffer is not empty, then use the RDTTY or TEXTI
JSYS to input a line of data.

PA1050:  Supported.






10.68  INCHWL -- TTCALL 4,

-- Inputs a character from the job's controlling terminal, waiting until
a break character is also typed, or 72 chars are typed.

JSYS:  The RDTTY or TEXTI  JSYS  can  input  an  entire  line  of  data,
permitting you an optional prompt.

PA1050:  Supported.






10.69  INIT -- 41B8

-- Initialize a device.  Note:  OPEN and FILOP. also initialize devices.

JSYS:  See discussion of OPEN UUO.

PA1050:  Supported.






10.70  INPUT -- 66B8

-- Inputs data from an initialized channel to memory.  Same as IN except
for error handling.

JSYS:  See IN UUO.

PA1050:  Supported.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-42
IONDX. -- CALLI 127                                            16 Jan 84


10.71  IONDX.  -- CALLI 127

-- Returns the universal device index (UDX) for a device or channel.

JSYS:  The DVCHR JSYS returns a device designator.

PA1050:  Unsupported.






10.72  IONEOU -- TTCALL 15,

-- Outputs an 8-bit image character on the job's controlling terminal.

JSYS:  You may specify image mode in the OPENF JSYS when  you  open  the
terminal  for output.  You specify a byte size of 8 bits, and image mode
(.GSIMG).  You may also use SFMOD/STPAR to put  a  terminal  into  image
mode.  You may then use the PBOUT JSYS to output the character.

PA1050:  Supported.






10.73  IPCFQ.  -- CALLI 144

-- Returns information about  a  process's  inter-process  communication
facility's (IPCF's) queue.

JSYS:  THE MRECV JSYS performs the same functions.

PA1050:  Unsupported.






10.74  IPCFR.  -- CALLI 142

-- Retrieves a packet from the IPCF input queue for the calling process.

JSYS:  The MRECV JSYS performs this function.

PA1050:  Unsupported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-43
IPCFS. -- CALLI 143                                            16 Jan 84


10.75  IPCFS.  -- CALLI 143

-- Sends an IPCF packet to the specified process.

JSYS:  The MSEND JSYS performs equivalent functionality.

PA1050:  Unsupported.






10.76  JBSET.  -- CALLI 113

-- Sets system or job parameters for another job.  Privileged.

JSYS:  The SJPRI, SPRIW and SKED% JSYSs permit a  privilege  program  to
change the job parameters for another job.

PA1050:  Unsupported.






10.77  JOBPEK -- CALLI 103

-- Reads or writes another job's memory area.  Privileged.

JSYS:  This functionality is normally used so that one job  can  monitor
the  activity  of another.  There is no corresponding JSYS functionality
between jobs.  However, if you can run the two programs as two processes
under  the  same job, then you can use the PMAP JSYS to map the pages of
one process into the  page  map  of  another  process.   For  equivalent
communication  between  programs  running  under different jobs, the two
programs can use PMAP to map their process pages to the same file,  both
specifying read and write access.

PA1050:  Unsupported.






10.78  JOBSTR -- CALLI 47

-- Returns names of file structures in your job's search list.  (Related
to GOBSTR UUO.)
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-44
JOBSTR -- CALLI 47                                             16 Jan 84


JSYS:  A process of your job can use the LNMST to translate DSK:  to its
definition string.  Note that LNMST may have to be re-applied to some of
the names returned because these may themselves be logical names.

PA1050:  Supported.






10.79  JOBSTS -- CALLI 61

-- Provides information (including checking statistics) about  the  PTY:
device and/or the controlled job.

Bits:

     a.  JB.UJA -- Job number is assigned

         JSYS:  The GETJI JSYS gives an error return if the  job  number
         argument is invalid.

     b.  JB.ULI -- Job is logged in.

         JSYS:  The word at offset .JILNO in the job  information  table
         contains  the  job's  logged-in  directory  number, and will be
         non-zero if the job is logged in.  This word  may  be  obtained
         with the GETJI JSYS.

     c.  JB.UML -- Terminal is at monitor level.

         JSYS:  The word at offset .JIT20 in the job  information  table
         indicates  whether  the job is at EXEC level.  This word may be
         obtained with the GETJI JSYS.

     d.  JB.UOA -- Terminal output is available.

         JSYS:  This information may be obtained for any job by means of
         the following procedure:

         a.  Obtain the job's terminal number from the  job  information
             table at offset .JITNO.  This word may be obtained with the
             GETJI JSYS.

         b.  Use the SOBE JSYS  to  skip  if  the  specified  terminal's
             output buffer is empty.


     e.  JB.UDI -- Job is waiting at monitor level.

         JSYS:  Under TOPS-20, this state is functionally equivalent  to
         JB.UML, described above.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-45
JOBSTS -- CALLI 61                                             16 Jan 84


     f.  JB.UJC -- JACCT set for job.

         JSYS:  TOPS-20 has no equivalent to JACCT.

     g.  JB.URN -- Job is running.

         JSYS:   Because  TOPS-20  is   process-oriented   rather   than
         job-oriented,  the  concept of a job running is not relevant to
         TOPS-20.  However, you can determine if a terminal is in  input
         wait  by  means  of the .MOPIH function of the MTOPR JSYS.  The
         controlling terminal number of a job will be  found  at  offset
         .JITNO in the job information table.  This word can be obtained
         with the GETJI JSYS.

     h.  JB.UFC -- TTY is in full character set mode.

         JSYS:  The TT%WAK field  returned  by  the  RFMOD  JSYS  for  a
         terminal  indicates  the  wakeup  characters.   The controlling
         terminal number for a job can be found as for JB.URN above.

     i.  JB.UNE -- TTY has no echo

         JSYS:  The TT%ECO bit of the value returned by the  RFMOD  JSYS
         for  a terminal indicates whether the terminal is echoing.  The
         controlling terminal number for a  job  can  be  found  as  for
         JB.URN above.

     j.  JB.UTO -- Job is in "TO" state

         JSYS:  This information is not available under TOPS-20.

     k.  JB.UCC -- Change since last JOBSTS

         JSYS:  No equivalent JSYS functionality.

     l.  JB.UJN (9 bits) -- Job number

         JSYS:  The word at offset .JIJNO of the job  information  table
         contains  the  job  number.  This word may be obtained with the
         GETJI JSYS.


JB.UJA -- Job number is assigned JB.ULI -- Job is logged in.  JB.UML  --
Terminal  is  at monitor level.  JB.UOA -- Terminal output is available.
Obtain the job's terminal number from the job information table  at  Use
the  SOBE  JSYS to skip if the specified terminal's output JB.UDI -- Job
is waiting at monitor level.  JB.UJC -- JACCT set for  job.   JB.URN  --
Job is running.  JB.UFC -- TTY is in full character set mode.  JB.UNE --
TTY has no echo JB.UTO -- Job is in "TO" state JB.UCC  --  Change  since
last JOBSTS JB.UJN (9 bits) -- job number



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-46
KDP. -- CALLI 200                                              16 Jan 84


10.80  KDP.  -- CALLI 200

-- Loads, dumps and starts the KMC-11.

JSYS:  DECnet functions are performed by the MTOPR JSYS.

PA1050:  Unsupported.






10.81  LIGHTS -- CALLI -1

-- Displays the contents of  the  specified  ac  on  the  KA/KI  console
lights.

JSYS:  There is no equivalent JSYS functionality.

PA1050:  Supported.






10.82  LOCATE -- CALLI 62

-- Changes the logical node number for the current job.

JSYS:  TOPS-20 does not support ANF network functionality.  However, the
word  at  offset  .JILLO  in  the  job  information table gives the same
information.  This word may be obtained with the GETJI JSYS.

PA1050:  Unsupported.






10.83  LOCK -- CALLI 60

-- Locks the current job into user memory.  Privileged.

JSYS:  The PLOCK JSYS can permit a privileged job to lock specific pages
into memory.  However, no real-time capability is available.

PA1050:  Unsupported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-47
LOGIN -- CALLI 15                                              16 Jan 84


10.84  LOGIN -- CALLI 15

-- Informs the monitor that a job has successfully logged in.   Used  by
LOGIN and INITIA programs.

JSYS:  The LOGIN JSYS is used by TOPS-20 to log a job in.

PA1050:  Supported.






10.85  LOGOUT -- CALLI 17

-- Logs out this job

JSYS:  The LGOUT JSYS can log a job out.

PA1050:  Supported.






10.86  LOOKUP -- 76B8

-- Selects a file for input.

JSYS:  The functions of LOOKUP are performed by the  OPENF  JSYS,  which
opens  the  file, after the GTJFN JSYS has been executed to assign a JFN
to the file.

To obtain information about the file that  you  get  from  the  extended
LOOKUP block in TOPS-10, you need the FDB (file descriptor block).  This
can be obtained by means of the GTFDB JSYS.  A summary of the  FDB  will
be found in the chapter entitled INPUT/OUTPUT.

PA1050:  Supported.






10.87  MERGE.  -- CALLI 173

-- Merges the contents of an .EXE file into  the  low  segment  of  your
current program's core image, discarding page 0 from the .EXE file.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-48
MERGE. -- CALLI 173                                            16 Jan 84


JSYS:  The GET JSYS merges an .EXE file into your program.  TOPS-20  has
no  concept  of  low and high segments, and so the GET JSYS must specify
precisely the range of pages in the EXE file  to  be  merged  with  your
program.

PA1050:  Unsupported.






10.88  METER.  -- CALLI 111

-- Selects or collects performance data from the monitor.

JSYS:  There are two methods for obtaining this type of information:

     a.  The SYSTAB table of the  GETAB  JSYS  makes  a  great  deal  of
         similar performance information available to your job.

     b.  The SNOOP% JSYS permits a privileged program to set breakpoints
         in  the  TOPS-20  monitor  to select or collect any performance
         data desired.


Note that the METER% JSYS performs a different function.

PA1050:  Unsupported.






10.89  MONRT.  -- EXIT 1, = CALLI 1,12

-- Same as EXIT 1,.

JSYS:  The HALTF JSYS terminates a process.






10.90  MSTIME -- CALLI 23

-- Returns the current time of day in milliseconds since midnight.

JSYS:  There are several options:
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-49
MSTIME -- CALLI 23                                             16 Jan 84


     a.  The ODCNV JSYS returns the number of seconds since midnight.

     b.  If you are interested in interval timing rather than the actual
         time  of  day,  you should use the TIME JSYS, which returns the
         number of milliseconds since the last system restart.

     c.  The GTAD JSYS returns the date and time  of  day  in  universal
         time/date   format  described  in  the  TOPS-20  Monitor  Calls                                                          _______  _____
         Reference Manual.         _________ ______

     d.  ODTIM returns the time  and  date  as  a  formatted  string  of
         characters,  and  various  option  flags permit you to vary the
         format.

     e.  Additional JSYS functions related to time and date are:  IDTIM,
         ODTNC, IDTNC and IDCNV.


PA1050:  Supported.






10.91  MTAID.  -- CALLI 126

-- Associates a SIXBIT reel identifier with a specified  magtape  drive.
Privileged.

JSYS:  The reel identification  can  be  set  by  means  of  the  .MOSID
function of the MTOPR JSYS.

PA1050:  Unsupported.






10.92  MTAPE -- 72B8

-- See MTWAT., MTREW., MTEOF., MTSKR., MTBSR., MTEOT.,  MTUNL.,  MTBLK.,
MTSKF., MTBSF., MTDEC., MTIND., MTLTH.

JSYS:  In general, device-specific  functions  for  magnetic  tapes  are
performed by the MTOPR and MTU% JSYSs.

PA1050:  Supported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-50
MTBLK. -- MTAPE 13                                             16 Jan 84


10.93  MTBLK.  -- MTAPE 13

-- Writes three inches of blank tape.

JSYS:  The .MORES function of the MTOPR JSYS performs the same function.

PA1050:  Unsupported.






10.94  MTBSF.  -- MTAPE 17

-- Backspaces one file on a magtape.

JSYS:  The .MOBKF function of the MTOPR JSYS performs the same function.

PA1050:  Unsupported.






10.95  MTBSR.  -- MTAPE 7

-- Backspaces one record on a magtape device.

JSYS:  The .MOBKR function of the MTOPR JSYS performs the same function.

PA1050:  Unsupported.






10.96  MTCHR.  -- CALLI 112

-- Returns  information  about  the  state  of  a  magtape  drive.   The
following bits are returned:

     a.  MT.AWC -- Word count of last record read or written.

         JSYS:  The GDSTS JSYS returns this information.

     b.  MT.CRC -- The last cyclic redundancy character.

         JSYS:  There is no equivalent JSYS information.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-51
MTCHR. -- CALLI 112                                            16 Jan 84


     c.  MT.NCR -- Number of characters read during last read.

         JSYS:  The GDSTS JSYS returns this information.

     d.  MT.7TR -- The unit is a 7-track unit.

         JSYS:  Track status information can be obtained from  the  word
         at offset .MOTRK in the data returned by the .MOSTA function of
         the MTOPR JSYS.

     e.  MT.WLK -- The tape transport is write-locked.

         JSYS:  This information can be obtained from the MT%ILW bit  in
         the word returned by the GDSTS JSYS.

     f.  MTDEN -- The tape density code

         JSYS:  There are two related JSYS functions:

        (i)  The .MORDN function of the MTOPR JSYS reads the density  of
             a tape.

       (ii)  The default tape density for a job may be obtained from the
             word  at  offset  .JIDEN in the job information block for a
             job.  This word may be obtained with the GETJI JSYS.



The argument list returns a number of error reporting statistics.  There
is no equivalent JSYS functionality for these.

PA1050:  Supported.






10.97  MTDEC.  -- MTAPE 100

-- Initializes a channel for DIGITAL-compatible mode tape handling.

JSYS:  This functionality can  be  obtained  by  performing  the  .MOSDM
function of the MTOPR JSYS, specifying the value .SJDDM.

PA1050:  Unsupported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-52
MTEOF. -- MTAPE 3                                              16 Jan 84


10.98  MTEOF.  -- MTAPE 3

-- Writes an end-of-file mark on a magtape.

JSYS:  The .MOEOF function of the MTOPR JSYS performs this function.

PA1050:  Unsupported.






10.99  MTEOT.  -- MTAPE 10

-- Advances a magtape device to the logical or physical end-of-tape,  as
identified by two consecutive end-of-file marks.

JSYS:  The .MTEOT function of the MTOPR JSYS performs this function.

PA1050:  Unsupported.






10.100  MTIND.  -- MTAPE 101

-- Initializes a channel for industry-compatible mode tape handling.

JSYS:  This function may be obtained by performing the  .MOSDM  function
of the MTOPR JSYS, specifying the value .SJDM8.

PA1050:  Unsupported.






10.101  MTLTH.  -- MTAPE 200

-- Sets a flag to read the next  record  on  the  given  device  at  low
threshold (TM10 only).

JSYS:  There is no equivalent JSYS functionality.

PA1050:  Unsupported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-53
MTREW. -- MTAPE 1                                              16 Jan 84


10.102  MTREW.  -- MTAPE 1

-- Rewinds a magtape.

JSYS:   The  .MOREW  function  of   the   MTOPR   JSYS   performs   this
functionality.   The  .MORVL  function  of MTOPR performs it for labeled
tapes.

PA1050:  Unsupported.






10.103  MTSKF.  -- MTAPE 16

-- Skips forward one file on a magtape device.

JSYS:  The .MOFWF function of the MTOPR JSYS performs this function.

PA1050:  Unsupported.






10.104  MTSKR.  -- MTAPE 6

-- Skips forward one record on magnetic tape.

JSYS:  The .MOFWR function of the MTOPR JSYS performs the same function.

PA1050:  Unsupported.






10.105  MTUNL.  -- MTAPE 11

-- Rewinds and unloads a tape.

JSYS:   The  .MORUL  function  of  the  MTOPR  JSYS  performs  the  same
functionality.

PA1050:  Unsupported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-54
MTWAT. -- MTAPE 0                                              16 Jan 84


10.106  MTWAT.  -- MTAPE 0

-- Stops program execution until all spacing and I/O  operations  for  a
device are completed.

JSYS:   The  .MONOP  function  of  the  MTOPR  JSYS  performs  the  same
functionality.

PA1050:  Unsupported.






10.107  MVHDR.  -- CALLI 131

-- Moves the buffer control block for an initialized  channel  from  one
location  to  another.   This  move  is  accomplished  by  changing  the
monitor's pointer to the buffer ring control block.

JSYS:  This functionality is not needed in TOPS-20, because your buffers
are entirely under your control.

PA1050:  Unsupported.






10.108  NODE.  -- CALLI 157

-- Performs  miscellaneous  functions  associated  with  ANF-10  network
nodes.

JSYS:  TOPS-20 does not support ANF-10 networks.

PA1050:  Unsupported.






10.109  NSP.  -- CALLI 205

-- Performs DECnet functions.

JSYS:  Similar functions are performed by the  MTOPR,  NTMAN%  and  NODE
JSYSs.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-55
OPEN -- 50B8                                                   16 Jan 84


10.110  OPEN -- 50B8

-- Initializes a device for I/O operations

JSYS:  The functions of OPEN are performed  by  the  OPENF  JSYS,  which
opens  the  file, after the GTJFN JSYS has been executed to assign a JFN
to the file.

PA1050:  Supported.






10.111  OTHUSR -- CALLI 77

-- Determines whether other jobs are logged in under your PPN.

JSYS:  The job's user number is stored at offset .JIUNO  in  each  job's
job  information table.  You must program OTHUSR by writing a loop using
the GETJI JSYS to examine the user number for each job in the system.

PA1050:  Unsupported.






10.112  OUT -- 57B8

-- Transmits data from your job's core area to the file selected for the
given channel.

JSYS:  The preferred type of output JSYS depends on the type of device:

     a.  For disk output, the preferred output method is by means of the
         PMAP  JSYS.   Your  output  buffer  must be page-aligned, and a
         multiple of a page in size -- this is different  from  TOPS-10,
         where the disk buffer size is 128 words.  You use the PMAP JSYS
         to map the page of memory to a page of the file.  You  may  use
         the  UFPGS  JSYS  to  guarantee  that the pages of the file are
         updated before any other file operations are performed.  If you
         are performing both input and output to the same disk page, see
         further directions under the IN UUO.

     b.  For device-independent output, the preferred output  method  is
         SOUT, which permits you to output an arbitrary length string of
         bytes or words to any device.  BOUT is permitted to output  one
         byte  at  a  time, but it is far less efficient than SOUT.  For
         disk devices, PMAP is far more efficient than  either  BOUT  or
         SOUT.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-56
OUT -- 57B8                                                    16 Jan 84


     c.  To output bytes to random positions in a  disk  file,  use  the
         ROUT JSYS or the PMAP JSYS.

     d.  For output to tape devices with fixed length records, use  SOUT
         as  described  above.  For output to tape devices with variable
         length records, use SOUTR, which outputs one record at a time.

     e.  For output to the terminal, the preferred JSYS is PSOUT.  There
         are  many other options, however, and these are discussed under
         the OUTSTR UUO.

     f.  If your MACRO-10 program uses dump mode (with IOWDs), then  you
         can  use  the  DUMPO JSYS for compatibility.  However, DUMPO is
         less efficient than SOUT or PMAP for disk devices.   DUMPO  can
         be used for tape devices.


PA1050:  Supported.






10.113  OUTBUF -- 65B8

-- Sets up an output buffer ring with a given number of  buffers  for  a
given initialized channel.

JSYS:  There is no buffer ring concept in TOPS-20, and so  there  is  no
corresponding  JSYS.   Your  program  must  allocate its own I/O buffers
using any of the usual methods for allocating  blocks  of  storage.   If
your  program  is going to use PMAPs to do input/output operations, then
the I/O buffers must lie on page boundaries and be a multiple of a  page
in size.

PA1050:  Supported.






10.114  OUTCHR -- TTCALL 1,

-- Outputs an ASCII character to the job's controlling terminal.

JSYS:  The  PBOUT  JSYS  performs  the  same  functionality.   For  more
efficient  output  to  the  terminal you should consider a string output
JSYS.  For discussions of these, refer to the OUTSTR UUO.

PA1050:  Supported.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-57
OUTPUT -- 67B8                                                 16 Jan 84


10.115  OUTPUT -- 67B8

-- Outputs data from memory to an initialized channel.  Like OUT.

JSYS:  See OUT UUO.

PA1050:  Supported.






10.116  OUTSTR -- TTCALL 3,

-- Displays an ASCIZ string on the user terminal.

JSYS:  The PSOUT JSYS performs the same function as the OUTSTR UUO.

There are a number of additional options you may wish to consider:

     a.  If you wish to print an error message on the  user's  terminal,
         then use the ESOUT JSYS, which is designed for error messages.

     b.  If the output string is a prompt that  is  to  be  followed  by
         terminal  input,  then combine the two functions with the TEXTI
         JSYS.   This  call  handles  both  terminal  output  and  input
         together,  and  performs terminal editing functions in a useful
         manner.  For example, when the user types CTRL/U, TEXTI repeats
         the  prompt.   For  writing  a command processor, use the COMND
         JSYS.

     c.  If the string is obtained by converting an integer or  floating
         point  number  to  character  format,  then you may use NOUT or
         FLOUT to perform the conversion  and  print  the  result  in  a
         single JSYS.

     d.  Many JSYSs, such  as  JFNS  or  ODTIM,  direct  output  to  the
         terminal if desired.


PA1050:  Supported.






10.117  PAGE.  -- CALLI 145

-- Manipulates pages and data associated with those pages in your  job's
address space.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-58
PAGE. -- CALLI 145                                             16 Jan 84


Functions:

     a.  .PAGIO -- Swaps a page in or out.

         JSYS:   There  is  no  corresponding   TOPS-20   functionality.
         However,  you  may  use  the  RWSET JSYS to release your entire
         working set and swap all your pages out.

     b.  .PAGCD -- Creates or destroys a specified page.

         JSYS:  Your program can create  a  previously  unused  page  by
         simply  "touching"  it  -- fetching a word from it or storing a
         word into it.  Your program can release a page by means of  the
         PMAP JSYS.

     c.  .PAGEM -- Moves or exchanges pages.

         JSYS:  You may use the PMAP JSYS to move  or  exchange  process
         pages.

     d.  .PAGAA -- Sets or clears the access-allowed bit for a page.

         JSYS:  The SPACS JSYS sets the accessability of a page.

     e.  .PAGWS -- Returns a bit map of those pages in the working set.

         JSYS:  There is no corresponding JSYS functionality.

     f.  .PAGGA -- Returns a bit map indicating the pages which have the
         access-allowed bit set.

         JSYS:  The RPACS JSYS returns  the  accessability  of  a  given
         page.

     g.  .PAGCA -- Determines the type of access  allowed  for  a  given
         page.   (Page  does  not  exist,  writable page, readable page,
         access allowed, allocated page but zero, page cannot  be  paged
         out,  page  is  paged  out,  page  is  in high segment, page is
         sharable, page is spying, page is locked into memory,  or  page
         is not cached (KL10 only)).

         JSYS:   RPACS  returns  the  accessability  (read,  write,   or
         execute)  and  other  information  about  a  given  page.   The
         "allocated page but zero" case can be determined with the "page
         exists" (PA%PEX) bit returned by RPACS.

     h.  .PAGCH -- Creates a high segment from a  contiguous  collection
         of pages.

         JSYS:  There is no corresponding  JSYS  functionality,  because
         TOPS-20 does not distinguish high and low segments.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-59
PAGE. -- CALLI 145                                             16 Jan 84


     i.  .PAGCB -- Sets or clears the cache bit for the page.

         JSYS:  There is no corresponding JSYS functionality.

     j.  .PAGSP -- Adds or deletes pages from the user's address space.

         JSYS:  The PMAP JSYS performs this functionality.


PA1050:  Unsupported.






10.118  PATH.  -- CALLI 110

-- Sets or reads a user's default directory path.  (Related to STRUUO.)

JSYS:  The closest equivalent JSYS functionality  has  to  do  with  the
logical name definition for DSK:, as follows:

     a.  You may use the CRLNM JSYS to define the logical name DSK:.

     b.  A process of your job can use the LNMST to translate  DSK:   to
         its  definition string.  Note that LNMST may have to be applied
         to some of the names returned, since these  may  themselves  be
         logical names.


PA1050:  Supported.






10.119  PEEK -- CALLI 33

-- Returns the contents of any location in the monitor.

JSYS:  The PEEK and XPEEK JSYSs can be used by a privileged  program  to
obtain  information  about  the  monitor.   However, this information is
highly system-dependent and has a  completely  different  interpretation
than the corresponding TOPS-10 data.

PA1050:  Supported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-60
PERF. -- CALLI 162                                             16 Jan 84


10.120  PERF.  -- CALLI 162

-- Allows privileged to perform system measurements.

JSYS:  There are two methods for obtaining this type of information:

     a.  The SYSTAB table of the  GETAB  JSYS  makes  a  great  deal  of
         similar performance information available to your job.

     b.  The SNOOP% JSYS permits a privileged program to set breakpoints
         in  the  TOPS-20  monitor  to select or collect any performance
         data desired.


PA1050:  Unsupported.






10.121  PIINI.  -- CALLI 135

-- Initializes the software interrupt facility.

JSYS:  The software interrupt system  is  described  elsewhere  in  this
manual  in  the  chapter  entitled  "TRAP  AND INTERRUPT HANDLING." That
chapter also lists some  of  the  JSYSs  for  controlling  the  software
interrupt  system.   Complete  details on the TOPS-20 software interrupt
system may be found in the TOPS-20 Monitor Calls Reference Manual.                           _______ _______ _____ _________ ______

PA1050:  Unsupported.






10.122  PIJBI.  -- CALLI 175

-- Allows one job to interrupt another using a software interrupt.

JSYS:  There is no directly equivalent JSYS functionality.  However,  it
can be programmed as follows:

     a.  Initiate a sub-process which dismisses itself using  the  THIBR
         JSYS.

     b.  Have the second job wake up the sub-process  by  means  of  the
         TWAKE JSYS.

     c.  When the sub-process wakes up,  have  it  generate  a  software
         interrupt to the superior process.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-61
PIJBI. -- CALLI 175                                            16 Jan 84


PA1050:  Unsupported.






10.123  PIRST.  -- CALLI 141

-- Restores the saved state of the interrupt facility.

JSYS:  The RIR JSYS reads the interrupt tables for a process.

PA1050:  Unsupported.






10.124  PISAV.  -- CALLI 140

-- Returns the monitor's data for the  current  state  of  the  software
interrupt facility.

JSYS:  A list of JSYSs for controlling the  TOPS-20  software  interrupt
system  will  be found elsewhere in this manual, in the chapter entitled
"TRAP AND INTERRUPT HANDLING."

PA1050:  Unsupported.






10.125  PISYS.  -- CALLI 136

--  Controls  the  program  software  interrupt  (PSI)  facility  during
execution.

JSYS:  A list of JSYSs for controlling the  TOPS-20  software  interrupt
system  can  be  found  in  the  chapter  entitled  "TRAP  AND INTERRUPT
HANDLING."

PA1050:  Unsupported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-62
PJOB -- CALLI 30                                               16 Jan 84


10.126  PJOB -- CALLI 30

-- Returns the job number of your job.

JSYS:  The GETJI and GJINF JSYSs return job information, including  your
job number.

PA1050:  Supported.






10.127  POKE.  -- CALLI 114

-- Changes the value of a word in monitor memory.

JSYS:  There is no directly corresponding JSYS functionality.   If  your
process  has  the  appropriate privileges, you can use the MDDT% JSYS to
enter MDDT and modify the monitor, or you can use SNOOP%  to  breakpoint
and modify the monitor.

PA1050:  Unsupported.






10.128  QUEUE.  -- CALLI 201

-- Allows user software to interface with the  system  components  which
have a defined system PID.

JSYS:  The QUEUE% JSYS performs the  same  functionality.   However,  if
your  TOPS-10  program  is  using  QUEUE. to transmit information to the
accounting daemon (ACTDAE), then  you  should  use  the  USAGE  JSYS  to
perform the same function.

PA1050:  Unsupported.






10.129  REASSI -- CALLI 21

-- Reassigns or deassigns a device for a job.

JSYS:  The ASND JSYS assigns a device to the current job.  The RELD JSYS
releases  an  assigned  device.   The  ALLOC  JSYS  permits a privileged
program to assign a device to a different job.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-63
REASSI -- CALLI 21                                             16 Jan 84


PA1050:  Supported.






10.130  RECON.  -- CALLI 202

-- Performs system reconfiguration functions.  Privileged.

JSYS:  No equivalent JSYS functionality.

PA1050:  Unsupported.






10.131  RELEAS -- 61B8

-- Releases an I/O channel.

JSYS:  The functions of RELEASE are performed by the CLOSF  JSYS,  which
closes the file.  If you wish to release the JFN allocated for the file,
use the RLJFN JSYS.

PA1050:  Supported.






10.132  REMAP -- CALLI 37

-- Moves the specified portion of a program's low segment into the  high
segment, discarding the old high segment from the user address space.

JSYS:  TOPS-20 does not recognize low and high segments.   However,  you
may  use  the  PMAP  JSYS  to  remap pages from one portion of memory to
another.

PA1050:  Supported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-64
RENAME -- 55B8                                                 16 Jan 84


10.133  RENAME -- 55B8

-- Performs these file functions:

     a.  Alters file attributes, including the filename, file extension,
         and protection code of the file.

         JSYS:  Use CHFDB to alter  the  file  attributes  in  the  file
         descriptor  block  (FDB).   To  change  the name of a file, use
         RNAMF.

     b.  Deletes the specified file.

         JSYS:  Use DELF to  delete  a  file,  once  the  JFN  has  been
         obtained.   You may then use DELDF to expunge deleted files, if
         you wish.

         TOPS-20 permits you to retain a specified number of generations
         of  deleted  files.   You may specify the number of generations
         you wish to keep by means of the DELNF JSYS.


PA1050:  Supported.






10.134  RESCAN -- TTCALL 10,

-- Resets the input buffer pointer to point to the beginning of the last
command.

JSYS:  This functionality must be reprogrammed using the RSCAN JSYS.

PA1050:  Supported.






10.135  RESDV.  -- CALLI 117

-- Resets a single channel.

JSYS:   Use  the  CLOSF  JSYS  with  the  CZ%ABT  option  to  abort  the
input/output operation without performing any cleanup operations.

PA1050:  Supported.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-65
RESET -- CALLI 0                                               16 Jan 84


10.136  RESET -- CALLI 0

-- Initializes a program.

JSYS:  The RESET JSYS performs the same type of initialization function.

PA1050:  Supported.






10.137  RTTRP -- CALLI 57

-- Connects a device to or  releases  it  from  the  realtime  interrupt
facility.  Privileged.

JSYS:  There is no realtime facility in TOPS-20.

PA1050:  Unsupported.






10.138  RUN -- CALLI 35

-- Transfers execution control  from  the  current  program  to  another
program.

JSYS:  There is no JSYS functionality that clears the  entire  executing
process  and  runs  a new .EXE file.  Instead, the RUN UUO functionality
must be programmed in either of the following ways:

     a.  Write your program using a sub-process structure.  The superior
         process  can  run one program after another in the sub-process.
         The superior process can use the GET JSYS to load each new .EXE
         file in turn into the inferior process's memory.

     b.  Within a single process, the RUN UUO  can  be  simulated.   The
         process  must set aside a small portion of memory which will be
         common to all programs being run in the process.  Each  program
         jumps  to the common portion of memory to run the next program.
         The common portion of memory uses the GET JSYS to load the next
         .EXE  file  into  memory and the jumps to the starting address.
         Note:  You may be able to avoid  setting  aside  a  portion  of
         memory by executing the GET JSYS in ACs.


PA1050:  Supported.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-66
RUNTIM -- CALLI 27                                             16 Jan 84


10.139  RUNTIM -- CALLI 27

-- Returns the cumulative runtime is milliseconds or in  ten-microsecond
units for a specified job.

JSYS:  The RUNTM JSYS returns the cumulative CPU runtime for either  the
current process or the entire job.

PA1050:  Supported.






10.140  SCHED.  -- CALLI 150

-- Reads or sets system scheduling parameters.  Privileged.

JSYS:  The SKED% JSYS performs the same functions.

PA1050:  Unsupported.






10.141  SEEK -- CALLI 56

-- Controls the time when positioning occurs on an idle disk unit.   You
can position the disk I/O pointer using USETO and USETI.

JSYS:  There is no equivalent JSYS functionality.

PA1050:  Supported.






10.142  SENSE.  -- CALLI 133

-- Returns the file status  bits  for  a  device  connected  to  an  MPX
channel.

JSYS:  TOPS-20 does not support multiplexing of devices.  For discussion
of obtaining status information, see DEVSTS UUO.

PA1050:  Unsupported.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-67
SETDDT -- CALLI 2                                              16 Jan 84


10.143  SETDDT -- CALLI 2

-- Sets the value of .JBDDT in the job data area.

JSYS:  There is no equivalent JSYS functionality

PA1050:  Supported.






10.144  SETLCH -- TTCALL 7,

-- Sets the line characteristics for your job's controlling terminal.

The following bits are set:

     a.  GL.ITY -- Pseudo-terminal

         JSYS:  This bit cannot be set with a JSYS.  If the terminal  is
         a pseudo-terminal, then TOPS-20 will set the bit.

     b.  GL.CTY -- Operator's terminal.

         JSYS:  This bit cannot be set with a JSYS.

     c.  GL.DSP -- Display console.

         JSYS:  There is no corresponding TOPS-20 bit.  However, you can
         use the STTYP JSYS to set the terminal type.

     d.  GL.HDP -- Half-duplex line.

         JSYS:  The STPAR JSYS may be used to set the duplex mode in the
         TT%DUM field of the JFN mode word for the terminal.

     e.  GL.REM -- Remote terminal.

         JSYS:  You can set this bit using the .MOSPD  function  of  the
         MTOPR JSYS, specifying the MO%RMT bit.

     f.  GL.RBS -- Remote batch terminal.

         JSYS:  There is no corresponding JSYS functionality.

     g.  GL.LIN -- User has typed some input.

         JSYS:  This bit cannot be set by means of a JSYS.

     h.  GL.LCM -- Terminal in lowercase mode.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-68
SETLCH -- TTCALL 7,                                            16 Jan 84


         JSYS:  The STPAR JSYS can set the  TT%LCA,  TT%UOC  and  TT%LIC
         fields  of  the  JFN  mode  word  for  the terminal, to control
         handling of upper and lower case.

     i.  GL.TAB -- Terminal has tab capability.

         JSYS:  The STPAR JSYS can set the TT%TAB field of the JFN  mode
         word for the terminal to indicate tab capability.

     j.  GL.LCP -- Local copy only (no echo).

         JSYS:  The TT%ECO and TT%ECM fields of the JFN  mode  word  for
         the  terminal  indicate  the  handling  of echoing.  The TT%ECO
         field may be changed with the SFMOD JSYS, and the TT%ECM  field
         may be changed with the STPAR JSYS.

     k.  GL.PTM -- The CTRL/Q papertape switch is on.

         JSYS:  There is no corresponding JSYS functionality.


PA1050:  Supported.






10.145  SETNAM -- CALLI 43

-- Changes the name of the current program in the monitor's job table.

JSYS:  The SETNM JSYS sets the private name of a job.   The  SETSN  JSYS
sets  the  system  name  (corresponding  to  the  TOPS-10  high  segment
concept).

PA1050:  Supported.






10.146  SETPOV -- CALLI 32

-- Sets a trap address for pushdown overflows

JSYS:  You must use the  software  interrupt  system  to  trap  pushdown
overflow errors.  Use the function code .ICPOV to the EIR JSYS.

PA1050:  Unsupported.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-69
SETSTS -- 60B8                                                 16 Jan 84


10.147  SETSTS -- 60B8

-- Sets bits in the file status word for a device

JSYS:  The following JSYSs perform these functions:

     a.  The SFMOD JSYS sets fields in the JFN.

     b.  The SDSTS JSYS sets the device status.

     c.  The STSTS JSYS clears the status of a file.

     d.  The MTOPR JSYS sets device-dependent status bits.


PA1050:  Supported.






10.148  SETUUO -- CALLI 75

-- Sets system or job parameters for your job.  You must  be  privileged
to set system parameters.

Functions:

     a.  .STCMX -- Sets the maximum core size that a user  job  may  use
         (CORMAX).

         JSYS:  There is no corresponding JSYS functionality.

     b.  .STCMN -- Sets the guaranteed amount of contiguous core that  a
         single unlocked job can use (CORMIN)

         JSYS:  There is no corresponding JSYS functionality.

     c.  .STDAY -- Sets the time on the CPU clock.

         JSYS:  The STAD JSYS permits a privileged program  to  set  the
         system date and time.

     d.  .STSCH -- Sets the scheduler parameters in GETTAB table 11.

         JSYS:  Scheduler parameters are set by means of the SKED% JSYS.

     e.  .STCDR -- Specifies the input name for the  card  reader  input
         job, which is stored in the left half of the location .STSPL.

         JSYS:  The SPOOL JSYS sets spooling parameters.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-70
SETUUO -- CALLI 75                                             16 Jan 84


     f.  .STSPL -- Sets or clears  the  spooling  state  for  the  job's
         devices -- bits 31 to 35 of location .STSPL.

         JSYS:  The SPOOL JSYS sets spooling parameters.

     g.  .STWTC -- Sets flags for SET WATCH routine.

         JSYS:  There is no corresponding JSYS functionality, since  SET
         WATCH  is  not  implemented.  note however that you may use the
         TFORK JSYS to trap all JSYS calls and implement  your  own  SET
         WATCH  functionality.   The TOPS-20 EXEC uses the TFORK JSYS to
         implement  its  SET  TRAP  JSYS  and  SET  TRAP   FILE-OPENINGS
         commands.

     h.  .STDAT -- Sets the system date.

         JSYS:  The STAD JSYS permits a privileged program  to  set  the
         system date and time.

     i.  .STOPR -- Sets the SIXBIT name of the terminal to  be  used  as
         the operator terminal.

         JSYS:  There is no equivalent JSYS functionality.

     j.  .STKSY -- Sets the decimal number of minutes until  timesharing
         ends.

         JSYS:  A privileged program may perform the same function  with
         the HSYS JSYS.

     k.  .STCLM -- Sets the maximum number of words  that  the  job  can
         use.

         JSYS:  There is no corresponding JSYS functionality.

     l.  .STTLM -- Sets the maximum number of seconds the job can run.

         JSYS:  The TIMER JSYS can specify a time interval  after  which
         the process is interrupted.

     m.  .STCPU -- Specifies the CPU on which the job is to run.

         JSYS:  There is no corresponding JSYS functionality.

     n.  .STCRN -- Sets runnability for CPUs.

         JSYS:  There is no corresponding JSYS functionality.

     o.  .STLMX -- Sets the maximum number of jobs that can be logged in
         at any one time.

         JSYS:  There is no equivalent JSYS functionality.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-71
SETUUO -- CALLI 75                                             16 Jan 84


     p.  .STBMX -- Sets the maximum number of batch  jobs  that  can  be
         logged in at any one time.

         JSYS:  This  function  can  be  performed  only  with  the  OPR
         program.

     q.  .STBMN -- Sets the number  of  jobs  reserved  for  batch  mode
         (BATMIN).

         JSYS:  There is no equivalent JSYS functionality.

     r.  .STDFL -- Sets the action to occur if the user  disk  space  is
         filled for the job.

         JSYS:  There is no corresponding JSYS functionality.

     s.  .STMVM -- Sets the system-wide virtual memory limit.

         JSYS:  There is no corresponding JSYS functionality.

     t.  .STUVM -- Sets the maximum virtual and physical page limits.

         JSYS:  There is no corresponding JSYS functionality.

     u.  .STCVM -- Sets the current virtual memory maximum.

         JSYS:  There is no corresponding JSYS functionality.

     v.  .STTVM --  Sets  the  time  interval  in  milliseconds  between
         virtual time traps.

         JSYS:  There is no corresponding JSYS functionality.

     w.  .STABK -- Sets the address break condition.

         JSYS:  The ADBRK JSYS performs the same functionality.

     x.  .STPGM -- Sets the "program run" specification.

         JSYS:  There is no equivalent JSYS functionality.

     y.  .STDFR -- Sets deferred spooling.

         JSYS:  The same functionality  is  obtained  by  means  of  the
         .SJDFS function of the SETJB JSYS, specifying the value .SJSPD.

     z.  .STHST -- Sets the host system.

         JSYS:  There is no equivalent functionality  to  set  the  host
         system.   However, you can use the .SJLLO function of the SETJB
         JSYS to set the spooled output logical station.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-72
SETUUO -- CALLI 75                                             16 Jan 84


    aa.  .STDEF -- Sets default values.

         JSYS:  There is no equivalent JSYS functionality.

    ab.  .STPRV -- Sets the privilege word.

         JSYS:  There is no equivalent JSYS functionality.

    ac.  .STBSN -- Sets batch stream number.

         JSYS:  The batch stream number may  be  set  by  means  of  the
         .SJBAT function of the SETJB JSYS.

    ad.  .STWTO -- Sets write-to-operator values.

         JSYS:  The .SJBAT function of SETJB sets the  write-to-operator
         capabilities.

    ae.  .STCDN -- Sets CPU up/down status.  Privileged.

         JSYS:  There is no equivalent JSYS functionality.

    af.  .STCSB -- Sets or clears cache bits.  Privileged.

         JSYS:  There is no equivalent JSYS functionality.

    ag.  .STFPS -- Sets or clears floating-point simulation.

         JSYS:  There is no equivalent JSYS functionality.

    ah.  .STOPP -- Allows various levels of operators to run OPR without
         [1,2] privileges.

         JSYS:  There is no equivalent JSYS functionality.


PA1050:  Unsupported.






10.149  SETUWP -- CALLI 36

-- Sets or clears user-mode write protection for the job's high segment.

JSYS:  The SPACS JSYS can perform this function for a particular page.

PA1050:  Unsupported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-73
SKPINC -- TTCALL 13,                                           16 Jan 84


10.150  SKPINC -- TTCALL 13,

-- Skips if there is a character in the input buffer.   (Sets  character
mode terminal input.)

JSYS:  The SIBE JSYS performs similar functionality.

PA1050:  Supported.






10.151  SKPINL -- TTCALL 14,

-- Skips if there is a line in the input buffer.

JSYS:  The SIBE JSYS can determine if there are any  characters  in  the
input  buffer.   There is no JSYS to determine if there is a line in the
input buffer.

PA1050:  Supported.






10.152  SLEEP -- CALLI 31

-- Causes your program to became  dormant  for  a  specified  number  of
real-time seconds.

JSYS:  The DISMS JSYS performs the same  functionality,  specifying  the
time  in  milliseconds.   See discussion under the HIBER UUO for further
information.

PA1050:  Supported.






10.153  SNOOP.  -- CALLI 176

-- Allows privileged programs to insert breakpoints into the monitor.

JSYS:  The SNOOP% JSYS performs a similar function.

PA1050:  Unsupported.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-74
SPPRM. -- CALLI 172                                            16 Jan 84


10.154  SPPRM.  -- CALLI 172

-- Sets parameters for spool files, including number of  copies,  SIXBIT
forms name and limit.

JSYS:  There is  no  equivalent  JSYS  functionality.   The  SPOOL  JSYS
provides related functionality.

PA1050:  Unsupported.






10.155  SPY -- CALLI 42

-- Maps monitor low-segment  address  space  into  your  program's  high
segment.  Privileged.

JSYS:  There is no directly equivalent  JSYS  function.   The  PEEK  and
XPEEK  JSYSs  permit  a  privileged  program  to obtain system-dependent
monitor information.

PA1050:  Unsupported.






10.156  STATO -- 61B8

-- Tests the file status word  for  a  device  to  see  if  any  of  the
specified bits are set.

JSYS:  See the discussion with the GETSTS UUO.

PA1050:  Supported.






10.157  STATZ -- 63B8

-- Tests the file status word  for  a  device  to  see  if  any  of  the
specified bits are cleared.

JSYS:  See the discussion with the GETSTS UUO.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-75
STATZ -- 63B8                                                  16 Jan 84


PA1050:  Supported.






10.158  STRUUO -- CALLI 50

-- Modifies the search list for a job or for the system.

JSYS:  This function cannot be performed for any job but  your  own.   A
process  can  use  the  CRLNM JSYS to define either of the logical names
DSK:  or SYS:.

PA1050:  Supported.






10.159  SUSET.  -- CALLI 146

-- Selects a logical block number  to  be  either  read  or  written  on
subsequent IN/INPUT or OUT/OUTPUT UUOs.  (Super USETI/USETO)

JSYS:  The DSKOP JSYS performs this function.

PA1050:  Unsupported.






10.160  SWITCH -- CALLI 20

-- Returns the values of the CPU data switches on KI consoles.

JSYS:  There is no equivalent JSYS functionality.

PA1050:  Supported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-76
SYSPHY -- CALLI 51                                             16 Jan 84


10.161  SYSPHY -- CALLI 51

-- Returns the name of a physical disk unit on the system.

JSYS:  The .MSRNU function of the MSTR JSYS permits your program to loop
through the disk units, obtaining information about each one.  Using the
.MSRUI field, you may obtain the unit identification.

PA1050:  Supported.






10.162  SYSSTR -- CALLI 46

-- Returns the name of a file structure on the system.

JSYS:  The .MSRNU function of the MSTR JSYS permits your program to loop
through  the  disk units, obtaining information about each one.  You may
use the .MSRSN field to obtain the file structure name corresponding  to
each  unit,  and  then  use  the .MSGSS function of the MSTR JSYS to get
structure information.

PA1050:  Supported.






10.163  TAPOP.  -- CALLI 154

-- Performs various magtape operations.

Functions:

     a.  .TFWAT -- Waits for I/O to be completed.

         JSYS:  The .MONOP function of the MTOPR JSYS waits for  I/O  to
         be completed.

     b.  .TFREW -- Rewinds tape to load point.

         JSYS

         JSYS:  The .MOREW function of the MTOPR JSYS  rewinds  tape  to
         the load point.  The .MORVL function rewinds a labeled tape.

     c.  .TFUNL -- Rewinds and unloads tape.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-77
TAPOP. -- CALLI 154                                            16 Jan 84


         JSYS:  The .MORUL  function  of  the  MTOPR  JSYS  rewinds  and
         unloads a magnetic tape.

     d.  .TFFSB -- Skips forward one block.

         JSYS:  The .MOFWR function of the MTOPR JSYS skips forward  one
         block on a magnetic tape.

     e.  .TFFSF -- Skips forward one file.

         JSYS:  The .MOFWF function of the MTOPR JSYS skips forward  one
         file on a magnetic tape.

     f.  .TFSLE -- Skips to logical end-of-tape

         JSYS:  The .MOEOT function of the MTOPR JSYS skips  to  logical
         end-of-tape.

     g.  .TFBSB -- Skips backward one block

         JSYS:  The .MOBKR function of the MTOPR JSYS skips backward one
         block.

     h.  .TFBSF -- Skips backward one file

         JSYS:  The .MOBKF function of the MTOPR JSYS skips backward one
         file.

     i.  .TFWTM -- Writes a tape mark

         JSYS:  The .MOEOF function of the MTOPR JSYS writes a tape mark
         on a magnetic tape.

     j.  .TFWLG -- Writes 3 inches of blank tape.

         JSYS:  The .MOERS function of the MTOPR JSYS writes 3 inches of
         blank tape.

     k.  .TFDSE -- Erases entire tape (data security, TX01/02 only)

         JSYS:  There is no equivalent JSYS functionality.

     l.  .TFWLE -- Writes logical end-of-tape.

         JSYS:  This function is performed by  writing  two  consecutive
         end-of-file  marks.   You  can do this by performing the .MOEOF
         function of the MTOPR JSYS twice.

     m.  .TFLBG -- Gets the tape label device data block.  Privileged

         JSYS:   The  .MORLI  function  of  the  MTOPR  JSYS  reads  the
         available fields from the standard volume and header labels.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-78
TAPOP. -- CALLI 154                                            16 Jan 84


     n.  .TFLRL  --  Releases  the  tape  label   device   data   block.
         Privileged

         JSYS:  There is no equivalent JSYS functionality.

     o.  .TFLSU -- Swaps units.  Privileged, used by label processor.

         JSYS:  There is no equivalent JSYS functionality.

     p.  .TFLDD -- Destroys the tape label data base.  Privileged.

         JSYS:  There is no equivalent JSYS functionality.

     q.  .TFFEB -- Forces end-of-volume processing.

         JSYS:  The .MOVLS function of the MTOPR JSYS performs a  volume
         switch for an unlabeled tape.

     r.  .TFURQ -- Requests label processing

         JSYS:  The .MOWUL function of the MTOPR JSYS writes user header
         labels or user trailer labels on tape.

     s.  .TFSMM  --  Sets  maintenance  mode  on  the  tape  controller.
         Privileged.

         JSYS:  There is no equivalent JSYS functionality.

     t.  .TFCMM -- Clears  maintenance  mode  on  the  tape  controller.
         Privileged.

         JSYS:  There is no equivalent JSYS functionality.


Read/set parameters:

     a.  .TFDEN -- Tape density

         JSYS:  There are several related JSYS functions:

        (i)  The .MOSDN function of the MTOPR JSYS sets the density of a
             tape.

       (ii)  The .MORDN function of the MTOPR JSYS reads the density  of
             a tape.

      (iii)  The .SJDEN function of the SETJB JSYS sets the default tape
             density for a job.

       (iv)  The default tape density for a job may be obtained from the
             word  at  offset  .JIDEN in the job information block for a
             job.  This word may be obtained with the GETJI JSYS.

UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-79
TAPOP. -- CALLI 154                                            16 Jan 84


     b.  .TFKPT -- Controller type code for tape

         JSYS:  There is no equivalent JSYS functionality.

     c.  .TFRDB -- The read-backwards bit

         JSYS:   The  .MOSDR  function  of  the  MTOPR  JSYS  sets   the
         read-backwards  bit  for  a magtape.  The .MORDR function reads
         this bit.

     d.  .TFLTH -- Low threshhold bit

         JSYS:  There is no equivalent JSYS functionality.

     e.  .TFPAR -- Even parity test

         JSYS:  There are several related JSYS functions:

        (i)  The .MOSPR function of the MTOPR JSYS sets the parity  code
             of a tape.

       (ii)  The .MORPR function of the MTOPR JSYS reads the parity code
             of a tape.

      (iii)  The .SJPAR function of the SETJB JSYS sets the default tape
             parity code for a job.

       (iv)  The default tape parity code for a job may be obtained from
             the  word at offset .JIPAR in the job information block for
             a job.  This word may be obtained with the GETJI JSYS.


     f.  .TFBSZ -- Block size

         JSYS:  There are several related JSYS functions:

        (i)  The .MOSRS function of the MTOPR JSYS sets the  block  size
             of a tape.

       (ii)  The .MORRS function of the MTOPR JSYS reads the block  size
             of a tape.

      (iii)  The .SJRS function of the SETJB JSYS sets the default  tape
             block size for a job.

       (iv)  The default tape block size for a job may be obtained  from
             the word at offset .JIRS in the job information block for a
             job.  This word may be obtained with the GETJI JSYS.


     g.  .TFMOD -- Data mode
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-80
TAPOP. -- CALLI 154                                            16 Jan 84


         JSYS:  There are several related JSYS functions:

        (i)  The .MOSDM function of the MTOPR JSYS sets  the  data  mode
             code of a tape.

       (ii)  The .MORDM function of the MTOPR JSYS reads the  data  mode
             code of a tape.

      (iii)  The .SJDM function of the SETJB JSYS sets the default  tape
             data mode code for a job.

       (iv)  The default tape data mode code for a job may  be  obtained
             from  the word at offset .JIDM in the job information block
             for a job.  This word may be obtained with the GETJI JSYS.


     h.  .TFTRK -- Track status bit

         JSYS:  The word at offset .MOTRK in the data  returned  by  the
         .MOSTA function of the MTOPR JSYS gives this information.

     i.  .TFWLK -- Write-lock bit

         JSYS:  The MT%ILW bit in the word returned by the GDSTS JSYS is
         the write-lock bit.

     j.  .TFCNT -- Character count of the last record

         JSYS:  There is no equivalent JSYS functionality.

     k.  .TFRID -- SIXBIT reel identification

         JSYS:  The reel identification can be obtained from the word at
         offset  .MOIID  in  the data returned by the .MOINF function of
         the MTOPR JSYS.  The reel identification can be set by means of
         the .MOSID function of the MTOPR JSYS.

     l.  .TRCRC -- Last cyclic redundancy character

         JSYS:  There is no equivalent JSYS functionality.

     m.  .TFSTS -- Unit status flags

         JSYS:  The GDSTS JSYS reads the  unit  status  flags,  and  the
         SDSTS JSYS sets them.

     n.  .TFSTA -- Unit statistics for tape device

         JSYS:  See the MTCHR. UUO for more information.

     o.  .TFIEP -- Initial error pointer
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-81
TAPOP. -- CALLI 154                                            16 Jan 84


         JSYS:  There is no equivalent JSYS functionality.

     p.  .TFFEP -- Final error pointer

         JSYS:  There is no equivalent JSYS functionality.

     q.  .TFIER -- Initial error status

         JSYS:  The GDSTS JSYS returns error information.

     r.  .TFFED -- Final error disposition

         JSYS:  The GDSTS JSYS returns error information.

     s.  .TFLBL -- Label processing type code

         JSYS:  The .MORLI function  of  the  MTOPR  JSYS  returns  this
         information.

     t.  .TFPLT -- Similar to .TFLBL

         JSYS:  The .MORLI function  of  the  MTOPR  JSYS  returns  this
         information.

     u.  .TFLTC -- Obsolete

     v.  .TFDMS -- Diagnostic mode set bit

         JSYS:  There is no equivalent JSYS functionality.

     w.  .TFFSO -- Forced sense command bit

         JSYS:  There is no equivalent JSYS functionality.

     x.  .TFMFC -- Maximum frame count

         JSYS:  There is no equivalent JSYS functionality.

     y.  .TFPDN -- Possible densities

         JSYS:  There is no equivalent JSYS functionality.

     z.  .TFLPR -- Tape label parameters

         JSYS:  This information is returned by the  .MORLI  and  .MOSMV
         function so the MTOPR JSYS.


PA1050:  Supported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-82
TIMER -- CALLI 22                                              16 Jan 84


10.164  TIMER -- CALLI 22

-- Returns time of day in jiffies

JSYS:  The ODCNV JSYS can return the time of day  in  milliseconds.   To
convert  to  jiffies, use the number of jiffies in a second, as obtained
from the TICKPS table of the GETAB JSYS.

PA1050:  Supported.






10.165  TMPCOR -- CALLI 44

-- Creates, reads, writes, or manipulates short files left in core  from
the running of one program to another.

JSYS:  There is no JSYS functionality for TMPCOR.  However,  information
can be passed from one program to another by means of sharing pages with
PMAP.  See discussion under the RUN UUO.

PA1050:  Supported.






10.166  TRMNO.  -- CALLI 115

-- Returns the number of the terminal controlling a specified job.

JSYS:  The number of the controlling terminal is stored  in  each  job's
job  information  table  in the word at offset .JITNO.  This word may be
obtained with the GETJI JSYS.

PA1050:  Supported.






10.167  TRMOP.  -- CALLI 116

-- Perorms various operations for terminals.

Functions:
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-83
TRMOP. -- CALLI 116                                            16 Jan 84


     a.  .TOSPI -- Tests if terminal's input buffer empty

         JSYS:  The SIBE JSYS skips if the terminal's  input  buffer  is
         empty.   The  DIBE JSYS dismisses a process until the specified
         terminal's input buffer is empty.

     b.  .TOSOP -- Tests if terminal's output buffer empty

         JSYS:  The SOBE JSYS skips if the terminal's output  buffer  is
         empty.   The  DOBE JSYS dismisses a process until the specified
         terminal's output buffer is empty.

     c.  .TOCIB -- Clears terminal input buffer

         JSYS:  The CFIBF JSYS performs this function.

     d.  .TOCOB -- Clears terminal output buffer

         JSYS:  The CFOBF JSYS performs this function.

     e.  .TOOUC -- Outputs a character to the terminal

         JSYS:  The BOUT or PBOUT JSYS performs the same  functionality.
         For more efficient output to the terminal you should consider a
         string output JSYS.  For discussions of  these,  refer  to  the
         OUTSTR UUO.

     f.  .TOOIC -- Outputs an image-mode character to the terminal

         JSYS:  You may specify image mode in the OPENF  JSYS  when  you
         open  the  terminal  for  output.  You specify a byte size of 8
         bits, and image mode (.GSIMG).  You may also use SFMOD/STPAR to
         put  a  terminal  into  image  mode.  You may then use PBOUT to
         output the character.

     g.  .TOOUS -- Outputs an ASCIZ string to the terminal.

         JSYS:  The SOUT or PSOUT JSYS performs the same function as the
         OUTSTR UUO.

         There are a number  of  additional  options  you  may  wish  to
         consider:

         i.  If you wish  to  print  an  error  message  on  the  user's
             terminal,  then  use  the ESOUT JSYS, which is designed for
             error messages.

        ii.  If the output string is a prompt that is to be followed  by
             terminal  input,  then  combine  the two functions with the
             TEXTI JSYS.  This call handles  both  terminal  output  and
             input  together, and performs terminal editing functions in
             a useful manner.  For example, when the user types  CTRL/U,
             TEXTI repeats the prompt.  For writing a command processor,
             use the COMND JSYS.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-84
TRMOP. -- CALLI 116                                            16 Jan 84


       iii.  If the string is  obtained  by  converting  an  integer  or
             floating point number to character format, then you may use
             NOUT or FLOUT to  perform  the  conversion  and  print  the
             result in a single JSYS.

        iv.  Many JSYSs, such as JFNS or ODTIM,  direct  output  to  the
             terminal if desired.

             If you wish  to  print  an  error  message  on  the  user's
             terminal,  If  the output string is a terminal prompt which
             is to be followed If the string is obtained  by  converting
             an integer or floating


     h.  .TOINC -- Inputs a character from the terminal in line mode

         JSYS:  The RDTTY or TEXTI JSYS can  input  an  entire  line  of
         data, permitting you an optional prompt.

     i.  .TOIIC -- Inputs an image-mode character from the terminal

         JSYS:  You may specify image mode in the OPENF  JSYS  when  you
         open  the  terminal  for  output.  You specify a byte size of 8
         bits, and image mode (.GSIMG).  You may also use SFMOD/STPAR to
         put a terminal into image mode.  You may then use PBIN to input
         the character.

     j.  .TODSE -- Enables the modem for outgoing calls

         JSYS:  There is no equivalent JSYS functionality.

     k.  .TODSC -- Enables and place outgoing calls on a  modem  with  a
         dialer.

         JSYS:  There is no equivalent JSYS functionality.

     l.  .TODSF -- Disconnects a call

         JSYS:  There is no equivalent JSYS functionality.

     m.  .TORSC -- Performs a RESCAN

         JSYS:  This functionality must be reprogrammed using the  RSCAN
         JSYS.

     n.  .TOELE -- Sets the terminal element type

         JSYS:  There is no equivalent JSYS functionality.

     o.  .TOEAB -- Enables autobaud detection

         JSYS:  Setting the MO%AUT bit  in  the  word  passed  with  the
         .MOSPD function of the MTOPR JSYS performs this function.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-85
TRMOP. -- CALLI 116                                            16 Jan 84


     p.  .TOISC -- Inputs a character  from  the  terminal  to  the  ac.
         Waits in character mode.

         JSYS:  Use the PBIN JSYS to input a single character  from  the
         terminal.

     q.  .TOTYP -- Puts ASCIZ string into the terminal's input buffer

         JSYS:  The STI JSYS places a single character in  a  terminal's
         input buffer.

     r.  .TOGMS -- Returns terminal's MIC status bits

         JSYS:  No equivalent JSYS functionality.

     s.  .TOSMS -- Sets the terminal's MIC status bits

         JSYS:  No equivalent JSYS functionality.

     t.  .TOCLR -- Clears the MIC status bits

         JSYS:  No equivalent JSYS functionality.

     u.  .TODSP -- Displays an ASCIZ string on the terminal

         JSYS:  See discussion of .TOOUS function above.

     v.  .TOGMR -- Returns the MIC response buffer

         JSYS:  No equivalent JSYS functionality.

     w.  .TOLOG -- Returns the MIC log buffer

         JSYS:  No equivalent JSYS functionality.

     x.  .TODSS -- Tests if carrier is present

         JSYS:  This information is obtained from the TT%CAR bit in  the
         word returned by the RFMOD JSYS.


Set/read parameters:

     a.  .TOOIP -- Returns the output-in-progress bit

         JSYS:  The SOBE JSYS skips if the job's output buffer is empty.

     b.  .TOCOM -- Returns the monitor mode bit

         JSYS:  The word at offset .JIT20 in the job  information  table
         indicates  whether  the job is at EXEC level.  This word can be
         obtained with the GETJI JSYS.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-86
TRMOP. -- CALLI 116                                            16 Jan 84


     c.  .TOXON -- Returns papertape bit

         JSYS:  No equivalent JSYS functionality.

     d.  .TOLCT -- Lowercase bit

         JSYS:  The TT%UOC and TT%LIC bits in the word returned  by  the
         RFMOD  JSYS indicate the handling of lowercase characters.  The
         STPAR JSYS can set these bits.

     e.  .TOSLV -- Slave bit

         JSYS:  No equivalent JSYS functionality.

     f.  .TOTAB -- Tab-capability bit

         JSYS:  THE TT%TAB bit in the word returned by  the  RFMOD  JSYS
         indicates  the  tab capability of the terminal.  The STPAR JSYS
         can set this bit.

     g.  .TOFRM -- Formfeed capability

         JSYS:  The TT%MFF bit in the word returned by  the  RFMOD  JSYS
         indicates  the  formfeed capability of the terminal.  The STPAR
         JSYS can set this bit.

     h.  .TOLCP -- Local-copy bit

         JSYS:  The TT%ECM bit in the word returned by  the  RFMOD  JSYS
         indicates the echoing mode of the terminal.  The STPAR JSYS can
         set this bit.

     i.  .TONFC -- CRLF bit

         JSYS:  There is no equivalent JSYS functionality.

     j.  .TOHPS -- Horizontal position of carriage or cursor

         JSYS:  The RFPOS JSYS returns this information.

     k.  .TOWID -- Carriage width

         JSYS:  There are two methods:

        (i)  The TT%WID field of the word obtained  by  the  RFMOD  JSYS
             contains  the  page width of a terminal.  This field can be
             set by the STPAR JSYS.

       (ii)  The .MORLW function of the MTOPR JSYS returns the  terminal
             page  width.   The  .MOSLW  function sets the terminal page
             width.

UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-87
TRMOP. -- CALLI 116                                            16 Jan 84


     l.  .TOSND -- GAG bit

         JSYS:  You can use the TLINK JSYS to accept or refuse links  or
         advice.

     m.  .TOHLF -- Half-duplex bit

         JSYS:  The TT%DUM field of the word obtained by the RFMOD  JSYS
         indicates  the duplex mode.  This field can be set by the STPAR
         JSYS.

     n.  .TORMT -- Remote bit

         JSYS:  The MO%RMT bit  in  the  word  returned  by  the  .MORSP
         function  of  the  MTOPR JSYS indicates a remote terminal.  The
         .MOSPD function of the MTOPR JSYS can set this bit.

     o.  .TODIS -- Display bit

         JSYS:  The GTTYP JSYS returns the  terminal  type  code  for  a
         terminal.   You  may  test  the  terminal  type  for one of the
         display units.  The STTYP JSYS sets the terminal type code.

     p.  .TOFLC -- Filler class code

         JSYS:  This is determined by the terminal type.  The GTTYP JSYS
         returns the terminal type for a given job.  The STTYP JSYS sets
         it.

     q.  .TOTAP -- Papertape-enable bit

         JSYS:  There is no equivalent JSYS functionality.

     r.  .TOPAG -- Bit setting for paged display mode

         JSYS:  There is no equivalent JSYS functionality.

     s.  .TOSTP -- Output-stopped bit

         JSYS:  There is no equivalent JSYS functionality.

     t.  .TOPSZ -- Number of lines for current page setting

         JSYS:  There are two methods:

        (i)  The TT%LEN field of the word obtained  by  the  RFMOD  JSYS
             contains  the page length of a terminal.  This field can be
             set by the STPAR JSYS.

       (ii)  The .MORLL function of the MTOPR JSYS returns the  terminal
             page  length.   The  .MOSLL function sets the terminal page
             length.

UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-88
TRMOP. -- CALLI 116                                            16 Jan 84


     u.  .TOPCT -- Page counter

         JSYS:  There is no equivalent JSYS functionality.

     v.  .TOBLK -- Blank line handling

         JSYS:  There is no equivalent JSYS functionality.

     w.  .TOALT -- Altmode character handling

         JSYS:  There is no equivalent JSYS functionality.

     x.  .TOAPL -- APL mode

         JSYS:  There is no equivalent JSYS functionality.

     y.  .TORSP -- Code for terminal's receive speed

         JSYS:   The  .MORSP  function  of  the  MTOPR  JSYS  reads  the
         terminal's receive and transmit speeds.  The .MOSPD function of
         the MTOPR JSYS sets the speeds.

     z.  .TOTSP -- Code for terminal's transmit speed

         JSYS:   The  .MORSP  function  of  the  MTOPR  JSYS  reads  the
         terminal's receive and transmit speeds.  The .MOSPD function of
         the MTOPR JSYS sets the speeds.

    aa.  .TODBK -- Debreak capability

         JSYS:  There is no equivalent JSYS functionality.

    ab.  .TO274 -- 2741 mode

         JSYS:  There is no equivalent JSYS functionality.

    ac.  .TOTDY -- TIDY setting

         JSYS:  There is no equivalent JSYS functionality.

    ad.  .TOACR -- Automatic CRLF facility

         JSYS:  There is no equivalent JSYS functionality.

    ae.  .TORTC -- CTRL/R and CTRL/T compatibility

         JSYS:  You can use the software interrupt facility to intercept
         any control character.

    af.  .TOPBS -- Returns the word containing the PIM break  set,  four
         9-bit bytes.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-89
TRMOP. -- CALLI 116                                            16 Jan 84


         JSYS:   The  .MORBM  function  of  the  MTOPR  JSYS  reads  the
         terminal's  break character bit mask.  The .MOSBM function sets
         the terminal's break character bit mask.

    ag.  .TODEM -- Deferred-echo mode

         JSYS:  The TT%ECO and TT%ECM fields of the JFN  mode  word  for
         the  terminal indicate the handling of echoing.  These bits can
         be read with the RFMOD JSYS.  The TT%ECO field may  be  changed
         with  the  SFMOD JSYS, and the TT%ECM field may be changed with
         the STPAR JSYS.

    ah.  .TORTM -- SIXBIT terminal type

         JSYS:  The GTTYP JSYS returns the terminal  type  for  a  given
         job.  The STTYP JSYS sets it.

    ai.  .TOBCT -- Break characters received

         JSYS:  There is no equivalent JSYS functionality.

    aj.  .TOICT -- Input chars received

         JSYS:  The SIBE JSYS tests if  a  terminal's  input  buffer  is
         empty.

    ak.  .TOOCT -- Output (includes fill and echo) chars received

         JSYS:  There is no equivalent JSYS functionality.

    al.  .TOOSU -- Reads output suppression state (CTRL/O)

         JSYS:  The TT%OSP bit in the word returned by  the  RFMOD  JSYS
         indicates this information.  The SFMOD JSYS can set this bit.

    am.  .TOFCS -- Full character set

         JSYS:  The .MORBM function of the MTOPR JSYS  reads  the  break
         character  bit  mask table for a terminal.  The .MOSBM function
         of the MTOPR JSYS sets the table.   Also,  image  mode  on  the
         terminal permits full character set.

    an.  .TOBKA -- Break on all character mode

         JSYS:  The .MORBM function of the MTOPR JSYS  reads  the  break
         character  bit  mask table for a terminal.  The .MOSBM function
         of the MTOPR JSYS sets the table.

    ao.  .TOIMI -- Terminal is in image input mode (Reserved)

         JSYS:  You may specify image mode in the OPENF  JSYS  when  you
         open  the  terminal  for  output.  You specify a byte size of 8
         bits, and image mode (.GSIMG).  You may also use SFMOD/STPAR to
         put a terminal into image mode.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-90
TRMOP. -- CALLI 116                                            16 Jan 84


    ap.  .TOIMO -- Terminal is in image output mode (Reserved)

         JSYS:  You may specify image mode in the OPENF  JSYS  when  you
         open  the  terminal  for  output.  You specify a byte size of 8
         bits, and image mode (.GSIMG).  You may also use SFMOD/STPAR to
         put a terminal into image mode.

    aq.  .TOTIC -- Return number of characters in input buffer

         JSYS:  The SIBE JSYS skips if the input buffer is empty.  There
         is  no JSYS functionality to obtain the number of characters in
         the input buffer.

    ar.  .TOBKC -- Return number of break characters in input buffer

         JSYS:  There is no equivalent JSYS functionality.

    as.  .TOECC -- Return number of unprocessed (unechoed) characters in
         input buffer

         JSYS:  There is no equivalent JSYS functionality.

    at.  .TOTTC -- Return total number of characters (.TOTIC+.TOECC)  in
         monitor's input buffer

         JSYS:  There is no equivalent JSYS functionality.

    au.  .TOTOC -- Total number of chars in monitor's output buffer

         JSYS:  There is no equivalent JSYS functionality.


PA1050:  Supported.






10.168  TRPJEN -- CALLI 26

Obsolete.

PA1050:  Supported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-91
TRPSET -- CALLI 25                                             16 Jan 84


10.169  TRPSET -- CALLI 25

-- Prevents jobs other than the calling job from running.  Requires trap
privilege.   Use  this  call  to  guarantee  fast  response  to realtime
interrupts.

JSYS:  The SKED% JSYS permits a privileged program to prevent other jobs
from running.

PA1050:  Supported.






10.170  TSK.  -- CALLI 177

-- Performs miscellaneous functions for network nodes.  For ANF-10.

JSYS:  TOPS-20 does not support ANF-10 networks.

PA1050:  Unsupported.






10.171  TTCALL -- 51B8

-- See INCHRW, OUTCHR, INCHRS, OUTSTR, INCHWL, INCHSL,  GETLCH,  SETLCH,
RESCAN, CLRBFI, CLRBFO, SKPINC, SKPINL, IONEOU.

PA1050:  Supported.






10.172  UGETF -- 73B8

-- Returns the block number of the next free block on a DECtape.

JSYS:  There is no corresponding JSYS functionality, since TOPS-20  does
not support DECtapes.

PA1050:  Supported.



UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-92
UJEN -- 100B8                                                  16 Jan 84


10.173  UJEN -- 100B8

-- Dismisses a realtime interrupt if one is in progress.

JSYS:  TOPS-20 does not support a realtime capability.

PA1050:  Unsupported.






10.174  UNLOK.  -- CALLI 120

-- Unlocks one or both segments for the current job.

JSYS:  The PLOCK JSYS can lock or unlock specific pages in memory.

PA1050:  Unsupported.






10.175  USETI -- 74B8

-- Selects a relative block on disk or absolute block on disk to be read
by an IN or INPUT.

JSYS:  The replacement for USETI depends on the type of input operations
you are using:

     a.  The PMAP JSYS is preferred for disk  I/O  operations.   Because
         you  specify  a file page number in each PMAP call, there is no
         need for a separate JSYS to replace USETI.

     b.  If you are using BIN or SIN to perform  character  input,  then
         you  may  use  SFPTR  to  reset  the  input  file pointer to an
         arbitrary point in the file.   Note  that  SFPTR  uses  a  byte
         position  which  your  program  must  recompute  from the block
         number specified to the USETI UUO.

         Instead of SFPTR, you may use  BKJFN  to  back  up  your  input
         pointer by precisely one byte.

         If you are using SFPTR followed by BIN, then  you  may  combine
         them into a single RIN JSYS.


PA1050:  Supported.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-93
USETO -- 75B8                                                  16 Jan 84


10.176  USETO -- 75B8

-- Selects a relative block on disk or absolute  block  on  disk  to  be
written by an OUT UUO.

JSYS:   The  replacement  for  USETO  depends  on  the  type  of  output
operations you are using:

     a.  The PMAP JSYS is preferred for disk  I/O  operations.   Because
         you  specify  a file page number in each PMAP call, there is no
         need for a separate JSYS to replace USETO.

     b.  If you are using BOUT or SOUT to perform character output, then
         you  may  use  SFPTR  to  reset  the  output file pointer to an
         arbitrary point in the file.   Note  that  SFPTR  uses  a  byte
         position  which  your  program  must  recompute  from the block
         number specified to the USETO UUO.

         Instead of SFPTR, you may use BKJFN  to  back  up  your  output
         pointer by precisely one byte.

         If you are using SFPTR followed by BOUT, then you  may  combine
         them into a single ROUT JSYS.


PA1050:  Supported.






10.177  UTPCLR -- CALLI 13

-- Clears a DECtape directory.

JSYS:  There is no corresponding  JSYS  functionality,  because  TOPS-20
does not support DECtapes.

PA1050:  Supported.






10.178  UTRP.  -- CALLI 174

-- Sets or reads the address of user trap routines.  Related to APRENB.

JSYS:  The  RIR  JSYS  reads  the  interrupt  tables  for  the  software
interrupt system.
UUO TO JSYS CONVERSION ALGORITHMS                             Page 10-94
UTRP. -- CALLI 174                                             16 Jan 84


PA1050:  Unsupported.






10.179  WAIT -- CALLI 10

-- Causes program execution to wait until all data  transmissions  on  a
given channel are completed.

JSYS:  Because all disk I/O operations cause your process to wait, there
is  no  corresponding  JSYS  functionality.   For  tape  I/O, the .MONOP
function of the MTOPR JSYS performs the same function.

The WAIT JSYS performs a related function.   It  dismisses  the  process
indefinitely,  waiting  for  an  interrupt  from  the software interrupt
system.

PA1050:  Unsupported.






10.180  WAKE -- CALLI 73

-- Sets the wake bit for a specified job

JSYS:  The TWAKE JSYS can waken any process which has  dismissed  itself
using the THIBR JSYS.  See discussion under the HIBER UUO.

PA1050:  Supported.






10.181  WHERE -- CALLI 63

-- Returns the ANF-10 node number for a device

JSYS:  TOPS-20 does not support ANF-10 networks.

PA1050:  Unsupported.

[John J. Xenakis, tm.rno, 56357 words (including index entries)]
                                                            Page Index-1
                                                               16 Jan 84


                                 INDEX




"%" IN JSYSs . . . . . . . . . . . . 2-2
$Y DDT COMMAND . . . . . . . . . . . 2-4
%CNBCL FIELD OF .GTCNF GETTAB TABLE  9-14
%CNBCP FIELD OF .GTCNF GETTAB TABLE  9-14
%CNBMN FIELD OF .GTCNF GETTAB TABLE  9-8
%CNBMX FIELD OF .GTCNF GETTAB TABLE  9-8
%CNBNM FIELD OF .GTCNF GETTAB TABLE  9-8
%CNBPM FIELD OF .GTCNF GETTAB TABLE  9-14
%CNBTX FIELD OF .GTCNF GETTAB TABLE  9-13
%CNCHN FIELD OF .GTCNF GETTAB TABLE  9-8
%CNCPU FIELD OF .GTCNF GETTAB TABLE  9-14
%CNCVN FIELD OF .GTCNF GETTAB TABLE  9-9
%CNDAT FIELD OF .GTCNF GETTAB TABLE  9-5
%CNDAY FIELD OF .GTCNF GETTAB TABLE  9-8
%CNDBG FIELD OF .GTCNF GETTAB TABLE  9-9
%CNDCH FIELD OF .GTCNF GETTAB TABLE  9-15
%CNDEV FIELD OF .GTCNF GETTAB TABLE  9-6
%CNDFC FIELD OF .GTCNF GETTAB TABLE  9-9
%CNDJB FIELD OF .GTCNF GETTAB TABLE  9-14
%CNDSC FIELD OF .GTCNF GETTAB TABLE  9-7
%CNDTM FIELD OF .GTCNF GETTAB TABLE  9-8
%CNDTx FIELDS OF .GTCNF JSYS . . . . 9-5
%CNDVN FIELD OF .GTCNF GETTAB TABLE  9-9
%CNET1 FIELD OF .GTCNF GETTAB TABLE  9-10
%CNEXM FIELD OF .GTCNF GETTAB TABLE  9-10
%CNFGx FIELDS OF GTCNF GETTAB TABLE  9-5
%CNFLN FIELD OF .GTCNF GETTAB TABLE  9-15
%CNFRE FIELD OF .GTCNF GETTAB TABLE  9-6
%CNFRU FIELD OF .GTCNF GETTAB TABLE  9-9
%CNGMB FIELD OF .GTCNF GETTAB TABLE  9-9
%CNHDL FIELD OF .GTCNF GETTAB TABLE  9-13
%CNHOR FIELD OF .GTCNF GETTAB TABLE  9-8
%CNHPQ FIELD OF .GTCNF GETTAB TABLE  9-9
%CNHSL FIELD OF .GTCNF GETTAB TABLE  9-13
%CNHSO FIELD OF .GTCNF GETTAB TABLE  9-13
%CNHXC FIELD OF .GTCNF GETTAB TABLE  9-15
%CNLDB FIELD OF .GTCNF GETTAB TABLE  9-9
%CNLDD FIELD OF .GTCNF GETTAB TABLE  9-10
%CNLLD FIELD OF .GTCNF GETTAB TABLE  9-10
%CNLMX FIELD OF .GTCNF GETTAB TABLE  9-8
%CNLNM FIELD OF .GTCNF GETTAB TABLE  9-8
%CNLNP FIELD OF .GTCNF GETTAB TABLE  9-7
%CNLNS FIELD OF .GTCNF GETTAB TABLE  9-7
%CNLOC FIELD OF .GTCNF GETTAB TABLE  9-7
%CNLSD FIELD OF .GTCNF GETTAB TABLE  9-10
%CNLVO FIELD OF .GTCNF GETTAB TABLE  9-14
%CNMBD FIELD OF .GTCNF GETTAB TABLE  9-14
%CNMBF FIELD OF .GTCNF GETTAB TABLE  9-14
%CNMBS FIELD OF .GTCNF GETTAB TABLE  9-14
                                                            Page Index-2
                                                               16 Jan 84


%CNMBX FIELD OF .GTCNF GETTAB TABLE  9-14
%CNMER FIELD OF .GTCNF GETTAB TABLE  9-10
%CNMIN FIELD OF .GTCNF GETTAB TABLE  9-8
%CNMIP FIELD OF .GTCNF GETTAB TABLE  9-10
%CNMMX FIELD OF .GTCNF GETTAB TABLE  9-13
%CNMNT FIELD OF .GTCNF GETTAB TABLE  9-12
%CNMON FIELD OF .GTCNF GETTAB TABLE  9-8
%CNMTK FIELD OF .GTCNF GETTAB TABLE  9-14
%CNMVO FIELD OF .GTCNF GETTAB TABLE  9-10
%CNMXF FIELD OF .GTCNF GETTAB TABLE  9-14
%CNNCR FIELD OF .GTCNF GETTAB TABLE  9-14
%CNNDB FIELD OF .GTCNF GETTAB TABLE  9-13
%CNNSC FIELD OF .GTCNF GETTAB TABLE  9-13
%CNNSM FIELD OF .GTCNF GETTAB TABLE  9-6
%CNNWC FIELD OF .GTCNF GETTAB TABLE  9-13
%CNNXM FIELD OF .GTCNF GETTAB TABLE  9-13
%CNOCP FIELD OF .GTCNF GETTAB TABLE  9-12
%CNOCR FIELD OF .GTCNF GETTAB TABLE  9-12
%CNOPL FIELD OF .GTCNF GETTAB TABLE  9-7
%CNOPR FIELD OF .GTCNF GETTAB TABLE  9-6
%CNPDB FIELD OF .GTCNF GETTAB TABLE  9-8
%CNPGS FIELD OF .GTCNF GETTAB TABLE  9-13
%CNPIA FIELD OF .GTCNF GETTAB TABLE  9-12
%CNPIL FIELD OF .GTCNF GETTAB TABLE  9-12
%CNPIM FIELD OF .GTCNF GETTAB TABLE  9-12
%CNPNP FIELD OF .GTCNF GETTAB TABLE  9-15
%CNPOK FIELD OF .GTCNF GETTAB TABLE  9-7
%CNPTY FIELD OF .GTCNF GETTAB TABLE  9-6
%CNPUC FIELD OF .GTCNF GETTAB TABLE  9-7
%CNRDT FIELD OF .GTCNF GETTAB TABLE  9-9
%CNRST FIELD OF .GTCNF GETTAB TABLE  9-15
%CNRTC FIELD OF .GTCNF GETTAB TABLE  9-8
%CNSEC FIELD OF .GTCNF GETTAB TABLE  9-8
%CNSER FIELD OF .GTCNF GETTAB TABLE  9-6
%CNSFx FIELDS OF .GTCNF GETTAB TABLE  9-15
%CNSGT FIELD OF .GTCNF GETTAB TABLE  9-7
%CNSIZ FIELD OF .GTCNF GETTAB TABLE  9-5
%CNSJN FIELD OF .GTCNF GETTAB TABLE  9-6
%CNST2 FIELD OF .GTCNF GETTAB TABLE  9-10
%CNSTS FIELD OF .GTCNF GETTAB TABLE  9-6
%CNSUP FIELD OF .GTCNF GETTAB TABLE  9-14
%CNTAP FIELD OF .GTCNF GETTAB TABLE  9-5
%CNTCM FIELD OF .GTCNF GETTAB TABLE  9-9
%CNTDB FIELD OF .GTCNF GETTAB TABLE  9-14
%CNTIC FIELD OF .GTCNF GETTAB TABLE  9-7
%CNTIM FIELD OF .GTCNF GETTAB TABLE  9-5
%CNTKB FIELD OF .GTCNF GETTAB TABLE  9-13
%CNTTF FIELD OF .GTCNF GETTAB TABLE  9-7
%CNTWR FIELD OF .GTCNF GETTAB TABLE  9-6
%CNUTF FIELD OF .GTCNF GETTAB TABLE  9-13
%CNVER FIELD OF .GTCNF GETTAB TABLE  9-7
%CNVSH FIELD OF .GTCNF GETTAB TABLE  9-15
%CNWHY FIELD OF .GTCNF GETTAB TABLE  9-7
%CNYER FIELD OF .GTCNF GETTAB TABLE  9-8
                                                            Page Index-3
                                                               16 Jan 84


%EQAPR ITEM OF .GTSID GETTAB TABLE . 9-29
%EQDEQ ITEM OF .GTSID GETTAB TABLE . 9-29
%EQDSR ITEM OF .GTSID GETTAB TABLE . 9-29
%EQESR ITEM OF .GTSID GETTAB TABLE . 9-29
%EQLTL ITEM OF .GTSID GETTAB TABLE . 9-29
%EQMMS ITEM OF .GTSID GETTAB TABLE . 9-29
%EQMSS ITEM OF .GTSID GETTAB TABLE . 9-29
%EQMTS ITEM OF .GTSID GETTAB TABLE . 9-29
%EQNAQ ITEM OF .GTSID GETTAB TABLE . 9-29
%IPCCP FIELD OF .GTIPC GETTAB TABLE  9-25
%IPCDQ FIELD OF .GTIPC GETTAB TABLE  9-25
%IPCIC FIELD OF .GTIPC GETTAB TABLE  9-25
%IPCML FIELD OF .GTIPC GETTAB TABLE  9-24
%IPCMP FIELD OF .GTIPC GETTAB TABLE  9-25
%IPCNP FIELD OF .GTIPC GETTAB TABLE  9-25
%IPCPM FIELD OF .GTIPC GETTAB TABLE  9-25
%IPCSI FIELD OF .GTIPC GETTAB TABLE  9-25
%IPCSP FIELD OF .GTIPC GETTAB TABLE  9-25
%IPCTO FIELD OF .GTIPC GETTAB TABLE  9-25
%IPCTP FIELD OF .GTIPC GETTAB TABLE  9-25
%IPCTS FIELD OF .GTIPC GETTAB TABLE  9-25
%NSABA FIELD OF .GTNSW GETTAB TABLE  9-17
%NSABC FIELD OF .GTNSW GETTAB TABLE  9-17
%NSCLS FIELD OF .GTNSW GETTAB TABLE  9-15
%NSCLW FIELD OF .GTNSW GETTAB TABLE  9-16
%NSCMN FIELD OF .GTNSW GETTAB TABLE  9-16
%NSCMX FIELD OF .GTNSW GETTAB TABLE  9-15
%NSCTL FIELD OF .GTNSW GETTAB TABLE  9-16
%NSEPO FIELD OF .GTNSW GETTAB TABLE  9-16
%NSEPR FIELD OF .GTNSW GETTAB TABLE  9-16
%NSHJB FIELD OF .GTNSW GETTAB TABLE  9-16
%NSKTM FIELD OF .GTNSW GETTAB TABLE  9-16
%NSLJR FIELD OF .GTNSW GETTAB TABLE  9-17
%NSLST FIELD OF .GTNSW GETTAB TABLE  9-16
%NSMMS FIELD OF .GTNSW GETTAB TABLE  9-16
%NSMPA FIELD OF .GTNSW GETTAB TABLE  9-16
%NSMPC FIELD OF .GTNSW GETTAB TABLE  9-16
%NSMPP FIELD OF .GTNSW GETTAB TABLE  9-16
%NSMPW FIELD OF .GTNSW GETTAB TABLE  9-16
%NSMXM FIELD OF .GTNSW GETTAB TABLE  9-16
%NSSPE FIELD OF .GTNSW GETTAB TABLE  9-16
%NSTPE FIELD OF .GTNSW GETTAB TABLE  9-16
%NSUPT FIELD OF .GTNSW GETTAB TABLE  9-16
.BYE FUNCTION OF FRCUUO UUO  . . . . 10-32
.CLOCK FUNCTION OF DAEMON UUO  . . . 10-6
.DCALT FIELD RETURNED BY DSKCHR UUO  10-23
.DCBUC FIELD RETURNED BY DSKCHR UUO  10-23
.DCBUM FIELD RETURNED BY DSKCHR UUO  10-22
.DCCYL FIELD RETURNED BY DSKCHR UUO  10-23
.DCFCT FIELD RETURNED BY DSKCHR UUO  10-21
.DCK4S FIELD RETURNED BY DSKCHR UUO  10-22
.DCLPQ FIELD RETURNED BY DSKCHR UUO  10-23
.DCLTQ FIELD RETURNED BY DSKCHR UUO  10-23
.DCORE FUNCTION OF DAEMON UUO  . . . 10-6
                                                            Page Index-4
                                                               16 Jan 84


.DCOWN FIELD RETURNED BY DSKCHR UUO  10-23
.DCPAS FIELD RETURNED BY DSKCHR UUO  10-23
.DCPSD FIELD RETURNED BY DSKCHR UUO  10-23
.DCSAJ FIELD RETURNED BY DSKCHR UUO  10-22
.DCSMT FIELD RETURNED BY DSKCHR UUO  10-21
.DCSNM FIELD RETURNED BY DSKCHR UUO  10-21
.DCSPU FIELD RETURNED BY DSKCHR UUO  10-22
.DCUCH FIELD RETURNED BY DSKCHR UUO  10-21
.DCUFS FIELD RETURNED BY DSKCHR UUO  10-22
.DCUFT FIELD RETURNED BY DSKCHR UUO  10-21
.DCUID FIELD RETURNED BY DSKCHR UUO  10-22
.DCULN FIELD RETURNED BY DSKCHR UUO  10-22
.DCUNT FIELD RETURNED BY DSKCHR UUO  10-21
.DCUPN FIELD RETURNED BY DSKCHR UUO  10-22
.DCUSZ FIELD RETURNED BY DSKCHR UUO  10-21
.DCWPS FIELD RETURNED BY DSKCHR UUO  10-22
.DMERR FUNCTION OF DAEMON UUO  . . . 10-6
.DUASD FUNCTION OF DISK. UUO . . . . 10-20
.DUASW FUNCTION OF DISK. UUO . . . . 10-20
.DUCLM FUNCTION OF DISK. UUO . . . . 10-20
.DUFRE FUNCTION OF DISK. UUO . . . . 10-20
.DULEN FUNCTION OF DISK. UUO . . . . 10-20
.DUMP FUNCTION OF FRCUUO UUO . . . . 10-32
.DUOLN FUNCTION OF DISK. UUO . . . . 10-20
.DUOLS FUNCTION OF DISK. UUO . . . . 10-20
.DUONL FUNCTION OF DISK. UUO . . . . 10-20
.DUPRI FUNCTION OF DISK. UUO . . . . 10-19
.DURSD FUNCTION OF DISK. UUO . . . . 10-20
.DUSEM FUNCTION OF DISK. UUO . . . . 10-19
.DUSTM FUNCTION OF DISK. UUO . . . . 10-19
.DUSWP FUNCTION OF DISK. UUO . . . . 10-20
.DUUFD FUNCTION OF DISK. UUO . . . . 10-20
.DUUNL FUNCTION OF DISK. UUO . . . . 10-19
.DVCDP VALUE IN DV%TYP FIELD OF DVCHR  10-15, 10-17
.DVCDR VALUE IN DV%TYP FIELD OF DVCHR  10-9, 10-15, 10-17
.DVDSK VALUE IN DV%TYP FIELD OF DVCHR  10-9, 10-16
.DVLPT VALUE IN DV%TYP FIELD OF DVCHR  10-9, 10-15, 10-17
.DVMTA VALUE IN DV%TYP FIELD OF DVCHR  10-10 to 10-11, 10-16
.DVNET VALUE IN DV%TYP FIELD OF DVCHR  10-18
.DVPTY VALUE IN DV%TYP FIELD OF DVCHR  10-17, 10-33
.DVTTY VALUE IN DV%TYP FIELD OF DVCHR  10-10, 10-15 to 10-16
.ENQIS FUNCTION OF ENQ JSYS  . . . . 6-8
.FACT FUNCTION OF DAEMON UUO . . . . 10-6
.FBALC LOOKUP/ENTER FIELD  . . . . . 5-8
.FBBYV FDB FIELD . . . . . . . . . . 5-7
.FBCRE FDB FIELD . . . . . . . . . . 5-7
.FBCRV FDB FIELD . . . . . . . . . . 5-7
.FBEXT FDB FIELD . . . . . . . . . . 5-7
.FBNAM FDB FIELD . . . . . . . . . . 5-7
.FBPRT FDB FIELD . . . . . . . . . . 5-7
.FBREF FDB FIELD . . . . . . . . . . 5-7
.FBSIZ FDB FIELD . . . . . . . . . . 5-7
.FBWRT FDB FIELD . . . . . . . . . . 5-7
.FCONT FUNCTION OF FRCUUO UUO  . . . 10-32
                                                            Page Index-5
                                                               16 Jan 84


.FOAPP FUNCTION OF FILOP. UUO  . . . 10-29
.FOCLS FUNCTION OF FILOP. UUO  . . . 10-29
.FOCRE FUNCTION OF FILOP. UUO  . . . 10-28
.FODLT FUNCTION OF FILOP. UUO  . . . 10-30
.FOGET FUNCTION OF FILOP. UUO  . . . 10-30
.FOINP FUNCTION OF FILOP. UUO  . . . 10-30
.FOMAU FUNCTION OF FILOP. UUO  . . . 10-28
.FOOUT FUNCTION OF FILOP. UUO  . . . 10-30
.FOPRE FUNCTION OF FILOP. UUO  . . . 10-30
.FORED FUNCTION OF FILOP. UUO  . . . 10-28
.FOREL FUNCTION OF FILOP. UUO  . . . 10-31
.FORNM FUNCTION OF FILOP. UUO  . . . 10-30
.FORRC FUNCTION OF FILOP. UUO  . . . 10-31
.FOSAU FUNCTION OF FILOP. UUO  . . . 10-28
.FOSEK FUNCTION OF FILOP. UUO  . . . 10-31
.FOSET FUNCTION OF FILOP. UUO  . . . 10-30
.FOSIO FUNCTION OF FILOP. UUO  . . . 10-30
.FOURB FUNCTION OF FILOP. UUO  . . . 10-29
.FOUSI FUNCTION OF FILOP. UUO  . . . 10-29
.FOUSO FUNCTION OF FILOP. UUO  . . . 10-29
.FOWAT FUNCTION OF FILOP. UUO  . . . 10-31
.FOWRT FUNCTION OF FILOP. UUO  . . . 10-28
.GSIMG FUNCTION OF OPENF JSYS  . . . 10-42, 10-84, 10-89 to 10-90
.GSIMG FUNCTION TO OPENF JSYS  . . . 10-83
.GTABS GETTAB TABLE  . . . . . . . . 9-27
.GTADR GETTAB TABLE  . . . . . . . . 9-3
.GTCAP GETTAB TABLE  . . . . . . . . 9-33
.GTCM2 GETTAB TABLE  . . . . . . . . 9-21
.GTCMP GETTAB TABLE  . . . . . . . . 9-27
.GTCMT GETTAB TABLE  . . . . . . . . 9-24
.GTCMW GETTAB TABLE  . . . . . . . . 9-26
.GTCNF GETTAB TABLE  . . . . . . . . 9-5
.GTCNO GETTAB TABLE  . . . . . . . . 9-20
.GTCOJ GETTAB TABLE  . . . . . . . . 9-29
.GTCOM GETTAB TABLE  . . . . . . . . 9-19
.GTCOR GETTAB TABLE  . . . . . . . . 9-19
.GTCQP GETTAB TABLE  . . . . . . . . 9-29
.GTCRS GETTAB TABLE  . . . . . . . . 9-22
.GTCRT GETTAB TABLE  . . . . . . . . 9-29
.GTCVL GETTAB TABLE  . . . . . . . . 9-26
.GTCxC GETTAB TABLE  . . . . . . . . 9-23
.GTCxV GETTAB TABLE  . . . . . . . . 9-23
.GTDBS GETTAB TABLE  . . . . . . . . 9-18
.GTDCB GETTAB TABLE  . . . . . . . . 9-34
.GTDCF GETTAB TABLE  . . . . . . . . 9-28
.GTDCN GETTAB TABLE  . . . . . . . . 9-34
.GTDEV GETTAB TABLE  . . . . . . . . 9-19
.GTDFL GETTAB TABLE  . . . . . . . . 9-31
.GTDVL GETTAB TABLE  . . . . . . . . 9-27
.GTEBR GETTAB TABLE  . . . . . . . . 9-30
.GTEBT GETTAB TABLE  . . . . . . . . 9-30
.GTEDN GETTAB TABLE  . . . . . . . . 9-23
.GTENQ GETTAB TABLE  . . . . . . . . 9-29
.GTEQJ GETTAB TABLE  . . . . . . . . 9-34
                                                            Page Index-6
                                                               16 Jan 84


.GTFET GETTAB TABLE  . . . . . . . . 9-23
.GTGTB GETTAB TABLE  . . . . . . . . 9-33
.GTIDX GETTAB TABLE  . . . . . . . . 9-33
.GTIPA GETTAB TABLE  . . . . . . . . 9-26
.GTIPC GETTAB TABLE  . . . . . . . . 9-24
.GTIPI GETTAB TABLE  . . . . . . . . 9-27
.GTIPP GETTAB TABLE  . . . . . . . . 9-26
.GTIPQ GETTAB TABLE  . . . . . . . . 9-27
.GTISC GETTAB TABLE  . . . . . . . . 9-22
.GTJLT GETTAB TABLE  . . . . . . . . 9-30
.GTJTC GETTAB TABLE  . . . . . . . . 9-28
.GTKCT GETTAB TABLE  . . . . . . . . 9-4
.GTLIM GETTAB TABLE  . . . . . . . . 9-21
.GTLOC GETTAB TABLE  . . . . . . . . 9-19
.GTLVD GETTAB TABLE  . . . . . . . . 9-18
.GTMBR GETTAB TABLE  . . . . . . . . 9-30
.GTMBT GETTAB TABLE  . . . . . . . . 9-30
.GTMVL GETTAB TABLE  . . . . . . . . 9-26
.GTNDB GETTAB TABLE  . . . . . . . . 9-34
.GTNM1 GETTAB TABLE  . . . . . . . . 9-20
.GTNM2 GETTAB TABLE  . . . . . . . . 9-20
.GTNSW GETTAB TABLE  . . . . . . . . 9-15
.GTNTP GETTAB TABLE  . . . . . . . . 9-32
.GTOBI GETTAB TABLE  . . . . . . . . 9-34
.GTODP GETTAB TABLE  . . . . . . . . 9-18
.GTOSC GETTAB TABLE  . . . . . . . . 9-22
.GTPC GETTAB TABLE . . . . . . . . . 9-32
.GTPDB GETTAB TABLE  . . . . . . . . 9-34
.GTPID GETTAB TABLE  . . . . . . . . 9-24
.GTPPN GETTAB TABLE  . . . . . . . . 9-3
.GTPRG GETTAB TABLE  . . . . . . . . 9-3
.GTPRV GETTAB TABLE  . . . . . . . . 9-4
.GTQJB GETTAB TABLE  . . . . . . . . 9-21
.GTQQQ GETTAB TABLE  . . . . . . . . 9-21
.GTRCT GETTAB TABLE  . . . . . . . . 9-18
.GTRDI GETTAB TABLE  . . . . . . . . 9-31
.GTRDV GETTAB TABLE  . . . . . . . . 9-31
.GTRFN GETTAB TABLE  . . . . . . . . 9-31
.GTRSP GETTAB TABLE  . . . . . . . . 9-22
.GTRSx GETTAB TABLES . . . . . . . . 9-32
.GTRTD GETTAB TABLE  . . . . . . . . 9-21
.GTSCN GETTAB TABLE  . . . . . . . . 9-24
.GTSDT GETTAB TABLE  . . . . . . . . 9-17
.GTSGN GETTAB TABLE  . . . . . . . . 9-17
.GTSID GETTAB TABLE  . . . . . . . . 9-29
.GTSLF GETTAB TABLE  . . . . . . . . 9-18
.GTSNA GETTAB TABLE  . . . . . . . . 9-24
.GTSPA GETTAB TABLE  . . . . . . . . 9-32
.GTSPL GETTAB TABLE  . . . . . . . . 9-20
.GTSPS GETTAB TABLE  . . . . . . . . 9-23
.GTSQH GETTAB TABLE  . . . . . . . . 9-29
.GTSSC GETTAB TABLE  . . . . . . . . 9-22
.GTSST GETTAB TABLE  . . . . . . . . 9-28
.GTST2 GETTAB TABLE  . . . . . . . . 9-28
                                                            Page Index-7
                                                               16 Jan 84


.GTSTS GETTAB TABLE  . . . . . . . . 9-1
.GTSWP GETTAB TABLE  . . . . . . . . 9-5
.GTSYS GETTAB TABLE  . . . . . . . . 9-23
.GTTDB GETTAB TABLE  . . . . . . . . 9-18
.GTTIM GETTAB TABLE  . . . . . . . . 9-4
.GTTMP GETTAB TABLE  . . . . . . . . 9-20
.GTTNM GETTAB TABLE  . . . . . . . . 9-33
.GTTRQ GETTAB TABLE  . . . . . . . . 9-23
.GTTTY GETTAB TABLE  . . . . . . . . 9-5
.GTUPM GETTAB TABLE  . . . . . . . . 9-26
.GTUUC GETTAB TABLE  . . . . . . . . 9-32
.GTVKS GETTAB TABLE  . . . . . . . . 9-32
.GTVM GETTAB TABLE . . . . . . . . . 9-28
.GTVRT GETTAB TABLE  . . . . . . . . 9-28
.GTWCH GETTAB TABLE  . . . . . . . . 9-20
.GTWCT GETTAB TABLE  . . . . . . . . 9-18
.GTWHY GETTAB TABLE  . . . . . . . . 9-23
.GTWSN GETTAB TABLE  . . . . . . . . 9-19
.HALT FUNCTION OF FRCUUO UUO . . . . 10-31
.HELLO FUNCTION OF FRCUUO UUO  . . . 10-32
.ICAOV INTERRUPT CHANNEL . . . . . . 6-3, 6-6
.ICDAE INTERRUPT CHANNEL . . . . . . 6-4 to 6-6
.ICEOF INTERRUPT CHANNEL . . . . . . 6-5
.ICFOV INTERRUPT CHANNEL . . . . . . 6-3, 6-6
.ICILI INTERRUPT CHANNEL . . . . . . 6-6 to 6-7
.ICIRD INTERRUPT CHANNEL . . . . . . 6-3, 6-6
.ICIWR INTERRUPT CHANNEL . . . . . . 6-3, 6-6
.ICNXP INTERRUPT CHANNEL . . . . . . 6-3, 6-6 to 6-8
.ICPOV INTERRUPT CHANNEL . . . . . . 6-3, 6-7
.IPCIG [SYSTEM]INFO REQUEST  . . . . 7-2
.IPCII [SYSTEM]INFO REQUEST  . . . . 7-2
.IPCIW [SYSTEM]INFO REQUEST  . . . . 7-2
.JB41 JOB DATA AREA LOCATION . . . . 4-3
.JBAPR JOB DATA AREA LOCATION  . . . 4-4
.JBBLT JOB DATA AREA LOCATION  . . . 4-3
.JBCNI JOB DATA AREA LOCATION  . . . 4-4
.JBCOR JOB DATA AREA LOCATION  . . . 4-4
.JBCST JOB DATA AREA LOCATION  . . . 4-4
.JBDDT JOB DATA AREA LOCATION  . . . 4-3, 10-67
.JBERR JOB DATA AREA LOCATION  . . . 4-3
.JBFF JOB DATA AREA LOCATION . . . . 4-3
.JBHRL JOB DATA AREA LOCATION  . . . 4-3
.JBHSO JOB DATA AREA LOCATION  . . . 4-3
.JBINT INTERRUPT BLOCK . . . . . . . 6-3
.JBINT JOB DATA AREA LOCATION  . . . 4-4, 6-1, 6-3
.JBOPC JOB DATA AREA LOCATION  . . . 4-4
.JBOPS JOB DATA AREA LOCATION  . . . 4-4
.JBOVL JOB DATA AREA LOCATION  . . . 4-4
.JBPFH JOB DATA AREA LOCATION  . . . 4-3
.JBREL JOB DATA AREA LOCATION  . . . 4-3
.JBREN JOB DATA AREA LOCATION  . . . 4-4, 4-7
.JBSA JOB DATA AREA LOCATION . . . . 4-3, 4-7
.JBSYM JOB DATA AREA LOCATION  . . . 4-3
.JBTPC JOB DATA AREA LOCATION  . . . 4-4
                                                            Page Index-8
                                                               16 Jan 84


.JBUSY JOB DATA AREA LOCATION  . . . 4-3
.JBUUO JOB DATA AREA LOCATION  . . . 4-3
.JBVER JOB DATA AREA LOCATION  . . . 4-4, 4-7
.JIBCH OFFSET IN JOB INFORMATION TABLE  9-8, 9-21, 9-34
.JICPJ OFFSET IN JOB INFORMATION TABLE  10-5
.JIDEN OFFSET IN JOB INFORMATION BLOCK  10-78
.JIDEN OFFSET IN JOB INFORMATION TABLE  10-51
.JIDM OFFSET IN JOB INFORMATION TABLE  10-80
.JIDNO OFFSET IN JOB INFORMATION TABLE  10-35
.JIJNO OFFSET OF JOB INFORMATION TABLE  9-3, 10-45
.JILLN OFFSET IN JOB INFORMATION TABLE  9-30
.JILLO OFFSET IN JOB INFORMATION TABLE  9-19, 10-46
.JILNO OFFSET IN JOB INFORMATION TABLE  9-1, 10-44
.JILNO OFFSET OF JOB INFORMATION TABLE  9-3
.JIPAR OFFSET IN JOB INFORMATION BLOCK  10-79
.JIRS OFFSET IN JOB INFORMATION BLOCK  10-79
.JIT20 OFFSET IN JOB INFORMATION TABLE  9-2, 10-44, 10-85
.JITNO OFFSET IN JOB INFORMATION TABLE  9-2, 10-35, 10-37, 
                                     10-44 to 10-45, 10-82
.JIUNO OFFSET IN JOB INFORMATION TABLE  9-20, 10-55
.MOAPI FUNCTION OF MTOPR JSYS  . . . 6-8, 10-37
.MOBKF FUNCTION OF MTOPR JSYS  . . . 10-50, 10-77
.MOBKR FUNCTION OF MTOPR JSYS  . . . 10-50, 10-77
.MOEOF FUNCTION OF MTOPR JSYS  . . . 10-52, 10-77
.MOEOT FUNCTION OF MTOPR JSYS  . . . 10-77
.MOERS FUNCTION OF MTOPR JSYS  . . . 10-77
.MOFWF FUNCTION OF MTOPR JSYS  . . . 10-53, 10-77
.MOFWR FUNCTION OF MTOPR JSYS  . . . 10-53, 10-77
.MOIID FIELD RETURNED BY MTOPR JSYS  10-80
.MOINF FUNCTION OF MTOPR JSYS  . . . 10-80
.MONOP FUNCTION OF MTOPR JSYS  . . . 10-54, 10-76, 10-94
.MOPIH FUNCTION OF MTOPR JSYS  . . . 9-2, 10-45
.MOPST FUNCTION OF MTOPR JSYS  . . . 6-8
.MORBM FUNCTION OF MTOPR JSYS  . . . 10-88 to 10-89
.MORDM FUNCTION OF MTOPR JSYS  . . . 10-80
.MORDN FUNCTION OF MTOPR JSYS  . . . 10-51
.MORDR FUNCTION OF MTOPR JSYS  . . . 10-79
.MORES FUNCTION OF MTOPR JSYS  . . . 10-50
.MOREW FUNCTION OF MTOPR JSYS  . . . 10-76
.MORLI FUNCTION OF MTOPR JSYS  . . . 10-77, 10-81
.MORLL FUNCTION OF MTOPR JSYS  . . . 10-87
.MORLW FUNCTION OF MTOPR JSYS  . . . 10-86
.MORPR FUNCTION OF MTOPR JSYS  . . . 10-79
.MORRS FUNCTION OF MTOPR JSYS  . . . 10-79
.MORSP FUNCTION OF MTOPR JSYS  . . . 10-34, 10-87 to 10-88
.MORST FUNCTION OF MTOPR JSYS  . . . 10-14
.MORUL FUNCTION OF MTOPR JSYS  . . . 10-53
.MORUL JSYS  . . . . . . . . . . . . 10-76
.MORVL FUNCTION OF MTOPR JSYS  . . . 10-53, 10-76
.MOSBM FUNCTION OF MTOPR JSYS  . . . 10-88 to 10-89
.MOSDM FUNCTION OF MTOPR JSYS  . . . 10-51 to 10-52, 10-80
.MOSDN FUNCTION OF MTOPR JSYS  . . . 10-78
.MOSDR FUNCTION OF MTOPR JSYS  . . . 10-79
.MOSID FUNCTION OF MTOPR JSYS  . . . 10-49, 10-80
                                                            Page Index-9
                                                               16 Jan 84


.MOSLL FUNCTION OF MTOPR JSYS  . . . 10-87
.MOSLW FUNCTION OF MTOPR JSYS  . . . 10-86
.MOSMV FUNCTION OF MTOPR JSYS  . . . 10-81
.MOSPD FUNCTION OF MTOPR JSYS  . . . 10-67, 10-84, 10-87 to 10-88
.MOSPR FUNCTION OF MTOPR JSYS  . . . 10-79
.MOSRS FUNCTION OF MTOPR JSYS  . . . 10-79
.MOSTA FUNCTION OF MTOPR JSYS  . . . 10-51, 10-80
.MOTPS FUNCTION OF MTOPR JSYS  . . . 6-8
.MOTRK FIELD RETURNED BY MTOPR JSYS  10-51, 10-80
.MOVLS FUNCTION OF MTOPR JSYS  . . . 10-78
.MOWUL FUNCTION OF MTOPR JSYS  . . . 10-78
.MSDIS FUNCTION OF MSTR JSYS . . . . 10-20
.MSGMC FIELD RETURNED BY MSTR JSYS . 10-21
.MSGSC FIELD RETURNED BY MSTR JSYS . 10-24
.MSGSS FUNCTION OF MSTR JSYS . . . . 10-21 to 10-22, 10-24, 10-76
.MSGST FIELD RETURNED BY MSTR JSYS . 10-24
.MSRCT FIELD RETURNED BY MSTR JSYS . 10-25
.MSRNN FIELD RETURNED BY MSTR JSYS . 10-19
.MSRNS FIELD RETURNED BY MSTR JSYS . 10-19
.MSRNS VALUE RETURNED BY MSTR JSYS . 10-22
.MSRNU FUNCTION OF MSTR JSYS . . . . 10-19, 10-21 to 10-25, 10-76
.MSROI VALUE RETURNED BY MSTR JSYS . 10-23
.MSRSN FIELD RETURNED BY MSTR JSYS . 10-21, 10-76
.MSRSN VALUE RETURNED BY MSTR JSYS . 10-22
.MSRST FIELD RETURNED BY MSTR JSYS . 10-23 to 10-25
.MSRUI FIELD RETURNED BY MSTR JSYS . 10-22, 10-76
.MSRUI VALUE RETURNED BY MSTR JSYS . 10-22
.MSRUN FUNCTION OF MSTR JSYS . . . . 10-21, 10-23
.MSRWS FIELD RETURNED BY MSTR JSYS . 10-22
.MSSSS FUNCTION OF MSTR JSYS . . . . 10-20
.MTEOT FUNCTION OF MTOPR JSYS  . . . 10-52
.MUFJP FUNCTION OF MUTIL JSYS  . . . 9-26, 9-29
.MUFPQ FUNCTION OF MUTIL JSYS  . . . 9-26
.MUFSQ FUNCTION OF MUTIL JSYS  . . . 9-27
.MUGTI FUNCTION OF MUTIL JSYS  . . . 9-27
.MUMPS FUNCTION OF MUTIL JSYS  . . . 9-25
.MUPIC FUNCTION OF MUTIL JSYS  . . . 6-8, 10-37
.MURST FUNCTION OF MUTIL JSYS  . . . 9-25
.NETLD FUNCTION OF FRCUUO UUO  . . . 10-32
.OCPOV FUNCTIO OF EIR JSYS . . . . . 10-68
.PAGAA FUNCTION OF PAGE. UUO . . . . 10-58
.PAGCA FUNCTION OF PAGE. UUO . . . . 10-58
.PAGCB FUNCTION OF PAGE. UUO . . . . 10-58
.PAGCD FUNCTION OF PAGE. UUO . . . . 10-58
.PAGCH FUNCTION OF PAGE. UUO . . . . 10-58
.PAGEM FUNCTION OF PAGE. UUO . . . . 10-58
.PAGGA FUNCTION OF PAGE. UUO . . . . 10-58
.PAGIO FUNCTION OF PAGE. UUO . . . . 10-58
.PAGSP FUNCTION OF PAGE. UUO . . . . 10-59
.PAGWS FUNCTION OF PAGE. UUO . . . . 10-58
.PCABK INTERRUPT CONDTION  . . . . . 6-8
.PCACK INTERRUPT CONDITION . . . . . 6-6
.PCAPC INTERRUPT CONDITION . . . . . 6-7
.PCARI INTERRUPT CONDITION . . . . . 6-6
                                                           Page Index-10
                                                               16 Jan 84


.PCDAT INTERRUPT CONDTION  . . . . . 6-7
.PCIMR INTERRUPT CONDITION . . . . . 6-6
.PCIPC INTERRUPT CONDITION . . . . . 6-8
.PCIUU INTERRUPT CONDITION . . . . . 6-6
.PCJBI INTERRUPT CONDITION . . . . . 6-8
.PCKSY INTERRUPT CONDITION . . . . . 6-7
.PCNET INTERRUPT CONDTION  . . . . . 6-8
.PCNXM INTERRUPT CONDITION . . . . . 6-7
.PCPDL INTERRUPT CONDITION . . . . . 6-6
.PCQUE INTERRUPT CONDITION . . . . . 6-8
.PCSTP INTERRUPT CONDITION . . . . . 6-6
.PCTLE INTERRUPT CONDITION . . . . . 6-6
.PCUEJ INTERRUPT CONDITION . . . . . 6-7
.PCUUO INTERRUPT CONDITION . . . . . 6-6
.PCWAK INTERRUPT CONDITION . . . . . 6-7
.PCXEJ INTERRUPT CONDITION . . . . . 6-7
.PICIG FUNCTION TO <SYSTEM>INFO  . . 9-24
.PIINI UUO . . . . . . . . . . . . . 6-1
.PISYS UUO . . . . . . . . . . . . . 6-1, 9-10
.PRIIN DEVICE DESIGNATOR . . . . . . 5-3, 10-10
.PRIOU DEVICE DESIGNATOR . . . . . . 5-3, 10-10
.RBEXT LOOKUP/ENTER FIELD  . . . . . 5-7
.RBNAM LOOKUP/ENTER FIELD  . . . . . 5-7
.RBPPN LOOKUP/ENTER FIELD  . . . . . 5-7
.RBPRV LOOKUP/ENTER FIELD  . . . . . 5-7
.RBSIZ LOOKUP/ENTER FIELD  . . . . . 5-7
.RBSPL LOOKUP/ENTER FIELD  . . . . . 5-7
.RBVER LOOKUP/ENTER FIELD  . . . . . 5-7
.RESTA FUNCTION OF FRCUUO UUO  . . . 10-32
.SFMTA FUNCTION OF TMON JSYS . . . . 9-10
.SFTMZ FUNCTION OF TMON JSYS . . . . 9-9
.SFVAR FUNCTION OF TMON JSYS . . . . 9-10
.SJBAT FUNCTION OF SETJB JSYS  . . . 10-72
.SJDDM ARGUMENT TO MTOPR JSYS  . . . 10-51
.SJDEN FUNCTION OF SETJB JSYS  . . . 10-78
.SJDFT FUNCTION OF SETJB JSYS  . . . 10-71
.SJDM FUNCTION OF SETJB JSYS . . . . 10-80
.SJDM8 ARGUMENT TO MTOPR JSYS  . . . 10-52
.SJLLO FUNCTION OF SETJB JSYS  . . . 10-71
.SJPAR FUNCTION OF SETJB JSYS  . . . 10-79
.SJRS FUNCTION OF SETJB JSYS . . . . 10-79
.SJSPD VALUE WITH SETJB JSYS . . . . 10-71
.SKRCS FUNCTION OF SKED% JSYS  . . . 9-29
.SKSBC FUNCTION OF SKED% JSYS  . . . 9-13
.STABK FUNCTION OF SETUUO UUO  . . . 10-71
.STBMN FUNCTION OF SETUUO UUO  . . . 10-71
.STBMX FUNCTION OF SETUUO UUO  . . . 10-70
.STBSN FUNCTION OF SETUUO UUO  . . . 10-72
.STCDN FUNCTION OF SETUUO UUO  . . . 10-72
.STCDR FUNCTION OF SETUUO UUO  . . . 10-69
.STCLM FUNCTION OF SETUUO UUO  . . . 10-70
.STCMX FUNCTION OF SETUUO UUO  . . . 10-69
.STCPU FUNCTION OF SETUUO UUO  . . . 10-70
.STCRN FUNCTION OF SETUUO UUO  . . . 10-70
                                                           Page Index-11
                                                               16 Jan 84


.STCSB FUNCTION OF SETUUO UUO  . . . 10-72
.STCVM FUNCTION OF SETUUO UUO  . . . 10-71
.STDAT FUNCTION OF SETUUO UUO  . . . 10-70
.STDAY FUNCTION OF SETUUO UUO  . . . 10-69
.STDEF FUNCTION OF SETUUO UUO  . . . 10-71
.STDFL FUNCTION OF SETUUO UUO  . . . 10-71
.STDFR FUNCTION OF SETUUO UUO  . . . 10-71
.STFPS FUNCTION OF SETUUO UUO  . . . 10-72
.STHST FUNCTION OF SETUUO UUO  . . . 10-71
.STKSY FUNCTION OF SETUUO UUO  . . . 10-70
.STLMX FUNCTION OF SETUUO UUO  . . . 10-70
.STMN FUNCTION OF SETUUO UUO . . . . 10-69
.STMVM FUNCTION OF SETUUO UUO  . . . 10-71
.STOPP FUNCTION OF SETUUO UUO  . . . 10-72
.STOPR FUNCTION OF SETUUO UUO  . . . 10-70
.STPGM FUNCTION OF SETUUO UUO  . . . 10-71
.STPRV FUNCTION OF SETUUO UUO  . . . 10-72
.STSCH FUNCTION OF SETUUO UUO  . . . 10-69
.STSPL FUNCTION OF SETUUO UUO  . . . 10-69
.STTLM FUNCTION OF SETUUO UUO  . . . 10-70
.STTVM FUNCTION OF SETUUO UUO  . . . 10-71
.STUVM FUNCTION OF SETUUO UUO  . . . 10-71
.STWTC FUNCTION OF SETUUO UUO  . . . 10-70
.STWTO FUNCTION OF SETUUO UUO  . . . 10-72
.TFBSB FUNCTION OF TAPOP. UUO  . . . 10-77
.TFBSF FUNCTION OF TAPOP. UUO  . . . 10-77
.TFBSZ FUNCTION OF TAPOP. UUO  . . . 10-79
.TFCMM FUNCTION OF TAPOP. UUO  . . . 10-78
.TFCNT FUNCTION OF TAPOP. UUO  . . . 10-80
.TFCRC FUNCTION OF TAPOP. UUO  . . . 10-80
.TFDEN FUNCTION OF TAPOP. UUO  . . . 10-78
.TFDMS FUNCTION OF TAPOP. UUO  . . . 10-81
.TFDSE FUNCTION OF TAPOP. UUO  . . . 10-77
.TFFEB FUNCTION OF TAPOP. UUO  . . . 10-78
.TFFED FUNCTION OF TAPOP. UUO  . . . 10-81
.TFFEP FUNCTION OF TAPOP. UUO  . . . 10-81
.TFFSB FUNCTION OF TAPOP. UUO  . . . 10-77
.TFFSF FUNCTION OF TAPOP. UUO  . . . 10-77
.TFFSO FUNCTION OF TAPOP. UUO  . . . 10-81
.TFIEP FUNCTION OF TAPOP. UUO  . . . 10-80
.TFIER FUNCTION OF TAPOP. UUO  . . . 10-81
.TFKPT FUNCTION OF TAPOP. UUO  . . . 10-78
.TFLBG FUNCTION OF TAPOP. UUO  . . . 10-77
.TFLBL FUNCTION OF TAPOP. UUO  . . . 10-81
.TFLDD FUNCTION OF TAPOP. UUO  . . . 10-78
.TFLPR FUNCTION OF TAPOP. UUO  . . . 10-81
.TFLRL FUNCTION OF TAPOP. UUO  . . . 10-77
.TFLSU FUNCTION OF TAPOP. UUO  . . . 10-78
.TFLTC FUNCTION OF TAPOP. UUO  . . . 10-81
.TFLTH FUNCTION OF TAPOP. UUO  . . . 10-79
.TFMFC FUNCTION OF TAPOP. UUO  . . . 10-81
.TFMOD FUNCTION OF TAPOP. UUO  . . . 10-79
.TFPAR FUNCTION OF TAPOP. UUO  . . . 10-79
.TFPDN FUNCTION OF TAPOP. UUO  . . . 10-81
                                                           Page Index-12
                                                               16 Jan 84


.TFPLT FUNCTION OF TAPOP. UUO  . . . 10-81
.TFRDB FUNCTION OF TAPOP. UUO  . . . 10-79
.TFREW FUNCTION OF TAPOP. UUO  . . . 10-76
.TFRID FUNCTION OF TAPOP. UUO  . . . 10-80
.TFSLE FUNCTION OF TAPOP. UUO  . . . 10-77
.TFSMM FUNCTION OF TAPOP. UUO  . . . 10-78
.TFSTA FUNCTION OF TAPOP. UUO  . . . 10-80
.TFSTS FUNCTION OF TAPOP. UUO  . . . 10-80
.TFTRK FUNCTION OF TAPOP. UUO  . . . 10-80
.TFUNL FUNCTION OF TAPOP. UUO  . . . 10-76
.TFURQ FUNCTION OF TAPOP. UUO  . . . 10-78
.TFWAT FUNCTION OF TAPOP. UUO  . . . 10-76
.TFWLE FUNCTION OF TAPOP. UUO  . . . 10-77
.TFWLG FUNCTION OF TAPOP. UUO  . . . 10-77
.TFWLK FUNCTION OF TAPOP. UUO  . . . 10-80
.TFWTM FUNCTION OF TAPOP. UUO  . . . 10-77
.TICRF ARGUMENT OF ATI JSYS  . . . . 6-7
.TO274 FUNCTION OF TRMOP. UUO  . . . 10-88
.TOACR FUNCTION OF TRMOP. UUO  . . . 10-88
.TOALT FUNCTION OF TRMOP. UUO  . . . 10-88
.TOAPL FUNCTION OF TRMOP. UUO  . . . 10-88
.TOBCT FUNCTION OF TRMOP. UUO  . . . 10-89
.TOBKA FUNCTION OF TRMOP. UUO  . . . 10-89
.TOBKC FUNCTION OF TRMOP. UUO  . . . 10-90
.TOBLK FUNCTION OF TRMOP. UUO  . . . 10-88
.TOCIB FUNCTION OF TRMOP. UUO  . . . 10-83
.TOCLR FUNCTION OF TRMOP. UUO  . . . 10-85
.TOCOB FUNCTION OF TRMOP. UUO  . . . 10-83
.TOCOM FUNCTION OF TRMOP. UUO  . . . 10-85
.TODBK FUNCTION OF TRMOP. UUO  . . . 10-88
.TODEM FUNCTION OF TRMOP. UUO  . . . 10-89
.TODIS FUNCTION OF TRMOP. UUO  . . . 10-87
.TODSC FUNCTION OF TRMOP. UUO  . . . 10-84
.TODSE FUNCTION OF TRMOP. UUO  . . . 10-84
.TODSF FUNCTION OF TRMOP. UUO  . . . 10-84
.TODSP FUNCTION OF TRMOP. UUO  . . . 10-85
.TODSS FUNCTION OF TRMOP. UUO  . . . 10-85
.TOEAB FUNCTION OF TRMOP. UUO  . . . 10-84
.TOECC FUNCTION OF TRMOP. UUO  . . . 10-90
.TOELE FUNCTION OF TRMOP. UUO  . . . 10-84
.TOFCS FUNCTION OF TRMOP. UUO  . . . 10-89
.TOFLC FUNCTION OF TRMOP. UUO  . . . 10-87
.TOFRM FUNCTION OF TRMOP. UUO  . . . 10-86
.TOGMR FUNCTION OF TRMOP. UUO  . . . 10-85
.TOGMS FUNCTION OF TRMOP. UUO  . . . 10-85
.TOHLF FUNCTION OF TRMOP. UUO  . . . 10-87
.TOHPS FUNCTION OF TRMOP. UUO  . . . 10-86
.TOIC FUNCTION OF TRMOP. UUO . . . . 10-84
.TOICT FUNCTION OF TRMOP. UUO  . . . 10-89
.TOIMI FUNCTION OF TRMOP. UUO  . . . 10-89
.TOIMO FUNCTION OF TRMOP. UUO  . . . 10-89
.TOINC FUNCTION OF TRMOP. UUO  . . . 10-84
.TOISC FUNCTION OF TRMOP. UUO  . . . 10-84
.TOLCP FUNCTION OF TRMOP. UUO  . . . 10-86
                                                           Page Index-13
                                                               16 Jan 84


.TOLCT FUNCTION OF TRMOP. UUO  . . . 10-86
.TOLOG FUNCTION OF TRMOP. UUO  . . . 10-85
.TONFC FUNCTION OF TRMOP. UUO  . . . 10-86
.TOOCT FUNCTION OF TRMOP. UUO  . . . 10-89
.TOOIC FUNCTION OF TRMOP. UUO  . . . 10-83
.TOOIP FUNCTION OF TRMOP. UUO  . . . 10-85
.TOOSU FUNCTION OF TRMOP. UUO  . . . 10-89
.TOOUC FUNCTION OF TRMOP. UUO  . . . 10-83
.TOOUS FUNCTION OF TRMOP. UUO  . . . 10-83
.TOPAG FUNCTION OF TRMOP. UUO  . . . 10-87
.TOPBS FUNCTION OF TRMOP. UUO  . . . 10-88
.TOPCT FUNCTION OF TRMOP. UUO  . . . 10-87
.TOPSZ FUNCTION OF TRMOP. UUO  . . . 10-87
.TORMT FUNCTION OF TRMOP. UUO  . . . 10-87
.TORSC FUNCTION OF TRMOP. UUO  . . . 10-84
.TORSP FUNCTION OF TRMOP. UUO  . . . 10-88
.TORTC FUNCTION OF TRMOP. UUO  . . . 10-88
.TORTM FUNCTION OF TRMOP. UUO  . . . 10-89
.TOSLV FUNCTION OF TRMOP. UUO  . . . 10-86
.TOSMS FUNCTION OF TRMOP. UUO  . . . 10-85
.TOSND FUNCTION OF TRMOP. UUO  . . . 10-86
.TOSOP FUNCTION OF TRMOP. UUO  . . . 10-83
.TOSPI FUNCTION OF TRMOP. UUO  . . . 10-82
.TOSTP FUNCTION OF TRMOP. UUO  . . . 10-87
.TOTAB FUNCTION OF TRMOP. UUO  . . . 10-86
.TOTAP FUNCTION OF TRMOP. UUO  . . . 10-87
.TOTDY FUNCTION OF TRMOP. UUO  . . . 10-88
.TOTIC FUNCTION OF TRMOP. UUO  . . . 10-90
.TOTOC FUNCTION OF TRMOP. UUO  . . . 10-90
.TOTSP FUNCTION OF TRMOP. UUO  . . . 10-88
.TOTTC FUNCTION OF TRMOP. UUO  . . . 10-90
.TOTYP FUNCTION OF TRMOP. UUO  . . . 10-85
.TOWID FUNCTION OF TRMOP. UUO  . . . 10-86
.TOXON FUNCTION OF TRMOP. UUO  . . . 10-85
.TYCDP DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-17
.TYCDR DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-17
.TYD78 DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-18
.TYDIS DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-17
.TYDRA DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-18
.TYDSK DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-16
.TYDTA DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-16
.TYEXT DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-17
.TYLPC DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-18
.TYLPT DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-17
.TYMCR DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-18
.TYMPX DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-17
.TYMTA DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-16
.TYPAP DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-18
.TYPAR DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-17
.TYPCP DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-18
.TYPCR DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-17
.TYPE FUNCTION OF FRCUUO UUO . . . . 10-32
.TYPLT DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-17
.TYPTP DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-16
                                                           Page Index-14
                                                               16 Jan 84


.TYPTR DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-16
.TYPTY DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-17
.TYRDA DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-18
.TYTSK DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-18
.TYTTY DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-16
.TYWTY DEVICE TYPE CODE RETURNED BY DEVTYP UUO  10-18
10/11 COMPATIBILITY MODE . . . . . . 10-19
2741 MODE  . . . . . . . . . . . . . 10-88
6.03 ERROR REPORTING . . . . . . . . 9-10
<SYSTEM>INFO . . . . . . . . . . . . 7-1
[SYSTEM]GOPHER . . . . . . . . . . . 9-25
[SYSTEM]INFO . . . . . . . . . . . . 7-1
[SYSTEM]INFO PID . . . . . . . . . . 9-27
[SYSTEM]IPCC FUNCTIONS . . . . . . . 7-2
[SYSTEM]IPCC PID . . . . . . . . . . 9-25

ACCESS CODES FOR FILE  . . . . . . . 5-3
ACCESS LEVELS FOR PAGES  . . . . . . 4-1
ACCESS PRIVILEGES FOR PAGES  . . . . 10-58
ACCESSING UNASSIGNED MEMORY ADDRESS  4-1
ACCOUNT CODE IN FILE SPEC  . . . . . 5-2
ACCOUNT DESIGNATOR . . . . . . . . . 9-20, 10-1
ACCOUNT STRING . . . . . . . . . . . 10-1
ACCOUNT VALIDATION . . . . . . . . . 7-3, 9-10
ACCOUNTING . . . . . . . . . . . . . 7-1 to 7-2
ACCOUNTING DAEMON  . . . . . . . . . 7-3
ACCT. UUO  . . . . . . . . . . . . . 10-1
ACCUMULATOR CONVENTS FOR JSYSs . . . 2-2
ACDAE ACCOUNTING DAEMON  . . . . . . 7-3
ACTDAE PROGRAM . . . . . . . . . . . 10-62
ADBRK JSYS . . . . . . . . . . . . . 6-8, 9-27
ADDRESS BREAKS . . . . . . . . . . . 6-8, 9-17, 9-27, 10-71
ADDRESS CHECK ON DEVICE  . . . . . . 6-6
ADJSP INSTRUCTION WITH EXTENDED ADDRESSING  8-8
AIC JSYS . . . . . . . . . . . . . . 6-2
ALLOC JSYS . . . . . . . . . . . . . 10-26, 10-62
ALLOCATION OF MEMORY . . . . . . . . 9-13
ALLOCATION OF PHYSICAL CORE  . . . . 9-19
ALTERNATE PORT . . . . . . . . . . . 10-23
AOBJN POINTER WITH EXTENDED ADDRESSING  8-6
AOBJP LOOPS WITH EXTENDED ADDRESSING  8-6
AP.AOV OPTION OF APRENB UUO  . . . . 6-3
AP.CLK OPTION OF APRENB UUO  . . . . 6-3
AP.FOV OPTION OF APRENB UUO  . . . . 6-3
AP.ILM OPTION OF APRENB UUO  . . . . 6-3
AP.NXM OPTION OF APRENB UUO  . . . . 6-3
AP.PAR OPTION OF APRENB UUO  . . . . 6-3
AP.POV OPTION OF APRENB UUO  . . . . 6-3
APL MODE . . . . . . . . . . . . . . 10-88
APPEND FILE  . . . . . . . . . . . . 10-29
APR SERIAL NUMBER  . . . . . . . . . 9-6
APR STATE  . . . . . . . . . . . . . 4-4
APR TRAP ROUTINE . . . . . . . . . . 4-4
APRENB UUO . . . . . . . . . . . . . 1-1, 6-1, 6-3, 10-2, 10-93
                                                           Page Index-15
                                                               16 Jan 84


APRID TABLE OF GETAB JSYS  . . . . . 9-6
ARCHIVING  . . . . . . . . . . . . . 7-3
ARITHMETIC OVERFLOW ERROR  . . . . . 6-3, 6-6, 10-2
ARPANET  . . . . . . . . . . . . . . 10-18
ASND JSYS  . . . . . . . . . . . . . 10-11 to 10-12, 10-62
ASSIGN COMMAND . . . . . . . . . . . 10-11
ASSIGNED DEVICE  . . . . . . . . . . 10-16
AT%CCJ FUNCTION OF ATACH JSYS  . . . 10-31
ATACH JSYS . . . . . . . . . . . . . 10-2, 10-31 to 10-32
ATI JSYS . . . . . . . . . . . . . . 6-2, 6-4, 6-6 to 6-7
ATTACH UUO . . . . . . . . . . . . . 6-7, 10-2
AUTOBAUD DETECTION . . . . . . . . . 10-84
AUTOMATIC RELOADING  . . . . . . . . 9-9
AVAILABLE DEVICE . . . . . . . . . . 10-10

BACKOUT CODE FOR JSYS  . . . . . . . 1-4
BATCH  . . . . . . . . . . . . . . . 10-70
BATCH DATA . . . . . . . . . . . . . 9-34
BATCH JOBS LOGGED IN . . . . . . . . 9-8
BATCH JOBS MAXIMUM . . . . . . . . . 9-8
BATCH STATUS . . . . . . . . . . . . 9-21
BIN JSYS . . . . . . . . . . . . . . 10-29, 10-39, 10-92
BKJFN JSYS . . . . . . . . . . . . . 10-29 to 10-30, 10-92 to 10-93
BLDTD TABLE OF GETAB JSYS  . . . . . 9-5
BLOCK SIZE FOR TAPE  . . . . . . . . 10-79
BLOCKING INPUT/OUTPUT OPERATIONS . . 5-8
BLOCKS PER UNIT  . . . . . . . . . . 10-22
BOOSTRAP SFDs  . . . . . . . . . . . 9-15
BOOT JSYS  . . . . . . . . . . . . . 10-3
BOOTS  . . . . . . . . . . . . . . . 9-13
BOOTSTRAP CPU NUMBER . . . . . . . . 9-14
BOOTSTRAP CTY  . . . . . . . . . . . 9-14
BOOTSTRAP FILE SPECIFICATION . . . . 9-14
BOUT JSYS  . . . . . . . . . . . . . 10-30, 10-55, 10-83, 10-93
BREAKPOINT . . . . . . . . . . . . . 10-62, 10-73
BUFFER SIZE  . . . . . . . . . . . . 10-15
BUFFER SIZE AND COUNT  . . . . . . . 10-14

CACCT JSYS . . . . . . . . . . . . . 10-1
CACHE BIT  . . . . . . . . . . . . . 10-58, 10-72
CAL11. UUO . . . . . . . . . . . . . 10-3
CALL UUO . . . . . . . . . . . . . . 10-3
CALLI UUO  . . . . . . . . . . . . . 1-1, 2-2, 10-3
CAPABILITIES OF JOB  . . . . . . . . 9-33
CARD PUNCH . . . . . . . . . . . . . 10-9
CARD READER  . . . . . . . . . . . . 10-9
CARD READER/PUNCH  . . . . . . . . . 9-12
CFIBF JSYS . . . . . . . . . . . . . 10-4, 10-83
CFOBF JSYS . . . . . . . . . . . . . 10-4, 10-83
CFORK JSYS . . . . . . . . . . . . . 5-8
CHANNEL DATA BLOCK . . . . . . . . . 9-8
CHANNEL USE  . . . . . . . . . . . . 9-28
CHARGE NUMBER  . . . . . . . . . . . 9-20
CHECKPOINT FILE  . . . . . . . . . . 10-29, 10-31
                                                           Page Index-16
                                                               16 Jan 84


CHFDB JSYS . . . . . . . . . . . . . 5-6 to 5-7, 10-31, 10-64
CHGPPN UUO . . . . . . . . . . . . . 10-3
CHKAC JSYS . . . . . . . . . . . . . 10-3
CHKACC UUO . . . . . . . . . . . . . 10-3
CIS JSYS . . . . . . . . . . . . . . 6-1
CLASS RUNTIME QUOTA  . . . . . . . . 9-29
CLASS SCHEDULER  . . . . . . . . . . 9-10 to 9-11, 9-13, 10-38
CLOCK RESOLUTION . . . . . . . . . . 9-8
CLOCK TICK . . . . . . . . . . . . . 6-7, 10-2
CLOCK TICK INTERRUPT . . . . . . . . 6-3
CLOCK TICKS PER SECOND . . . . . . . 9-7
CLOSE FILE . . . . . . . . . . . . . 10-29
CLOSE UUO  . . . . . . . . . . . . . 1-1, 5-3, 10-4
CLOSF JSYS . . . . . . . . . . . . . 1-1, 5-5, 10-4 to 10-5, 10-29, 
                                     10-31, 10-63 to 10-64
CLRBFI UUO . . . . . . . . . . . . . 10-4
CLRBFO UUO . . . . . . . . . . . . . 10-4
CLRST. UUO . . . . . . . . . . . . . 10-5
CNECT. UUO . . . . . . . . . . . . . 10-5
CO%NRJ FLAG OF OPENF JSYS  . . . . . 10-29
CODING CONVENTIONS FOR JSYSs . . . . 2-2
COMMAND NAMES FOR MONITOR  . . . . . 9-19
COMMAND PARSING  . . . . . . . . . . 5-4
COMMAND PROCESSORS . . . . . . . . . 10-39
COMMAND TTY  . . . . . . . . . . . . 9-7
COMND JSYS . . . . . . . . . . . . . 5-4, 10-39, 10-57, 10-83
COMPATIBILITY MODE . . . . . . . . . 10-23
COMPATIBILITY PACKAGE (PA1050) . . . 3-1
CONFIGURATION FLAGS, SOFTWARE  . . . 9-10
CONFIGURATION TABLE  . . . . . . . . 9-5
CONI . . . . . . . . . . . . . . . . 10-14
CONI/DATAI INFORMATION . . . . . . . 9-34
CONNECT JOB  . . . . . . . . . . . . 10-32
CONTINUE COMMAND . . . . . . . . . . 1-4
CONTINUE JOB . . . . . . . . . . . . 10-32
CONTROL CHARACTERS, INTERCEPTING . . 1-3
CONTROLLER NUMBER  . . . . . . . . . 10-19, 10-25
CONTROLLER TYPE  . . . . . . . . . . 10-25
CONTROLLER TYPE FOR TAPE . . . . . . 10-78
CONTROLLING TERMINAL . . . . . . . . 9-5
COPY-ON-WRITE PAGE ACCESS  . . . . . 4-1, 5-6
CORE ALLOCATION  . . . . . . . . . . 9-19
CORE BLOCKS  . . . . . . . . . . . . 9-9
CORE BLOCKS BIT MAP  . . . . . . . . 9-6
CORE DUMP FILE . . . . . . . . . . . 10-32
CORE INFORMATION . . . . . . . . . . 4-4
CORE LINK SWITCH . . . . . . . . . . 2-3
CORE UUO . . . . . . . . . . . . . . 4-1, 10-5
CORMAX . . . . . . . . . . . . . . . 9-13, 9-16, 10-69
CORMAX FOR SYSTEM  . . . . . . . . . 9-15
CORMIN . . . . . . . . . . . . . . . 9-16, 10-69
CPU LINK SWITCH  . . . . . . . . . . 2-3
CPU SPECIFICATION PRIVILEGE  . . . . 9-4, 9-33
CPU STOPCODE . . . . . . . . . . . . 9-9
                                                           Page Index-17
                                                               16 Jan 84


CPUs, MULTIPLE . . . . . . . . . . . 9-23
CPUs, NUMBER OF  . . . . . . . . . . 9-14
CR%MAP OPTION  . . . . . . . . . . . 5-8
CREATE FILE  . . . . . . . . . . . . 10-28
CREATE PAGE  . . . . . . . . . . . . 10-58
CREATION DATE  . . . . . . . . . . . 5-7
CREATION DATE FOR SYSTEM . . . . . . 9-5
CRLNM JSYS . . . . . . . . . . . . . 10-12, 10-59, 10-75
CTLJOB UUO . . . . . . . . . . . . . 10-5
CTRL/C . . . . . . . . . . . . . . . 6-4, 6-6
CTRL/C INTERRUPTS  . . . . . . . . . 1-3
CTRL/O . . . . . . . . . . . . . . . 10-89
CTRL/Q . . . . . . . . . . . . . . . 10-34
CTRL/R . . . . . . . . . . . . . . . 10-32, 10-88
CTRL/T . . . . . . . . . . . . . . . 10-32, 10-88
CTRL/T INTERCEPTS  . . . . . . . . . 1-3
CTY: OPERATOR TTY  . . . . . . . . . 9-6
CUSTOMER VERSION NUMBER  . . . . . . 9-9
CYCLIC REDUNDANCY CHARACTER  . . . . 10-50
CYLINDER NUMBER  . . . . . . . . . . 10-23
CZ%ABT OPTION OF CLOSF JSYS  . . . . 10-64

DAEFIN UUO . . . . . . . . . . . . . 10-6
DAEMON . . . . . . . . . . . . . . . 9-10, 10-6, 10-19, 10-27, 10-32
DAEMON UUO . . . . . . . . . . . . . 10-6
DAS78  . . . . . . . . . . . . . . . 10-18
DATA CHANNEL NUMBER  . . . . . . . . 10-24
DATA CHANNELS  . . . . . . . . . . . 9-9
DATA MODE FOR TAPE . . . . . . . . . 10-79
DATA SECURITY  . . . . . . . . . . . 10-77
DATAI/CONI INFORMATION . . . . . . . 9-34
DATASET CONTROL TABLE  . . . . . . . 9-7
DATASET LINE . . . . . . . . . . . . 10-34
DATASET STATUS CHANGED . . . . . . . 6-7
DATE . . . . . . . . . . . . . . . . 9-5
DATE UUO . . . . . . . . . . . . . . 10-7
DBUGSW TABLE OF GETAB JSYS . . . . . 9-9
DC.ALT FIELD RETURNED BY DSKCHR UUO  10-24
DC.AWL FIELD RETURNED BY DSKCHR UUO  10-24
DC.CNN FIELD RETURNED BY DSKCHR UUO  10-25
DC.CNT FIELD RETURNED BY DSKCHR UUO  10-25
DC.DCN FIELD RETURNED BY DSKCHR UUO  10-24
DC.HWP FIELD RETURNED BY DSKCHR UUO  10-23
DC.MSG FIELD RETURNED BY DSKCHR UUO  10-24
DC.NNA FIELD RETURNED BY DSKCHR UUO  10-24
DC.OFL FIELD RETURNED BY DSKCHR UUO  10-23
DC.PRV FIELD RETURNED BY DSKCHR UUO  10-24
DC.RHB FIELD RETURNED BY DSKCHR UUO  10-23
DC.SAF FIELD RETURNED BY DSKCHR UUO  10-24
DC.STS FIELD RETURNED BY DSKCHR UUO  10-24
DC.SWP FIELD RETURNED BY DSKCHR UUO  10-24
DC.TYP FIELD RETURNED BY DSKCHR UUO  10-24
DC.UNN FIELD RETURNED BY DSKCHR UUO  10-25
DC.UNT FIELD RETURNED BY DSKCHR UUO  10-25
                                                           Page Index-18
                                                               16 Jan 84


DC.ZMT FIELD RETURNED BY DSKCHR UUO  10-24
DC11 . . . . . . . . . . . . . . . . 10-18
DC44 . . . . . . . . . . . . . . . . 10-17 to 10-18
DDB CHAIN  . . . . . . . . . . . . . 9-6
DDT  . . . . . . . . . . . . . . . . 2-1, 2-4, 4-3
DDT COMMAND  . . . . . . . . . . . . 1-4
DDT MEMORY MANAGEMENT  . . . . . . . 2-4
DDT SYMBOL TABLE . . . . . . . . . . 4-2 to 4-3
DDTGT UUO  . . . . . . . . . . . . . 10-7
DDTIN UUO  . . . . . . . . . . . . . 10-7
DDTOUT UUO . . . . . . . . . . . . . 10-8
DDTRL UUO  . . . . . . . . . . . . . 10-8
DEACTI UUO . . . . . . . . . . . . . 10-8
DEASSIGN DEVICE  . . . . . . . . . . 10-62
DEBREAK CAPABILITY . . . . . . . . . 10-88
DEBRK JSYS . . . . . . . . . . . . . 6-2, 10-8
DEBRK UUO  . . . . . . . . . . . . . 6-1
DEBRK. UUO . . . . . . . . . . . . . 10-8
DEBUG STATUS . . . . . . . . . . . . 9-9
DEBUG STOPCODE . . . . . . . . . . . 9-9
DECNET . . . . . . . . . . . . . . . 10-46
DECTAPE  . . . . . . . . . . . . . . 10-9 to 10-10, 10-16, 10-91, 10-93
DEFAULTS FOR JOB . . . . . . . . . . 9-31
DELDF JSYS . . . . . . . . . . . . . 10-30, 10-64
DELETE FILE  . . . . . . . . . . . . 10-64
DELF JSYS  . . . . . . . . . . . . . 10-30, 10-64
DELNF JSYS . . . . . . . . . . . . . 10-30, 10-64
DENSITY OF MAG TAPE  . . . . . . . . 10-51
DENSITY OF TAPE  . . . . . . . . . . 10-78
DEPOSIT ("D") COMMAND  . . . . . . . 9-10
DEQ JSYS . . . . . . . . . . . . . . 10-9
DEQ. UUO . . . . . . . . . . . . . . 9-11, 10-9
DESTROY PAGE . . . . . . . . . . . . 10-58
DETACH JOB . . . . . . . . . . . . . 10-32
DETACH UUO . . . . . . . . . . . . . 6-7
DETACHING OR ATTACHING A JOB . . . . 10-2
DEVCHR TABLE OF GETAB JSYS . . . . . 10-12
DEVCHR UUO . . . . . . . . . . . . . 10-9, 10-11, 10-33
DEVGEN UUO . . . . . . . . . . . . . 10-12
DEVICE AVAILABLE . . . . . . . . . . 10-10
DEVICE CHARACTERISTICS . . . . . . . 10-9
DEVICE DATA BLOCK  . . . . . . . . . 9-12, 9-32, 10-14
DEVICE DATA BLOCKS . . . . . . . . . 9-10
DEVICE DESIGNATOR  . . . . . . . . . 10-13
DEVICE FULL  . . . . . . . . . . . . 6-5
DEVICE NAME IN FILE SPECIFICATION  . 5-1
DEVICE NAMES . . . . . . . . . . . . 10-25
DEVICE OFFLINE . . . . . . . . . . . 6-5
DEVICE ON-LINE . . . . . . . . . . . 6-5
DEVICE STATUS  . . . . . . . . . . . 10-14
DEVICE TYPE  . . . . . . . . . . . . 10-14
DEVICE UNSPOOLING  . . . . . . . . . 9-4, 9-33
DEVICES, HUNG  . . . . . . . . . . . 9-13
DEVLNM UUO . . . . . . . . . . . . . 10-12
                                                           Page Index-19
                                                               16 Jan 84


DEVNAM TABLE OF GETAB JSYS . . . . . 10-13
DEVNAM UUO . . . . . . . . . . . . . 10-13
DEVOP. UUO . . . . . . . . . . . . . 10-13
DEVPPN UUO . . . . . . . . . . . . . 10-13
DEVSIZ UUO . . . . . . . . . . . . . 10-14
DEVST JSYS . . . . . . . . . . . . . 10-13
DEVSTS UUO . . . . . . . . . . . . . 10-14, 10-66
DEVTYP UUO . . . . . . . . . . . . . 10-14 to 10-18
DIAG% JSYS . . . . . . . . . . . . . 10-19
DIAG. UUO  . . . . . . . . . . . . . 10-19
DIBE JSYS  . . . . . . . . . . . . . 10-83
DIGITAL VERSION NUMBER . . . . . . . 9-9
DIGITAL-COMPATIBLE MODE MAG TAPE . . 10-51
DIR JSYS . . . . . . . . . . . . . . 6-1
DIRECTORY ACCESS . . . . . . . . . . 5-3
DIRECTORY DEVICE . . . . . . . . . . 10-11, 10-14
DIRECTORY NAME IN FILE SPEC  . . . . 5-1
DIRECTORY NUMBER . . . . . . . . . . 9-3, 10-35
DIRECTORY PATH . . . . . . . . . . . 10-59
DIRECTORY STRING . . . . . . . . . . 10-35
DIRST JSYS . . . . . . . . . . . . . 9-20, 10-35
DISK BLOCKS READ . . . . . . . . . . 9-18
DISK BLOCKS WRITTEN  . . . . . . . . 9-18
DISK DEVICE CHARACTERISTICS  . . . . 10-21
DISK PRIORITY  . . . . . . . . . . . 9-4, 9-33, 10-19
DISK UNIT OFFLINE  . . . . . . . . . 6-4
DISK. UUO  . . . . . . . . . . . . . 10-19 to 10-20
DISMIS JSYS  . . . . . . . . . . . . 10-38
DISMS JSYS . . . . . . . . . . . . . 10-6, 10-73
DISPATCH TABLE . . . . . . . . . . . 10-10
DISPLAY CONSOLE  . . . . . . . . . . 10-34, 10-67, 10-87
DISPLAY UNIT . . . . . . . . . . . . 10-10, 10-17
DOBE JSYS  . . . . . . . . . . . . . 10-83
DORMANT SEGMENT  . . . . . . . . . . 9-7
DR01 DEVICE  . . . . . . . . . . . . 10-18
DRMERR TABLE OF GETAB JSYS . . . . . 9-23
DSKCHR UUO . . . . . . . . . . . . . 10-21 to 10-25
DSKERR TABLE OF GETAB JSYS . . . . . 9-23
DSKOP JSYS . . . . . . . . . . . . . 10-30, 10-75
DTACH JSYS . . . . . . . . . . . . . 10-2
DTE. UUO . . . . . . . . . . . . . . 10-25
DTR01 DEVICE . . . . . . . . . . . . 10-18
DUAL-PORTED DEVICE . . . . . . . . . 10-24
DUMP FILE  . . . . . . . . . . . . . 10-32
DUMP MODE  . . . . . . . . . . . . . 5-5, 10-12, 10-39, 10-56
DUMPI JSYS . . . . . . . . . . . . . 5-5 to 5-6, 10-39
DUMPO JSYS . . . . . . . . . . . . . 5-5, 10-56
DV%AS FIELD RETURNED BY DVCHR JSYS . 10-15 to 10-16
DV%ASN FIELD RETURNED BY DVCHR JSYS  10-11
DV%AV FIELD RETURNED BY DVCHR JSYS . 10-10 to 10-11, 10-15
DV%DIR FIELD RETURNED BY DVCHR JSYS  10-9, 10-11, 10-14
DV%IN FIELD RETURNED BY DVCHR JSYS . 10-10 to 10-11, 10-15
DV%M0 VALUE IN DV%MOD FIELD RETURNED BY DVCHR  10-12
DV%M10 VALUE IN DV%MOD FIELD RETURNED BY DVCHR  10-12
                                                           Page Index-20
                                                               16 Jan 84


DV%M17 VALUE IN DV%MOD FIELD RETURNED BY DVCHR  10-12
DV%MNT FIELD RETURNED BY DVCHR JSYS  10-11
DV%MOD FIELD RETURNED BY DVCHR JSYS  10-12
DV%OUT FIELD RETURNED BY DVCHR JSYS  10-10 to 10-11, 10-16
DV%TYP FIELD RETURNED BY DVCHR JSYS  10-9 to 10-11, 10-15 to 10-18, 
                                     10-33
DV.2IO FIELD RETURNED BY DEVCHR UUO  10-10
DV.ASC FIELD RETURNED BY DEVCHR UUO  10-11
DV.ASP FIELD RETURNED BY DEVCHR UUO  10-11
DV.AVL FIELD RETURNED BY DEVCHR UUO  10-10
DV.CRD FIELD RETURNED BY DEVCHR UUO  10-9
DV.DIR FIELD RETURNED BY DEVCHR UUO  10-11
DV.DIS FIELD RETURNED BY DEVCHR UUO  10-10
DV.DRI FIELD RETURNED BY DEVCHR UUO  10-9
DV.DSK FIELD RETURNED BY DEVCHR UUO  10-9
DV.DTA FIELD RETURNED BY DEVCHR UUO  10-10
DV.IN FIELD RETURNED BY DEVCHR UUO . 10-11
DV.LNG FIELD RETURNED BY DEVCHR UUO  10-10
DV.LPT FIELD RETURNED BY DEVCHR UUO  10-9
DV.Mnn FIELD RETURNED BY DEVCHR UUO  10-11
DV.MTA FIELD RETURNED BY DEVCHR UUO  10-10
DV.OUT FIELD RETURNED BY DEVCHR UUO  10-11
DV.PTP FIELD RETURNED BY DEVCHR UUO  10-10
DV.PTR FIELD RETURNED BY DEVCHR UUO  10-10
DV.TTA FIELD RETURNED BY DEVCHR UUO  10-9
DV.TTU FIELD RETURNED BY DEVCHR UUO  10-10
DV.TTY FIELD RETURNED BY DEVCHR UUO  10-10
DVCHR JSYS . . . . . . . . . . . . . 10-9 to 10-18, 10-33, 10-42
DVPHY. UUO . . . . . . . . . . . . . 10-25
DVRST. UUO . . . . . . . . . . . . . 10-26
DVURS. UUO . . . . . . . . . . . . . 10-26
DWNTIM TABLE OF GETAB JSYS . . . . . 9-16

EBOX TIME  . . . . . . . . . . . . . 9-30
EBOX/MBOS RUN TIME . . . . . . . . . 9-11
ECHO . . . . . . . . . . . . . . . . 9-2, 10-34, 10-45, 10-68
EIR JSYS . . . . . . . . . . . . . . 6-1, 10-68
END MACRO STATEMENT  . . . . . . . . 4-5
END OF FILE  . . . . . . . . . . . . 6-5
END OF TAPE  . . . . . . . . . . . . 10-77
END-OF-FILE ON MAG TAPE  . . . . . . 10-52
ENQ JSYS . . . . . . . . . . . . . . 6-8, 10-26
ENQ. UUO . . . . . . . . . . . . . . 9-11, 10-26
ENQ/DEQ  . . . . . . . . . . . . . . 10-9
ENQ/DEQ PRIVILEGE  . . . . . . . . . 9-4, 9-33
ENQ/DEQ RESOURCE INTERRUPT . . . . . 6-8
ENQ/DEQ STATISTICS . . . . . . . . . 9-29
ENQC JSYS  . . . . . . . . . . . . . 9-30, 10-27
ENQC. UUO  . . . . . . . . . . . . . 10-27
ENTER UUO  . . . . . . . . . . . . . 1-1, 5-3 to 5-5, 5-7, 9-12, 
                                     10-27 to 10-28
ENTRY VECTOR . . . . . . . . . . . . 3-1, 4-4 to 4-5
ENTRY VECTOR WORD  . . . . . . . . . 4-3, 4-6 to 4-7
ER.EIJ .JBINT INTERRUPT FUNCTION . . 6-3
                                                           Page Index-21
                                                               16 Jan 84


ER.FUL .JBINT INTERRUPT FUNCTION . . 6-4
ER.ICC .JBINT INTERRUPT FUNCTION . . 6-4
ER.IDV .JBINT INTERRUPT FUNCTION . . 6-4
ER.OFL .JBINT INTERRUPT FUNCTION . . 6-4
ER.QEX .JBINT INTERRUPT FUNCTION . . 6-4
ER.TLX .JBINT INTERRUPT FUNCTION . . 6-4
ERLST. UUO . . . . . . . . . . . . . 10-27
ERROR COUNT  . . . . . . . . . . . . 4-3
ERROR IN JOB . . . . . . . . . . . . 6-3
ERROR INFORMATION  . . . . . . . . . 9-23
ERROR INTERCEPTING . . . . . . . . . 1-3
ERROR REPORTING, 6.03  . . . . . . . 9-10
ERROR REPORTING, EXTENDED  . . . . . 9-11
ERROR REPORTING, MAGTAPE . . . . . . 9-12
ERROR REPORTING, MASSBUS . . . . . . 9-11
ERROR, MEMORY PARITY . . . . . . . . 9-16
ERROR-INTERCEPTING BLOCK . . . . . . 4-4
ERROR.SYS  . . . . . . . . . . . . . 10-19
ERRPT. UUO . . . . . . . . . . . . . 10-27
ERSATZ DEVICES . . . . . . . . . . . 9-23
ESOUT JSYS . . . . . . . . . . . . . 10-57, 10-83
EXAMINE ("E") COMMAND  . . . . . . . 9-10
EXE FILE . . . . . . . . . . . . . . 4-6 to 4-7, 9-11, 9-31 to 9-32, 
                                     10-35, 10-47, 10-65
EXEC . . . . . . . . . . . . . . . . 1-2, 3-1, 4-7, 9-19, 9-21, 9-24, 
                                     10-11, 10-32, 10-70, 10-85
EXECUTION PUSH DOWN LIST . . . . . . 9-16
EXIT JSYS  . . . . . . . . . . . . . 10-48
EXIT UUO . . . . . . . . . . . . . . 10-28
EXPONENTIAL USER TIME FACTOR . . . . 9-13
EXPUNGE FILE . . . . . . . . . . . . 10-30, 10-64
EXTENDED ADDRESSING  . . . . . . . . 8-1
EXTENDED ERROR REPORTING . . . . . . 9-11
EXTERNAL CONDITION . . . . . . . . . 6-7
EXTERNAL TASK DEVICE . . . . . . . . 10-17

FACT FILES . . . . . . . . . . . . . 7-2, 10-6
FATAL ERROR IN JOB . . . . . . . . . 6-7
FB%BSZ BIT FIELD . . . . . . . . . . 5-7
FB%MOD BIT FIELD . . . . . . . . . . 5-7
FDB (FILE DESCRIPTOR BLOCK)  . . . . 5-7
FEATURE TEST SETTINGS  . . . . . . . 9-23
FEATURE TEST SWITCHES  . . . . . . . 9-6
FILDDT PROGRAM . . . . . . . . . . . 10-6
FILE ACCESS BITS . . . . . . . . . . 5-7
FILE ACCESS CODES  . . . . . . . . . 5-3
FILE ACCESS PRIVILEGES . . . . . . . 10-3
FILE DESCRIPTOR BLOCK  . . . . . . . 5-7, 10-31, 10-47, 10-64
FILE NAME  . . . . . . . . . . . . . 5-7
FILE NAME EXTENSION  . . . . . . . . 5-7
FILE NAME EXTENSION IN FILE SPEC . . 5-1
FILE NAME IN FILE SPEC . . . . . . . 5-1
FILE PROTECTION CODE . . . . . . . . 5-7
FILE SIZE  . . . . . . . . . . . . . 10-20
                                                           Page Index-22
                                                               16 Jan 84


FILE SPECIFICATIONS  . . . . . . . . 5-1
FILE STATUS  . . . . . . . . . . . . 10-36
FILE STRUCTURE . . . . . . . . . . . 10-36
FILE STRUCTURE FULL  . . . . . . . . 6-4
FILE TYPE IN FILE SPEC . . . . . . . 5-1
FILOP. UUO . . . . . . . . . . . . . 2-2, 3-2, 5-3, 9-15, 10-11, 
                                     10-28 to 10-31, 10-41
FIRST FREE LOW-SEGMENT ADDRESS . . . 4-3
FLOATING POINT OVERFLOW ERROR  . . . 6-3
FLOATING POINT SIMULATION  . . . . . 10-72
FLOATING-POINTER OVERFLOW  . . . . . 10-2
FLOUT JSYS . . . . . . . . . . . . . 10-57, 10-83
FORK . . . . . . . . . . . . . . . . 1-2
FORM FEED  . . . . . . . . . . . . . 10-86
FRCLIN TTY NUMBER  . . . . . . . . . 9-15
FRCUUO UUO . . . . . . . . . . . . . 10-31 to 10-33
FRECHN UUO . . . . . . . . . . . . . 10-33
FREE CORE AREA . . . . . . . . . . . 9-15
FREE CORE BLOCKS . . . . . . . . . . 9-9
FRONT END TESTING AND DEBUGGING  . . 10-3
FULL CHARACTER SET . . . . . . . . . 10-89
FULL CHARACTER SET MODE  . . . . . . 9-2, 10-45

GACCT JSYS . . . . . . . . . . . . . 9-20, 10-1
GACTF JSYS . . . . . . . . . . . . . 9-20, 10-1
GAG  . . . . . . . . . . . . . . . . 10-86
GALAXY . . . . . . . . . . . . . . . 9-11
GCVEC JSYS . . . . . . . . . . . . . 3-1
GDSKC JSYS . . . . . . . . . . . . . 10-20 to 10-22
GDSTS JSYS . . . . . . . . . . . . . 10-36, 10-50 to 10-51, 
                                     10-80 to 10-81
GENERATION NUMBER IN FILE SPEC . . . 5-2
GENERATION OF SYSTEM, DATE/TIME  . . 9-5
GENERIC DEVICE . . . . . . . . . . . 10-14
GET JSYS . . . . . . . . . . . . . . 10-35, 10-47, 10-65
GETAB JSYS . . . . . . . . . . . . . 9-1, 9-3 to 9-9, 9-13, 
                                     9-15 to 9-18, 9-22, 9-26, 9-28, 
                                     9-31 to 9-33, 10-12 to 10-13, 
                                     10-32, 10-48, 10-60
GETAB TABLE DATA . . . . . . . . . . 9-18
GETCHR UUO . . . . . . . . . . . . . 10-33
GETJI JSYS . . . . . . . . . . . . . 9-1 to 9-3, 9-8, 9-16, 
                                     9-19 to 9-21, 9-30, 9-34, 10-5, 
                                     10-35, 10-37, 10-44 to 10-46, 
                                     10-51, 10-55, 10-62, 
                                     10-78 to 10-80, 10-82, 10-85
GETLCH UUO . . . . . . . . . . . . . 10-33 to 10-34
GETLIN UUO . . . . . . . . . . . . . 10-35
GETNM JSYS . . . . . . . . . . . . . 9-3
GETPPN UUO . . . . . . . . . . . . . 10-35
GETSEG UUO . . . . . . . . . . . . . 10-35
GETSTS UUO . . . . . . . . . . . . . 1-1, 10-30, 10-36, 10-74
GETTAB IMMEDIATE . . . . . . . . . . 9-33
GETTAB TABLE DATA  . . . . . . . . . 9-18
                                                           Page Index-23
                                                               16 Jan 84


GETTAB UUO . . . . . . . . . . . . . 9-1, 10-36
GJ%FOU FLAG BIT OF GTJFN JSYS  . . . 10-28
GJ%NEW FLAG OF GTJFN JSYS  . . . . . 10-28
GJINF JSYS . . . . . . . . . . . . . 10-35, 10-37, 10-62
GL.CTL BIT RETURNED BY GETLCH UUO  . 10-33
GL.CTL FUNCTION OF SETLCH UUO  . . . 10-67
GL.DSL BIT RETURNED BY GETLCH UUO  . 10-34
GL.DSP BIT RETURNED BY GETLCH UUO  . 10-34
GL.DSP FUNCTION OF SETLCH UUO  . . . 10-67
GL.HDP BIT RETURNED BY GETLCH UUO  . 10-34
GL.HDP FUNCTION OF SETLCH UUO  . . . 10-67
GL.ITY BIT RETURNED BY GETLCH UUO  . 10-33
GL.ITY FUNCTION OF SETLCH UUO  . . . 10-67
GL.LCM BIT RETURNED BY GETLCH UUO  . 10-34
GL.LCM FUNCTION OF SETLCH UUO  . . . 10-67
GL.LCP BIT RETURNED BY GETLCH UUO  . 10-34
GL.LCP FUNCTION OF SETLCH UUO  . . . 10-68
GL.LIN BIT RETURNED BY GETLCH UUO  . 10-34
GL.LIN FUNCTION OF SETLCH UUO  . . . 10-67
GL.PTM BIT RETURNED BY GETLCH UUO  . 10-34
GL.PTM FUNCTION OF SETLCH UUO  . . . 10-68
GL.RBS BIT RETURNED BY GETLCH UUO  . 10-34
GL.RBS FUNCTION OF SETLCH UUO  . . . 10-67
GL.REM BIT RETURNED BY GETLCH UUO  . 10-34
GL.REM FUNCTION OF SETLCH UUO  . . . 10-67
GL.TAB BIT RETURNED BY GETLCH UUO  . 10-34
GL.TAB FUNCTION OF SETLCH UUO  . . . 10-68
GLOBAL MEMORY REFERENCES . . . . . . 8-4
GOBSTR UUO . . . . . . . . . . . . . 10-36, 10-43
GREENWICH MEAN TIME  . . . . . . . . 9-9
GTAD JSYS  . . . . . . . . . . . . . 9-5, 9-8, 10-7, 10-49
GTDAL JSYS . . . . . . . . . . . . . 10-20 to 10-21
GTFDB JSYS . . . . . . . . . . . . . 10-47
GTJFN JSYS . . . . . . . . . . . . . 5-2, 5-4, 9-19, 9-21, 9-24, 
                                     10-27 to 10-29, 10-47, 10-55
GTNTN. UUO . . . . . . . . . . . . . 10-37
GTRPW JSYS . . . . . . . . . . . . . 9-28
GTSTS JSYS . . . . . . . . . . . . . 10-36
GTTYP JSYS . . . . . . . . . . . . . 9-33, 10-10, 10-17, 10-34, 10-87, 
                                     10-89
GTXTN. UUO . . . . . . . . . . . . . 10-37

HALF-DUPLEX  . . . . . . . . . . . . 10-34, 10-67, 10-87
HALT FUNCTION OF FRCUUO UUO  . . . . 10-33
HALT JOB . . . . . . . . . . . . . . 10-31
HALTF JSYS . . . . . . . . . . . . . 5-8, 6-2, 10-28, 10-48
HB.IPC FUNCTION OF HIBER UUO . . . . 10-37
HB.RIO FUNCTION OF HIBER UUO . . . . 10-37
HB.RPT FUNCTION OF HIBER UUO . . . . 10-37
HB.RTC FUNCTION OF HIBER UUO . . . . 10-38
HB.RTL FUNCTION OF HIBER UUO . . . . 10-37
HB.RWJ FUNCTION OF HIBER UUO . . . . 10-38
HB.RWP FUNCTION OF HIBER UUO . . . . 10-38
HB.RWT FUNCTION OF HIBER UUO . . . . 10-38
                                                           Page Index-24
                                                               16 Jan 84


HIBER UUO  . . . . . . . . . . . . . 10-37 to 10-38, 10-94
HIGH PRIORITY QUEUES . . . . . . . . 9-9
HIGH SEGMENT . . . . . . . . . . . . 10-35, 10-47, 10-58, 10-63
HIGH SEGMENT ADDRESSES . . . . . . . 4-3
HIGH SEGMENT JOB DATA AREA . . . . . 4-5
HIGH SEGMENT OF MONITOR  . . . . . . 9-13
HIGH SEGMENT PAGE NUMBER . . . . . . 4-3
HIGH SEGMENT PARAMETERS  . . . . . . 9-17
HIGH SEGMENT, FIRST FREE LOCATION  . 4-3
HIGH-PRIORITY QUEUE  . . . . . . . . 9-4, 9-33, 10-38
HIGHEST PHYSICAL MEMORY LOCATION . . 4-3
HLLI INSTRUCTION WITH EXTENDED ADDRESSING  8-9
HOST SYSTEM  . . . . . . . . . . . . 10-71
HPQ UUO  . . . . . . . . . . . . . . 10-38
HSYS JSYS  . . . . . . . . . . . . . 10-70
HUNG DEVICES . . . . . . . . . . . . 9-13

I/O WAIT INTERRUPT CONDITION . . . . 6-5
IC%TMZ FIELD FROM ODCNV JSYS . . . . 9-9
IDCNV JSYS . . . . . . . . . . . . . 10-7, 10-49
IDENTIFICATION RECORD OF USAGE FILE  7-2
IDTIM JSYS . . . . . . . . . . . . . 10-7, 10-49
IDTNC JSYS . . . . . . . . . . . . . 10-7, 10-49
IFIW OPERATION . . . . . . . . . . . 8-7
ILLEGAL INSTRUCTIONS . . . . . . . . 1-3
ILLEGAL MEMORY READ AND WRITE  . . . 6-3
ILLEGAL MEMORY REFERENCES  . . . . . 4-1, 6-6
ILLEGAL UUO INTERCEPT  . . . . . . . 6-6
IMAGE MODE . . . . . . . . . . . . . 10-12, 10-42, 10-83 to 10-84, 10-89
IN UUO . . . . . . . . . . . . . . . 1-1, 10-30, 10-39, 10-41, 10-55
INBUF UUO  . . . . . . . . . . . . . 1-1, 10-40
INCHRS UUO . . . . . . . . . . . . . 10-40
INCHRW UUO . . . . . . . . . . . . . 10-40
INCHSL UUO . . . . . . . . . . . . . 10-41
INCHWL UUO . . . . . . . . . . . . . 1-1, 10-41
INDEXED ADDRESSING . . . . . . . . . 8-5
INDIRECT ADDRESSING  . . . . . . . . 8-7
INDUSTRY-COMPATIBLE MODE MAG TAPE  . 10-52
INFERIOR PROCESS . . . . . . . . . . 1-2
INIT UUO . . . . . . . . . . . . . . 1-1, 10-11, 10-41
INITIA FUNCTION OF FRCUUO UUO  . . . 10-32
INITIA PROGRAM . . . . . . . . . . . 10-32, 10-47
INLNM JSYS . . . . . . . . . . . . . 9-23, 9-27
INPUT BUFFER . . . . . . . . . . . . 10-40
INPUT DONE . . . . . . . . . . . . . 6-5
INPUT ERROR  . . . . . . . . . . . . 6-5
INPUT UUO  . . . . . . . . . . . . . 1-1, 5-3, 5-5, 10-30, 10-41
INPUT/OUTPUT . . . . . . . . . . . . 5-1
INTER-PROCESS COMMUNICATIONS FACILITY  7-1
INTERACTIVE DEVICE . . . . . . . . . 10-15
INTERCEPTING CONTROL CHARACTERS  . . 1-3
INTERCEPTING ERRORS  . . . . . . . . 1-3
INTERRUPT BLOCK  . . . . . . . . . . 6-3
INTERRUPT HANDLING . . . . . . . . . 6-1
                                                           Page Index-25
                                                               16 Jan 84


INTERRUPTS OF JSYSs  . . . . . . . . 1-3
INTERRUPTS OF UUOs . . . . . . . . . 1-3
INTERVAL TIMER . . . . . . . . . . . 9-11
IONDX. UUO . . . . . . . . . . . . . 10-42
IONEOU UUO . . . . . . . . . . . . . 10-42
IOWD LIST  . . . . . . . . . . . . . 5-5
IOWDs  . . . . . . . . . . . . . . . 10-39, 10-56
IP%CFB FLAG TO MRECV JSYS  . . . . . 7-1
IP.CQQ FLAG OF .GTIPQ GETTAB TABLE . 9-27
IP.CQR FLAG OF .GTIPQ GETTAB TABLE . 9-27
IP.CQS FLAG OF .GTIPQ GETTAB TABLE . 9-27
IP.CQX FLAG OF .GTIPQ GETTAB TABLE . 9-27
IPCF . . . . . . . . . . . . . . . . 7-1, 9-12, 9-24, 10-37, 
                                     10-42 to 10-43, 10-62
IPCF DEFAULT DATA  . . . . . . . . . 9-25
IPCF FLAGS AND QUOTAS  . . . . . . . 9-27
IPCF PACKET FORMAT . . . . . . . . . 7-1
IPCF PACKET INTERRUPT  . . . . . . . 6-8
IPCF PACKET LENGTH . . . . . . . . . 9-24
IPCF PACKETS . . . . . . . . . . . . 9-25
IPCF PAGES . . . . . . . . . . . . . 9-25
IPCF POINTERS AND COUNTS . . . . . . 9-26
IPCF PRIVILEGE BIT . . . . . . . . . 9-4, 9-33
IPCF STATISTICS  . . . . . . . . . . 9-26
IPCFQ. UUO . . . . . . . . . . . . . 7-1, 10-42
IPCFR. UUO . . . . . . . . . . . . . 10-42
IPCFS. UUO . . . . . . . . . . . . . 7-1, 10-43
IPCRF. UUO . . . . . . . . . . . . . 7-1

JACCT BIT  . . . . . . . . . . . . . 9-2, 10-44
JB.UCC BIT OF JOB STATUS WORD  . . . 9-3, 10-45
JB.UDI BIT OF JOB STATUS WORD  . . . 9-2, 10-44
JB.UFC BIT IN JOB STATUS WORD  . . . 9-2, 10-45
JB.UJA BIT OF JOB STATUS WORD  . . . 9-1, 10-44
JB.UJC BIT OF JOB STATUS WORD  . . . 9-2, 10-44
JB.UJN FIELD OF JOB STATUS WORD  . . 9-3, 10-45
JB.ULI BIT OF JOB STATUS WORD  . . . 9-1, 10-44
JB.UML BIT OF JOB STATUS WORD  . . . 9-1, 10-44
JB.UNE BIT OF JOB STATUS WORD  . . . 9-2, 10-45
JB.UOA BIT OF JOB STATUS WORD  . . . 9-2, 10-44
JB.URN BIT OF JOB STATUS WORD  . . . 9-2, 10-45
JB.UTO BIT OF JOB STATUS WORD  . . . 9-2, 10-45
JBSET. UUO . . . . . . . . . . . . . 10-43
JBTPIA . . . . . . . . . . . . . . . 9-12
JD.BUF FIELD FROM .GTDFL GETTAB TABLE  9-31
JD.DAD FIELD FROM .GTDFL GETTAB TABLE  9-31
JD.PRT FIELD FROM .GTDFL GETTAB TABLE  9-31
JD.SPD FIELD FROM .GTDFL GETTAB TABLE  9-31
JFN (JOB FILE NUMBER)  . . . . . . . 5-3, 9-15, 9-31, 10-13, 10-27, 
                                     10-47, 10-63
JFNS JSYS  . . . . . . . . . . . . . 9-31, 10-13, 10-57, 10-84
JIFFIES PER SECOND . . . . . . . . . 9-4 to 9-5, 9-7, 10-82
JOB CAPABILITIES . . . . . . . . . . 9-33
JOB DATA AREA  . . . . . . . . . . . 2-3, 4-2, 4-7, 9-10, 10-67
                                                           Page Index-26
                                                               16 Jan 84


JOB DATA AREA SYMBOLS, DELETING  . . 4-5
JOB DATA AREA, HIGH SEGMENT  . . . . 4-5
JOB FILE NUMBER (JFN)  . . . . . . . 5-3, 9-15, 9-31, 10-13, 10-27, 
                                     10-47, 10-63
JOB INTERRUPT  . . . . . . . . . . . 6-8
JOB NUMBER . . . . . . . . . . . . . 9-3, 10-45
JOB NUMBERS, 9-BIT . . . . . . . . . 9-11
JOB PRIORITY . . . . . . . . . . . . 10-38
JOB PROTECTION . . . . . . . . . . . 9-3
JOB RELOCATION . . . . . . . . . . . 9-3
JOB STATUS WORD  . . . . . . . . . . 9-1
JOB STATUS WORD, SECOND  . . . . . . 9-28
JOB STOPCODE . . . . . . . . . . . . 9-9
JOBDAT AREA  . . . . . . . . . . . . 2-3, 4-2, 9-10
JOBDAT SYMBOLS, DELETING . . . . . . 4-5
JOBNAM TABLE OF GETAB JSYS . . . . . 9-3
JOBNAM TABLE WITH SYSGT JSYS . . . . 9-6, 9-8, 9-16
JOBPEK UUO . . . . . . . . . . . . . 10-43
JOBPNM TABLE OF GETAB JSYS . . . . . 9-3, 9-31
JOBRT TABLE OF GETAB JSYS  . . . . . 9-4
JOBS LOGGED IN . . . . . . . . . . . 9-8
JOBSTR UUO . . . . . . . . . . . . . 10-36, 10-43
JOBSTS UUO . . . . . . . . . . . . . 10-44
JOBTTY TABLE OF GETAB JSYS . . . . . 9-5
JP.CCC  PRIVILEGE BIT  . . . . . . . 9-4, 9-33
JP.DPR  PRIVILEGE BIT  . . . . . . . 9-4, 9-33
JP.ENQ  PRIVILEGE BIT  . . . . . . . 9-4, 9-33
JP.HPQ  PRIVILEGE BIT  . . . . . . . 9-4, 9-33
JP.IPC  PRIVILEGE BIT  . . . . . . . 9-4, 9-33
JP.MET  PRIVILEGE BIT  . . . . . . . 9-4, 9-33
JP.NSP  PRIVILEGE BIT  . . . . . . . 9-4, 9-33
JP.POK  PRIVILEGE BIT  . . . . . . . 9-4, 9-33
JP.RTT  PRIVILEGE BIT  . . . . . . . 9-4, 9-33
JP.SPA  PRIVILEGE BIT  . . . . . . . 9-4, 9-33
JP.SPM  PRIVILEGE BIT  . . . . . . . 9-4, 9-33
JS.DFR SPOOLING BIT  . . . . . . . . 9-20
JS.PCP SPOOLING BIT  . . . . . . . . 9-20
JS.PCR SPOOLING BIT  . . . . . . . . 9-20
JS.PLP SPOOLING BIT  . . . . . . . . 9-20
JS.PPL SPOOLING BIT  . . . . . . . . 9-20
JS.PRI SPOOLING BIT  . . . . . . . . 9-20
JSYS ACCUMULATOR CONVENTIONS . . . . 2-2
JSYS ADBRK . . . . . . . . . . . . . 10-71
JSYS BACKOUT CODE  . . . . . . . . . 1-4
JSYS CODING CONVENTIONS  . . . . . . 2-2
JSYS INTERRUPTS  . . . . . . . . . . 1-3
JUMP TO SYSTEM . . . . . . . . . . . 1-1

KDP. UUO . . . . . . . . . . . . . . 10-46
KILL JOB . . . . . . . . . . . . . . 10-32
KILO-CORE TICKS  . . . . . . . . . . 9-4, 9-32
KJOB FUNCTION OF FRCUUO UUO  . . . . 10-32
KMC-11 . . . . . . . . . . . . . . . 10-46
KSYS . . . . . . . . . . . . . . . . 10-70
                                                           Page Index-27
                                                               16 Jan 84


KSYS TIMER . . . . . . . . . . . . . 9-16
KSYS WARNING . . . . . . . . . . . . 6-7

LAST ACCESS DATE . . . . . . . . . . 5-7
LDB  . . . . . . . . . . . . . . . . 9-14
LDB (LINE DATA BLOCK)  . . . . . . . 9-9
LDB (LINE DATA BLOCK) OF OPERATOR TTY  9-7
LDBDCH OFFSET IN LDB . . . . . . . . 9-15
LEVEL D DISK PARAMETERS  . . . . . . 9-18
LGOUT JSYS . . . . . . . . . . . . . 10-32, 10-47
LIGHTS UUO . . . . . . . . . . . . . 10-46
LINE CHARACTERISTICS . . . . . . . . 10-33, 10-67
LINE DATA BLOCK (LDB)  . . . . . . . 9-9
LINE DATA BLOCK (LDB) OF OPERATOR TTY  9-7
LINE NUMBER  . . . . . . . . . . . . 10-37
LINE PRINTER . . . . . . . . . . . . 10-9, 10-13, 10-15
LINES  . . . . . . . . . . . . . . . 9-7
LINK . . . . . . . . . . . . . . . . 2-1, 2-3
LINTAB . . . . . . . . . . . . . . . 9-7
LNMST JSYS . . . . . . . . . . . . . 9-5, 10-15, 10-36, 10-43, 10-59
LOCAL MEMORY REFERENCES  . . . . . . 8-4
LOCAL UUOs . . . . . . . . . . . . . 4-3
LOCATE UUO . . . . . . . . . . . . . 10-46
LOCK UUO . . . . . . . . . . . . . . 10-46
LOCKED STRUCTURE . . . . . . . . . . 10-24
LOGICAL DEVICE NAME  . . . . . . . . 10-12
LOGICAL NAME OF UNIT . . . . . . . . 10-22
LOGICAL NAME TABLE . . . . . . . . . 9-27
LOGICAL NAMES  . . . . . . . . . . . 9-23
LOGICAL REMOTE STATION . . . . . . . 9-19
LOGICAL UNIT NUMBER  . . . . . . . . 10-19
LOGIN COMMAND  . . . . . . . . . . . 9-19, 9-21, 9-24
LOGIN JSYS . . . . . . . . . . . . . 10-3
LOGIN UUO  . . . . . . . . . . . . . 10-47
LOGOUT UUO . . . . . . . . . . . . . 10-47
LOOKUP UUO . . . . . . . . . . . . . 1-1, 5-3 to 5-5, 5-7, 10-28, 10-47
LOST TIME  . . . . . . . . . . . . . 9-16
LOW SEGMENT  . . . . . . . . . . . . 10-47, 10-63
LOW SEGMENT JOB DATA AREA  . . . . . 4-3
LOW-SEGMENT CORE BLOCKS  . . . . . . 9-7
LOW-SEGMENT, FIRST FREE ADDRESS  . . 4-3
LOWER CASE . . . . . . . . . . . . . 10-34, 10-67, 10-86
LPC-11 . . . . . . . . . . . . . . . 10-18
LPT: SPOOLED PRINTER . . . . . . . . 9-21

MACRO  . . . . . . . . . . . . . . . 2-1
MACRO PROGRAMS WITH UUOs . . . . . . 2-1
MACRO-10 . . . . . . . . . . . . . . 1-1
MACRO-20 . . . . . . . . . . . . . . 1-1
MAG TAPE . . . . . . . . . . . . . . 10-49 to 10-50, 10-76
MAGTAPE  . . . . . . . . . . . . . . 10-10, 10-13
MAGTAPE ALLOCATION . . . . . . . . . 9-10
MAGTAPE ERROR REPORTING  . . . . . . 9-10, 9-12
MAGTAPE KDB  . . . . . . . . . . . . 9-14
                                                           Page Index-28
                                                               16 Jan 84


MAGTAPE KDB ADDRESS  . . . . . . . . 9-13
MAGTAPE SERVICE  . . . . . . . . . . 9-11
MAGTAPE UDB  . . . . . . . . . . . . 9-14
MAINTENANCE MODE . . . . . . . . . . 10-78
MASSBUS ERROR REPORTING  . . . . . . 9-11
MAXCOR LINK SWITCH . . . . . . . . . 2-3
MAXIMUM BATCH JOBS . . . . . . . . . 9-8
MAXIMUM JOBS . . . . . . . . . . . . 9-8
MAXIMUM NUMBER OF JOBS/HISEGS  . . . 9-6
MBOX TIME  . . . . . . . . . . . . . 9-30
MDA (MOUNTABLE DEVICE ALLOCATION)  . 9-10, 10-15, 10-20
MDDT% JSYS . . . . . . . . . . . . . 10-62
MEMORY ACCESS LEVELS . . . . . . . . 4-1
MEMORY ALLOCATION  . . . . . . . . . 10-5
MEMORY BLOCKS BIT MAP  . . . . . . . 9-6
MEMORY CYCLE . . . . . . . . . . . . 9-6
MEMORY LIMIT . . . . . . . . . . . . 9-13
MEMORY PARITY ERROR  . . . . . . . . 6-3, 9-16, 10-2
MEMORY PROTECTION VIOLATION  . . . . 6-3, 10-2
MEMORY REFERENCES, ILLEGAL . . . . . 4-1
MEMORY SIZE  . . . . . . . . . . . . 9-16
MEMORY SIZE OF SYSTEM  . . . . . . . 9-5
MERGE. UUO . . . . . . . . . . . . . 10-47
METER% JSYS  . . . . . . . . . . . . 9-11, 9-30, 10-48
METER. UUO . . . . . . . . . . . . . 9-4, 9-33, 10-48
MIC  . . . . . . . . . . . . . . . . 10-85
MINIMUM BATCH JOBS . . . . . . . . . 9-8
MO%AUT FIELD IN MTOPR JSYS . . . . . 10-84
MO%RMT BIT SET BY MTOPR JSYS . . . . 10-67
MO%RMT FIELD RETURNED BY MTOPR JSYS  10-34
MO%RMT FIELD WITH MTOPR JSYS . . . . 10-87
MODE BITS  . . . . . . . . . . . . . 10-11
MODEM  . . . . . . . . . . . . . . . 10-84
MONITOR CALL COUNT . . . . . . . . . 9-32
MONITOR CALL INTERCEPT . . . . . . . 6-6
MONITOR COMMAND NAMES  . . . . . . . 9-19
MONITOR COMMANDS . . . . . . . . . . 1-2
MONITOR DATA ENTRY DEVICE  . . . . . 10-18
MONITOR HIGH SEGMENT . . . . . . . . 9-13
MONITOR INFORMATION, OBTAINING . . . 9-1
MONITOR LOW-SEGMENT CACHED BIT . . . 9-10
MONITOR MODE . . . . . . . . . . . . 1-2
MONITOR TYPE . . . . . . . . . . . . 9-12
MONITOR VERSION NUMBER . . . . . . . 9-7
MONRT. UUO . . . . . . . . . . . . . 10-28, 10-48
MONSYM IN MACRO  . . . . . . . . . . 2-1
MONSYM.UNV . . . . . . . . . . . . . 2-1
MORDN FUNCTION OF MTOPR JSYS . . . . 10-78
MOUNT COMMAND  . . . . . . . . . . . 10-16
MOUNT COUNT  . . . . . . . . . . . . 10-24
MOUNTABLE DEVICE ALLOCATION (MDA)  . 9-10
MOVEI INSTRUCTION WITH EXTENDED ADDRESSING  8-8
MPX CHANNELS . . . . . . . . . . . . 9-12, 10-5
MPX DEVICES  . . . . . . . . . . . . 10-15, 10-17, 10-27, 10-66
                                                           Page Index-29
                                                               16 Jan 84


MRECV JSYS . . . . . . . . . . . . . 7-1, 9-26, 10-42
MS%DIS STATUS BIT IN MSTR JSYS . . . 10-20
MS%PPS FIELD RETURNED BY MSTR JSYS . 10-24
MS%RFL FIELD RETURNED BY MSTR JSYS . 10-23
MS%TYP FIELD RETURNED BY MSTR JSYS . 10-25
MS%WLK FIELD RETURNED BY MSTR JSYS . 10-24
MSEND JSYS . . . . . . . . . . . . . 7-1, 9-24, 9-26, 10-43
MSTIME UUO . . . . . . . . . . . . . 10-48
MSTR JSYS  . . . . . . . . . . . . . 10-19 to 10-25, 10-76
MT%ILW FIELD RETURNED BY GDSTS JSYS  10-51, 10-80
MT.7TR FUNCTION OF MTCHR. UUO  . . . 10-51
MT.AWC FUNCTION OF MTCHR. UUO  . . . 10-50
MT.CRC FUNCTION OF MTCHR. UUO  . . . 10-50
MT.DEN FUNCTION OF MTCHR. UUO  . . . 10-51
MT.NCR FUNCTION OF MTCHR. UUO  . . . 10-50
MT.WLK FUNCTION OF MTCHR. UUO  . . . 10-51
MTA ERROR REPORTING  . . . . . . . . 9-10
MTAID. UUO . . . . . . . . . . . . . 10-49
MTAPE UUO  . . . . . . . . . . . . . 1-1, 10-49
MTBLK. UUO . . . . . . . . . . . . . 10-50
MTBSF. UUO . . . . . . . . . . . . . 10-50
MTBSR. UUO . . . . . . . . . . . . . 10-50
MTCHR. UUO . . . . . . . . . . . . . 10-50 to 10-51, 10-80
MTDEC. UUO . . . . . . . . . . . . . 10-51
MTEOF. UUO . . . . . . . . . . . . . 1-1, 10-52
MTEOT. UUO . . . . . . . . . . . . . 10-52
MTIND. UUO . . . . . . . . . . . . . 10-52
MTLTH. UUO . . . . . . . . . . . . . 10-52
MTOPR JSYS . . . . . . . . . . . . . 6-8, 9-2, 10-13 to 10-15, 10-25, 
                                     10-34, 10-36 to 10-37, 
                                     10-45 to 10-46, 10-49 to 10-54, 
                                     10-67, 10-69, 10-76 to 10-81, 
                                     10-84, 10-86 to 10-89, 10-94
MTREW. UUO . . . . . . . . . . . . . 1-1, 10-53
MTSKF. UUO . . . . . . . . . . . . . 10-53
MTSKR. UUO . . . . . . . . . . . . . 10-53
MTU% JSYS  . . . . . . . . . . . . . 10-49
MTUNL. UUO . . . . . . . . . . . . . 10-53
MTWAT. UUO . . . . . . . . . . . . . 10-54
MULTI-ACCESS MODE  . . . . . . . . . 10-28
MUTIL JSYS . . . . . . . . . . . . . 6-8, 7-2, 9-25 to 9-27, 9-29, 10-37
MVHDR. UUO . . . . . . . . . . . . . 10-54

NCPGS TABLE OF GETAB JSYS  . . . . . 9-6, 9-13, 9-15 to 9-16, 9-26
NETWORK DEVICE NAME  . . . . . . . . 9-11
NETWORK NODE DATA BLOCK  . . . . . . 9-13
NETWORK PERFORMANCE DATA . . . . . . 9-32
NETWORK TOPOLOGY CHANGE  . . . . . . 6-8
NODE DATA BLOCK  . . . . . . . . . . 9-34
NODE DATA BLOCK, NETWORK . . . . . . 9-13
NODE JSYS  . . . . . . . . . . . . . 10-54
NODE NUMBER  . . . . . . . . . . . . 10-46
NODE. UUO  . . . . . . . . . . . . . 10-54
NOINITIAL LINK SWITCH  . . . . . . . 2-3, 4-5
                                                           Page Index-30
                                                               16 Jan 84


NON-BLOCKING INPUT/OUTPUT OPERATIONS  5-8
NON-EXISTENT MEMORY LOCATION . . . . 6-7
NON-ZERO SECTIONS  . . . . . . . . . 8-2
NONEXISTENT MEMORY . . . . . . . . . 6-3, 10-2
NONSUPERSEDING ENTER CALL  . . . . . 9-12
NORMAL MODE  . . . . . . . . . . . . 10-12
NOUT JSYS  . . . . . . . . . . . . . 10-57, 10-83
NSP. UUO . . . . . . . . . . . . . . 10-54
NSWPGS TABLE OF GETAB JSYS . . . . . 9-5
NTMAN% JSYS  . . . . . . . . . . . . 10-54
NXMTAB . . . . . . . . . . . . . . . 9-13

OBTAINING MONITOR INFORMATION  . . . 9-1
ODCNV DATE . . . . . . . . . . . . . 9-5
ODCNV JSYS . . . . . . . . . . . . . 9-5, 9-8 to 9-9, 10-7, 10-48, 10-82
ODTIM JSYS . . . . . . . . . . . . . 10-7, 10-49, 10-57, 10-84
ODTNC JSYS . . . . . . . . . . . . . 10-7, 10-49
OF%APP OPTION BIT OF OPENF JSYS  . . 10-29
OF%RD OPTION BIT OF OPENF JSYS . . . 10-28
OF%THW OPTION BIT OF OPENF JSYS  . . 10-28
OF%WR OPTION BIT OF OPENF JSYS . . . 10-28
OFF-LINE . . . . . . . . . . . . . . 10-23
ONCE-ONLY  . . . . . . . . . . . . . 9-18
OPEN UUO . . . . . . . . . . . . . . 1-1, 5-3 to 5-5, 10-11, 10-41, 
                                     10-55
OPENF JSYS . . . . . . . . . . . . . 5-5, 9-19, 9-21, 9-24, 10-5, 
                                     10-27 to 10-29, 10-42, 10-55, 
                                     10-83 to 10-84, 10-89 to 10-90
OPERATOR PRIVILEGES  . . . . . . . . 9-34
OPERATOR TERMINAL  . . . . . . . . . 10-67
OPERATOR TTY . . . . . . . . . . . . 9-6
OPERATOR'S TERMINAL  . . . . . . . . 10-33
OPR PROGRAM  . . . . . . . . . . . . 10-71 to 10-72
OPSER  . . . . . . . . . . . . . . . 1-2
OTHUSR UUO . . . . . . . . . . . . . 10-55
OUT UUO  . . . . . . . . . . . . . . 1-1, 10-30, 10-55, 10-57
OUTBUF UUO . . . . . . . . . . . . . 10-56
OUTCHR UUO . . . . . . . . . . . . . 10-56
OUTPUT DONE  . . . . . . . . . . . . 6-5
OUTPUT ERROR . . . . . . . . . . . . 6-5
OUTPUT IS AVAILABLE FROM TERMINAL  . 9-2, 10-44
OUTPUT UUO . . . . . . . . . . . . . 5-3, 5-5, 10-30, 10-57
OUTSTR UUO . . . . . . . . . . . . . 1-1, 10-56 to 10-57, 10-83
OVERFLOW . . . . . . . . . . . . . . 10-2
OVERFLOW ERROR . . . . . . . . . . . 6-3
OVERLAY STRUCTURE ROOT LINK  . . . . 4-4
OWNER IDENTIFICATION . . . . . . . . 10-23
OWNER PROJECT-PROGRAMMER NUMBER  . . 10-23

PA%PEX FIELD RETURNED BY RPACS JSYS  10-58
PA1050 . . . . . . . . . . . . . . . 1-1, 3-1, 10-1
PA1050 DIGITAL SUPPORT . . . . . . . 3-1
PA1050 MERGING . . . . . . . . . . . 3-2
PA1050 NEW VERSION . . . . . . . . . 3-2
                                                           Page Index-31
                                                               16 Jan 84


PA1050 OPERATION . . . . . . . . . . 3-1
PA611P . . . . . . . . . . . . . . . 10-18
PA611R . . . . . . . . . . . . . . . 10-17
PAGE ACCESS LEVELS . . . . . . . . . 4-1
PAGE FAULT . . . . . . . . . . . . . 4-2
PAGE FAULT HANDLER . . . . . . . . . 4-3
PAGE LIMITS  . . . . . . . . . . . . 9-26
PAGE MAP FOR JOB . . . . . . . . . . 9-26
PAGE NUMBER FOR JOB  . . . . . . . . 9-26
PAGE NUMBER OF HIGH SEGMENT  . . . . 4-3
PAGE TRAP INFORMATION  . . . . . . . 9-28
PAGE. UUO  . . . . . . . . . . . . . 4-1, 10-57 to 10-59
PAGES IN STRUCTURE . . . . . . . . . 10-22
PAGING RATE  . . . . . . . . . . . . 9-28
PAPER TAPE . . . . . . . . . . . . . 10-34, 10-85, 10-87
PAPERTAPE PUNCH  . . . . . . . . . . 10-10
PAPERTAPE READER . . . . . . . . . . 10-10
PARITY ERROR . . . . . . . . . . . . 9-16
PARITY OF TAPE . . . . . . . . . . . 10-79
PARSING COMMANDS . . . . . . . . . . 5-4
PATH. UUO  . . . . . . . . . . . . . 10-59
PBIN JSYS  . . . . . . . . . . . . . 10-39 to 10-40, 10-84 to 10-85
PBOUT JSYS . . . . . . . . . . . . . 10-42, 10-56, 10-83
PC-11(P) . . . . . . . . . . . . . . 10-18
PC11(R)  . . . . . . . . . . . . . . 10-17
PCDSC INTERRUPT CONDITION  . . . . . 6-7
PDB (PROCESS DATA BLOCK) . . . . . . 9-8
PDV (PROGRAM DATA VECTOR)  . . . . . 2-3, 4-5, 4-7
PEEK JSYS  . . . . . . . . . . . . . 10-59, 10-74
PEEK UUO . . . . . . . . . . . . . . 9-4, 9-33, 10-59
PERF. UUO  . . . . . . . . . . . . . 10-60
PERFORMANCE DATA . . . . . . . . . . 10-48
PHYSICAL CORE ALLOCATION . . . . . . 9-19
PHYSICAL MEMORY  . . . . . . . . . . 4-1
PHYSICAL MEMORY LOCATION, HIGHEST  . 4-3
PHYSICAL PAGE LIMITS . . . . . . . . 9-26
PI TIME  . . . . . . . . . . . . . . 9-11
PID FOR [SYSTEM]INFO . . . . . . . . 9-27
PID MASK . . . . . . . . . . . . . . 9-25
PID OF [SYSTEM]GOPHER  . . . . . . . 9-25
PID OF [SYSTEM]IPCC  . . . . . . . . 9-25
PID OF SYSTEMWIDE INFORMATION  . . . 9-25
PID TABLE  . . . . . . . . . . . . . 9-29
PID TABLE LENGTH . . . . . . . . . . 9-25
PIINI. UUO . . . . . . . . . . . . . 10-60
PIJBI UUO  . . . . . . . . . . . . . 6-8
PIJBI. UUO . . . . . . . . . . . . . 10-60
PIRST. UUO . . . . . . . . . . . . . 10-61
PISAV. UUO . . . . . . . . . . . . . 10-61
PISYS. . . . . . . . . . . . . . . . 9-10, 9-12
PISYS. UUO . . . . . . . . . . . . . 10-61
PJOB UUO . . . . . . . . . . . . . . 10-62
PLEASE PROGRAM . . . . . . . . . . . 9-6
PLOCK JSYS . . . . . . . . . . . . . 10-46, 10-92
                                                           Page Index-32
                                                               16 Jan 84


PLOTTER  . . . . . . . . . . . . . . 10-17
PLPT: PHYSICAL PRINTER . . . . . . . 9-21
PLTTYP LINK SWITCH . . . . . . . . . 2-3
PMAP . . . . . . . . . . . . . . . . 10-63
PMAP JSYS  . . . . . . . . . . . . . 5-6, 10-14, 10-29, 10-39 to 10-40, 
                                     10-43, 10-55 to 10-56, 
                                     10-58 to 10-59, 10-82, 
                                     10-92 to 10-93
POKE. UUO  . . . . . . . . . . . . . 9-4, 9-7, 9-33, 10-62
POSITION WAIT QUEUE  . . . . . . . . 10-23
PPNST JSYS . . . . . . . . . . . . . 5-2
PRIVATE FILE STRUCTURE . . . . . . . 10-24
PRIVILEGE BITS FOR JOB . . . . . . . 9-4
PROBLEM ON DEVICE  . . . . . . . . . 6-4
PROCESS  . . . . . . . . . . . . . . 1-2
PROCESS COMMUNICATIONS . . . . . . . 9-24
PROCESS DATA BLOCK . . . . . . . . . 9-34
PROCESS DATA BLOCK (PDB) . . . . . . 9-8
PROCESS STATE BLOCK (PSB)  . . . . . 4-6 to 4-7
PROGRAM COUNTER, USER-MODE . . . . . 4-4
PROGRAM DATA VECTOR (PDV)  . . . . . 2-3, 4-5, 4-7
PROGRAM NAME . . . . . . . . . . . . 9-3, 10-68
PROGRAM VERSION NUMBER . . . . . . . 4-4
PROGRAMMING CONCEPTS . . . . . . . . 1-1
PROJECT-PROGRAMMER NUMBER  . . . . . 5-7, 9-3, 10-3, 10-13, 10-35, 10-55
PROJECT-PROGRAMMER NUMBER IN FILE SPEC  5-1
PROJECT-PROGRAMMER NUMBERS . . . . . 5-2
PROTECTION CODE FOR FILE . . . . . . 5-7
PROTECTION CODE IN FILE SPEC . . . . 5-1
PROTECTION CODES . . . . . . . . . . 5-3
PS.RDF INTERRUPT CONDITION . . . . . 6-5
PS.RDO INTERRUPT CONDITION . . . . . 6-5
PS.REF INTERRUPT CONDITION . . . . . 6-5
PS.RID INTERRUPT CONDITION . . . . . 6-5
PS.RIE INTERRUPT CONDITION . . . . . 6-5
PS.ROD INTERRUPT CONDITION . . . . . 6-5
PS.ROE INTERRUPT CONDITION . . . . . 6-5
PS.ROL INTERRUPT CONDITION . . . . . 6-5
PS.RQE INTERRUPT CONDITION . . . . . 6-5
PS.RRC INTERRUPT CONDITION . . . . . 6-5
PS.RWT INTERRUPT CONDITION . . . . . 6-5
PS: SYSTEM DEVICE  . . . . . . . . . 9-5
PSB (PROCESS STATE BLOCK)  . . . . . 4-6 to 4-7
PSEUDO-TERMINAL  . . . . . . . . . . 1-2, 9-19, 9-21, 9-24, 10-5, 10-33, 
                                     10-37, 10-67
PSEUDO-TERMINAL INTERRUPTS . . . . . 6-8
PSEUDO-TERMINALS . . . . . . . . . . 9-7
PSOUT JSYS . . . . . . . . . . . . . 10-56 to 10-57, 10-83
PTY NUMBERS  . . . . . . . . . . . . 9-6
PTY TABLE  . . . . . . . . . . . . . 9-15
PTYPAR TABLE OF GETAB JSYS . . . . . 9-6 to 9-7
PUBLIC STRUCTURE . . . . . . . . . . 10-24
PUSHDOWN LIST OVERFLOW . . . . . . . 6-3, 6-6, 9-16, 10-2
PUSHDOWN OVERFLOW  . . . . . . . . . 10-68
                                                           Page Index-33
                                                               16 Jan 84


PVBLOCK LINK SWITCH  . . . . . . . . 2-3
PVDATA LINK SWITCH . . . . . . . . . 2-3

QUEUE% JSYS  . . . . . . . . . . . . 10-62
QUEUE. UUO . . . . . . . . . . . . . 7-1, 7-3, 10-62
QUEUES, SCHEDULER  . . . . . . . . . 9-22
QUEUES, SWAPPER  . . . . . . . . . . 9-22
QUOTA EXCEEDED . . . . . . . . . . . 6-5
QUOTA EXHAUSTED  . . . . . . . . . . 6-4

RANGE OF GETTAB TABLE  . . . . . . . 9-33
RBEST LOOKUP/ENTER FIELD . . . . . . 5-8
RDTTY JSYS . . . . . . . . . . . . . 10-39, 10-41, 10-84
READ BACKWARDS FOR TAPE  . . . . . . 10-79
READ-ONLY PAGE ACCESS  . . . . . . . 4-1, 5-6
REAL TIME  . . . . . . . . . . . . . 9-21
REAL TIME TRAP . . . . . . . . . . . 9-4, 9-33
REALTIME . . . . . . . . . . . . . . 10-65
REALTIME DEVICES . . . . . . . . . . 9-9
REASSI UUO . . . . . . . . . . . . . 10-62
REASSIGN DEVICE  . . . . . . . . . . 10-62
RECON. UUO . . . . . . . . . . . . . 10-63
REEL IDENTIFICATION  . . . . . . . . 10-80
REENTER ADDRESS  . . . . . . . . . . 4-4 to 4-5
REENTRANT CODE . . . . . . . . . . . 4-2
RELD JSYS  . . . . . . . . . . . . . 10-12, 10-62
RELEAS UUO . . . . . . . . . . . . . 5-3, 10-31, 10-63
RELEASE UUO  . . . . . . . . . . . . 1-1
RELOAD . . . . . . . . . . . . . . . 9-23
RELOAD .CCL  . . . . . . . . . . . . 9-13
RELOAD REASON  . . . . . . . . . . . 9-7
REMAP UUO  . . . . . . . . . . . . . 10-63
REMOTE DATA ENTRY DEVICE . . . . . . 10-18
REMOTE STATION, LOGICAL  . . . . . . 9-19
REMOTE TERMINAL  . . . . . . . . . . 10-34, 10-67
RENAME FILE  . . . . . . . . . . . . 10-30, 10-64
RENAME UUO . . . . . . . . . . . . . 1-1, 10-64
RESCAN UUO . . . . . . . . . . . . . 10-64, 10-84
RESDV. UUO . . . . . . . . . . . . . 10-64
RESET CHANNEL  . . . . . . . . . . . 10-64
RESET JSYS . . . . . . . . . . . . . 10-28, 10-65
RESET UUO  . . . . . . . . . . . . . 10-65
RESET UUO AND JSYS . . . . . . . . . 2-2
RESET% JSYS  . . . . . . . . . . . . 2-2
RESOLUTION OF RUNTIME CLOCK  . . . . 9-8
RESOURCE (ENQ/DEQ) INTERRUPT . . . . 6-8
RESPONSE COUNTER TABLE . . . . . . . 9-22
REWIND TAPE  . . . . . . . . . . . . 10-53, 10-76
RFMOD JSYS . . . . . . . . . . . . . 9-2, 10-34, 10-36, 10-45, 
                                     10-85 to 10-87, 10-89
RFPOS JSYS . . . . . . . . . . . . . 10-86
RFTAD JSYS . . . . . . . . . . . . . 5-7
RIB  . . . . . . . . . . . . . . . . 5-7
RIB HAS CHANGED  . . . . . . . . . . 6-5
                                                           Page Index-34
                                                               16 Jan 84


RIB VERSION NUMBER . . . . . . . . . 2-3
RIN JSYS . . . . . . . . . . . . . . 10-29, 10-39, 10-92
RIR JSYS . . . . . . . . . . . . . . 10-61, 10-93
RLJFN JSYS . . . . . . . . . . . . . 10-31, 10-63
RMAP JSYS  . . . . . . . . . . . . . 9-31
RNAMF JSYS . . . . . . . . . . . . . 10-30, 10-64
ROOT LINK FOR OVERLAY STRUCTURE  . . 4-4
ROUT JSYS  . . . . . . . . . . . . . 10-30, 10-55, 10-93
RPACS JSYS . . . . . . . . . . . . . 10-58
RPCAP JSYS . . . . . . . . . . . . . 9-4, 9-33
RSCAN JSYS . . . . . . . . . . . . . 10-64, 10-84
RTTRP UUO  . . . . . . . . . . . . . 9-4, 9-33, 10-65
RUN COMMAND  . . . . . . . . . . . . 4-7
RUN FILE SPECIFICATION . . . . . . . 9-31 to 9-32
RUN QUEUE TIME . . . . . . . . . . . 9-23
RUN TIME . . . . . . . . . . . . . . 9-4, 9-11
RUN UUO  . . . . . . . . . . . . . . 10-65, 10-82
RUNCOR LINK SWITCH . . . . . . . . . 2-3
RUNTIM UUO . . . . . . . . . . . . . 10-66
RUNTIME CLOCK RESOLUTION . . . . . . 9-8
RUNTM JSYS . . . . . . . . . . . . . 9-4, 10-66
RWSET JSYS . . . . . . . . . . . . . 10-58

SACCT JSYS . . . . . . . . . . . . . 7-3
SACTF JSYS . . . . . . . . . . . . . 10-1
SAT BLOCK  . . . . . . . . . . . . . 10-24
SAVE COMMAND . . . . . . . . . . . . 9-11
SAVE JSYS  . . . . . . . . . . . . . 10-6, 10-32
SAVE LINK SWITCH . . . . . . . . . . 2-3
SCANNER DATA . . . . . . . . . . . . 9-24
SCHED. UUO . . . . . . . . . . . . . 10-66
SCHEDULER  . . . . . . . . . . . . . 9-9 to 9-10, 10-69
SCHEDULER CLASS  . . . . . . . . . . 9-28
SCHEDULER CLASS QUOTA  . . . . . . . 9-29
SCHEDULER PERFORMANCE  . . . . . . . 9-32
SCHEDULER QUEUES . . . . . . . . . . 9-22
SCHEDULER STATISTICS . . . . . . . . 9-28
SDSTS JSYS . . . . . . . . . . . . . 10-5, 10-69, 10-80
SEARCH LIST  . . . . . . . . . . . . 10-75
SEARCH MONSYM IN MACRO . . . . . . . 2-1
SEARCH UUOSYM IN MACRO . . . . . . . 2-1
SECTION 0  . . . . . . . . . . . . . 8-2
SECTION 1  . . . . . . . . . . . . . 8-2
SECTION NUMBER . . . . . . . . . . . 8-1
SEEK UUO . . . . . . . . . . . . . . 10-31, 10-66
SEGMENT DEVICE OR STRUCTURE  . . . . 9-19
SEND ALL MESSAGE . . . . . . . . . . 9-24
SENSE. UUO . . . . . . . . . . . . . 10-5, 10-66
SERIAL NUMBER  . . . . . . . . . . . 9-6
SESSION RECORD OF USAGE FILE . . . . 7-3
SET ACCOUNT COMMAND  . . . . . . . . 7-3
SET COMMAND NAMES  . . . . . . . . . 9-21
SET DEFAULT COMMANDS . . . . . . . . 9-34
SET NO UUO-SIMULATION COMMAND  . . . 3-1
                                                           Page Index-35
                                                               16 Jan 84


SET TRAP FILE-OPENINGS . . . . . . . 10-70
SET TTY COMMAND  . . . . . . . . . . 9-24
SET WATCH  . . . . . . . . . . . . . 9-20, 10-70
SET WATCH COMMAND  . . . . . . . . . 9-26
SETDDT UUO . . . . . . . . . . . . . 10-67
SETJB JSYS . . . . . . . . . . . . . 10-13, 10-72, 10-78 to 10-80
SETLCH UUO . . . . . . . . . . . . . 10-67 to 10-68
SETNAM UUO . . . . . . . . . . . . . 10-68
SETNM JSYS . . . . . . . . . . . . . 10-68
SETPOV UUO . . . . . . . . . . . . . 10-68
SETSN JSYS . . . . . . . . . . . . . 10-68
SETSTS UUO . . . . . . . . . . . . . 10-30, 10-69
SETUUO UUO . . . . . . . . . . . . . 10-69 to 10-72
SETUWP UUO . . . . . . . . . . . . . 10-72
SEVEC JSYS . . . . . . . . . . . . . 4-6
SFMOD JSYS . . . . . . . . . . . . . 10-42, 10-68 to 10-69, 
                                     10-83 to 10-84, 10-89 to 10-90
SFPTR JSYS . . . . . . . . . . . . . 10-29 to 10-30, 10-92 to 10-93
SFTAD JSYS . . . . . . . . . . . . . 5-7
SHUTDOWN OF SYSTEM . . . . . . . . . 9-16
SIBE JSYS  . . . . . . . . . . . . . 10-34, 10-40 to 10-41, 10-73, 
                                     10-83, 10-90
SIBT JSYS  . . . . . . . . . . . . . 10-89
SIN JSYS . . . . . . . . . . . . . . 5-5 to 5-6, 10-14 to 10-15, 10-29, 
                                     10-39, 10-92
SINGLE-ACCESS FILE STRUCTURE . . . . 10-24
SINR JSYS  . . . . . . . . . . . . . 10-39
SIR JSYS . . . . . . . . . . . . . . 6-1
SJPRI JSYS . . . . . . . . . . . . . 10-38, 10-43
SKED% JSYS . . . . . . . . . . . . . 9-9, 9-11, 9-13, 9-22, 
                                     9-28 to 9-29, 10-38, 10-43, 10-66, 
                                     10-69, 10-91
SKPINC UUO . . . . . . . . . . . . . 10-73
SKPINL UUO . . . . . . . . . . . . . 10-73
SKRJP FUNCTION OF SKED% JSYS . . . . 9-28
SLAVE  . . . . . . . . . . . . . . . 10-86
SLEEP UUO  . . . . . . . . . . . . . 10-73
SN%GTS  HIGH SEGMENT PARAMETER BIT . 9-17
SN%LOK  HIGH SEGMENT PARAMETER BIT . 9-17
SN%MDL  HIGH SEGMENT PARAMETER BIT . 9-17
SN%NCS  HIGH SEGMENT PARAMETER BIT . 9-17
SN%SHR  HIGH SEGMENT PARAMETER BIT . 9-17
SN%SPY  HIGH SEGMENT PARAMETER BIT . 9-17
SN%UWP  HIGH SEGMENT PARAMETER BIT . 9-17
SNAMES TABLE WITH SYSGT JSYS . . . . 9-6
SNBLKS TABLE OF GETAB JSYS . . . . . 9-17
SNOOP% JSYS  . . . . . . . . . . . . 9-1, 10-48, 10-60, 10-62, 10-73
SNOOP. UUO . . . . . . . . . . . . . 9-14, 10-73
SOBE JSYS  . . . . . . . . . . . . . 9-2, 10-44, 10-83, 10-85
SOFTWARE CONFIGURATION FLAGS . . . . 9-10
SOFTWARE INTERRUPT FACILITY  . . . . 5-8, 10-37, 10-60 to 10-61, 10-88
SOFTWARE INTERRUPT SYSTEM  . . . . . 1-3, 4-2, 6-1, 6-4, 9-12, 10-2, 
                                     10-8, 10-38, 10-60 to 10-61, 10-93
SOUT JSYS  . . . . . . . . . . . . . 5-5, 10-14 to 10-15, 10-30, 10-55, 
                                                           Page Index-36
                                                               16 Jan 84


                                     10-83, 10-93
SOUTR JSYS . . . . . . . . . . . . . 10-56
SPACS JSYS . . . . . . . . . . . . . 10-58, 10-72
SPECIFICATIONS, FILE . . . . . . . . 5-1
SPFLTS TABLE OF GETAB JSYS . . . . . 9-17
SPOOL JSYS . . . . . . . . . . . . . 10-69 to 10-70, 10-74
SPOOLING . . . . . . . . . . . . . . 9-20, 10-15, 10-69, 10-71, 10-74
SPPRM. UUO . . . . . . . . . . . . . 10-74
SPRIW JSYS . . . . . . . . . . . . . 10-43
SPY UUO  . . . . . . . . . . . . . . 9-4, 9-33, 10-74
SSAVE COMMAND  . . . . . . . . . . . 9-11
SSAVE JSYS . . . . . . . . . . . . . 10-32
SSAVE LINK SWITCH  . . . . . . . . . 2-3
SSIZE TABLE OF GETAB JSYS  . . . . . 9-17
ST%CP1 DEBUG STATUS BIT  . . . . . . 9-9
ST%DBG DEBUG STATUS BIT  . . . . . . 9-9
ST%EER SOFTWARE CONFIGURATION BIT  . 9-11
ST%ENQ SOFTWARE CONFIGURATION BIT  . 9-11
ST%ERT SOFTWARE CONFIGURATION FLAG . 9-11
ST%EXE SOFTWARE CONFIGURATION FLAG . 9-11
ST%GAL SOFTWARE CONFIGURATION FLAG . 9-11
ST%IPC SOFTWARE CONFIGURATION FLAG . 9-12
ST%ITA SOFTWARE CONFIGURATION BIT  . 9-11
ST%LSC SOFTWARE CONFIGURATION BIT  . 9-10
ST%MBE SOFTWARE CONFIGURATION FLAG . 9-11
ST%MDA SOFTWARE CONFIGURATION BIT  . 9-10
ST%MER SOFTWARE CONFIGURATION FLAG . 9-12
ST%MSG SOFTWARE CONFIGURATION FLAG . 9-12
ST%NAR DEBUG STATUS BIT  . . . . . . 9-9
ST%NCS SOFTWARE CONFIGURATION BIT  . 9-10
ST%NDN SOFTWARE CONFIGURATION BIT  . 9-11
ST%NER SOFTWARE CONFIGURATION BIT  . 9-10
ST%NJN SOFTWARE CONFIGURATION FLAG . 9-11
ST%NSE SOFTWARE CONFIGURATION FLAG . 9-12
ST%PSI SOFTWARE CONFIGURATION FLAG . 9-12
ST%RDC DEBUG STATUS BIT  . . . . . . 9-9
ST%RJE DEBUG STATUS BIT  . . . . . . 9-9
ST%SCV SOFTWARE CONFIGURATION BIT  . 9-10
ST%SHC SOFTWARE CONFIGURATION BIT  . 9-11
ST%SSP SOFTWARE CONFIGURATION FLAG . 9-12
ST%TAP SOFTWARE CONFIGURATION BIT  . 9-11
ST%VMS SOFTWARE CONFIGURATION FLAG . 9-12
ST%XPI SOFTWARE CONFIGURATION FLAG . 9-11
STACKS WITH EXTENDED ADDRESS . . . . 8-8
STAD JSYS  . . . . . . . . . . . . . 10-69 to 10-70
START ADDRESS  . . . . . . . . . . . 4-3, 4-5
STATO UUO  . . . . . . . . . . . . . 1-1, 10-74
STATUS BITS FOR DEVICE . . . . . . . 10-5
STATUS CODE FOR UNIT . . . . . . . . 10-24
STATZ UUO  . . . . . . . . . . . . . 1-1, 10-74
STI JSYS . . . . . . . . . . . . . . 10-32, 10-85
STIMES TABLE OF GETAB JSYS . . . . . 9-17
STOP JOB . . . . . . . . . . . . . . 10-31
STOPCODE . . . . . . . . . . . . . . 9-9
                                                           Page Index-37
                                                               16 Jan 84


STOPCODE INFORMATION . . . . . . . . 9-23
STORAGE ALLOCATION TABLE . . . . . . 10-22
STPAR JSYS . . . . . . . . . . . . . 10-42, 10-67 to 10-68, 
                                     10-83 to 10-84, 10-86 to 10-87, 
                                     10-89 to 10-90
STPPN JSYS . . . . . . . . . . . . . 5-2, 10-13
STRUCTURE NAME . . . . . . . . . . . 10-19, 10-21 to 10-22
STRUUO JSYS  . . . . . . . . . . . . 10-59
STRUUO UUO . . . . . . . . . . . . . 10-75
STSTS JSYS . . . . . . . . . . . . . 10-69
STTYP JSYS . . . . . . . . . . . . . 10-67, 10-87, 10-89
SUB-PROCESS  . . . . . . . . . . . . 1-2
SUB-PROCESS, SHARING MEMORY  . . . . 1-2
SUPER I/O  . . . . . . . . . . . . . 10-75
SUPER-I/O  . . . . . . . . . . . . . 10-30
SUPERIOR PROCESS . . . . . . . . . . 1-2
SUPERSEDE FILE . . . . . . . . . . . 10-28
SUSET. UUO . . . . . . . . . . . . . 10-75
SWAP PAGE  . . . . . . . . . . . . . 10-58
SWAPPER QUEUES . . . . . . . . . . . 9-22
SWAPPING . . . . . . . . . . . . . . 10-22 to 10-23
SWAPPING DATA  . . . . . . . . . . . 9-17
SWAPPING PARAMETERS  . . . . . . . . 9-5
SWAPPING UNIT  . . . . . . . . . . . 10-20
SWAPPING UNITS . . . . . . . . . . . 9-12
SWITCH UUO . . . . . . . . . . . . . 10-75
SWITCHES ON CONSOLE  . . . . . . . . 10-75
SWTRP% JSYS  . . . . . . . . . . . . 6-1, 6-3, 6-6, 10-2
SYERR JSYS . . . . . . . . . . . . . 10-6
SYMBOL TABLE . . . . . . . . . . . . 4-3
SYSGT JSYS . . . . . . . . . . . . . 9-6, 9-8, 9-16, 9-18, 9-33
SYSPHY UUO . . . . . . . . . . . . . 10-76
SYSSTR UUO . . . . . . . . . . . . . 10-76
SYSTAB OF GETAB JSYS . . . . . . . . 9-32
SYSTAB TABLE OF GETAB JSYS . . . . . 9-5, 9-13, 9-16, 9-18, 9-22, 10-48, 
                                     10-60
SYSTAT TABLE OF GETAB JSYS . . . . . 9-16 to 9-17, 9-28
SYSTEM CONFIGURATION TABLE . . . . . 9-5
SYSTEM CREATION DATE . . . . . . . . 9-5
SYSTEM DEVICE  . . . . . . . . . . . 9-5
SYSTEM DUMP LIST . . . . . . . . . . 10-20, 10-23
SYSTEM ERROR COUNT . . . . . . . . . 4-3
SYSTEM GENERATION DATE/TIME  . . . . 9-5
SYSTEM MEMORY SIZE . . . . . . . . . 9-5
SYSTEM NAME  . . . . . . . . . . . . 9-5
SYSTEM SHUTDOWN  . . . . . . . . . . 9-16
SYSTEM UPTIME  . . . . . . . . . . . 9-14
SYSVER TABLE OF GETAB JSYS . . . . . 9-5, 9-7, 9-9, 9-12, 10-32

TAB CAPABILITY . . . . . . . . . . . 10-34, 10-68, 10-86
TAPE LABELS  . . . . . . . . . . . . 10-77
TAPE MARK  . . . . . . . . . . . . . 10-77
TAPOP. UUO . . . . . . . . . . . . . 10-76 to 10-81
TAPSER . . . . . . . . . . . . . . . 9-11
                                                           Page Index-38
                                                               16 Jan 84


TEMPORARY FILES  . . . . . . . . . . 5-2
TERM COMMAND . . . . . . . . . . . . 9-24
TERMINAL ELEMENT . . . . . . . . . . 10-84
TERMINAL INPUT BUFFER  . . . . . . . 10-4
TERMINAL OUTPUT BUFFER . . . . . . . 10-4
TERMINAL OUTPUT IS AVAILABLE . . . . 9-2, 10-44
TERMINAL TYPE  . . . . . . . . . . . 10-10, 10-17, 10-89
TERMINAL TYPES . . . . . . . . . . . 9-33
TEXTI JSYS . . . . . . . . . . . . . 10-39, 10-41, 10-57, 10-83 to 10-84
TFORK JSYS . . . . . . . . . . . . . 6-6, 9-20, 9-26, 10-70
THIBR JSYS . . . . . . . . . . . . . 6-8, 10-38, 10-60
TICKPS TABLE OF GETAB JSYS . . . . . 9-4 to 9-5, 9-8, 10-82
TIDY SETTING . . . . . . . . . . . . 10-88
TIME . . . . . . . . . . . . . . . . 10-48
TIME JSYS  . . . . . . . . . . . . . 9-14, 9-16, 10-49
TIME LIMIT . . . . . . . . . . . . . 9-21
TIME LIMIT EXCEEDED  . . . . . . . . 6-4, 6-6
TIME OF DAY  . . . . . . . . . . . . 9-5
TIME ZONE OFFSET . . . . . . . . . . 9-9
TIMER JSYS . . . . . . . . . . . . . 10-70
TIMER UUO  . . . . . . . . . . . . . 10-82
TLINK JSYS . . . . . . . . . . . . . 10-87
TM10 . . . . . . . . . . . . . . . . 10-52
TMON JSYS  . . . . . . . . . . . . . 9-6, 9-9 to 9-10
TMPCOR UUO . . . . . . . . . . . . . 10-82
TRACK STATUS BIT . . . . . . . . . . 10-80
TRANSFER WAIT QUEUE  . . . . . . . . 10-23
TRANSLATE COMMAND  . . . . . . . . . 5-2
TRAP HANDLING  . . . . . . . . . . . 6-1, 10-60
TRAP SERVICES  . . . . . . . . . . . 10-2
TRAPS  . . . . . . . . . . . . . . . 10-93
TRMNO. UUO . . . . . . . . . . . . . 10-82
TRMOP. UUO . . . . . . . . . . . . . 10-82 to 10-90
TRPJEN UUO . . . . . . . . . . . . . 10-90
TRPSET UUO . . . . . . . . . . . . . 10-91
TSK. UUO . . . . . . . . . . . . . . 10-91
TT%CAR FIELD RETURNED BY RFMOD JSYS  10-34, 10-85
TT%DUM FIELD RETURNED BY RFMOD JSYS  10-34, 10-87
TT%DUM FIELD SET BY STPAR JSYS . . . 10-67, 10-87
TT%ECM BIT RETURNED BY RFMOD JSYS  . 10-34
TT%ECM FIELD READ BY RFMOD JSYS  . . 10-89
TT%ECM FIELD RETURNED BY RFMOD JSYS  10-86
TT%ECM FIELD SET BY STPAR JSYS . . . 10-68, 10-86, 10-89
TT%ECO BIT RETURNED BY RFMOD JSYS  . 9-2, 10-45
TT%ECO FIELD READ BY RFMOD JSYS  . . 10-89
TT%ECO FIELD SET BY SFMOD JSYS . . . 10-68, 10-89
TT%LCA FIELD RETURNED BY RFMOD JSYS  10-34
TT%LCA FIELD SET BY STPAR JSYS . . . 10-67
TT%LEN FIELD RETURNED BY RFMOD JSYS  10-87
TT%LEN FIELD SET BY STPAR JSYS . . . 10-87
TT%LIC FIELD RETURNED BY RFMOD JSYS  10-86
TT%LIC FIELD SET BY STPAR JSYS . . . 10-67, 10-86
TT%MFF FIELD RETURNED BY RFMOD JSYS  10-86
TT%MFF FIELD SET BY STPAR JSYS . . . 10-86
                                                           Page Index-39
                                                               16 Jan 84


TT%OSP FIELD RETURNED BY RFMOD JSYS  10-89
TT%OSP FIELD SET BY RFMOD JSYS . . . 10-89
TT%TAB FIELD RETURNED BY RFMOD JSYS  10-34, 10-86
TT%TAB FIELD SET BY STPAR JSYS . . . 10-68, 10-86
TT%UOC FIELD RETURNED BY RFMOD JSYS  10-86
TT%UOC FIELD SET BY STPAR JSYS . . . 10-67, 10-86
TT%WAK FIELD RETURNED BY RFMOD JSYS  9-2, 10-45
TT%WAK FUNCTION OF SFMOD JSYS  . . . 10-38
TT%WID FIELD RETURNED BY RFMOD JSYS  10-86
TT%WID FIELD SET BY STPAR JSYS . . . 10-86
TTCALL UUO . . . . . . . . . . . . . 1-1, 10-91
TTY CHUNKS . . . . . . . . . . . . . 9-9
TTY DEVICE DATA BLOCK  . . . . . . . 9-9
TTY FREE CHUNKS  . . . . . . . . . . 9-7
TWAKE JSYS . . . . . . . . . . . . . 6-8, 10-38, 10-60, 10-94
TWO-REGISTER HARDWARE  . . . . . . . 9-6
TX01/02  . . . . . . . . . . . . . . 10-77
TY.AVL FIELD RETURNED BY DEVTYP UUO  10-15
TY.EHF FIELD RETURNED BY DEVTYP UUO  10-15
TY.GEN FIELD RETURNED BY DEVTYP UUO  10-14
TY.IN FIELD RETURNED BY DEVTYP UUO . 10-15
TY.INT FIELD RETURNED BY DEVTYP UUO  10-15
TY.MAN FIELD RETURNED BY DEVTYP UUO  10-14
TY.MDA FIELD RETURNED BY DEVTYP UUO  10-15
TY.MPX FIELD RETURNED BY DEVTYP UUO  10-15
TY.OUT FIELD RETURNED BY DEVTYP UUO  10-16
TY.RAS FIELD RETURNED BY DEVTYP UUO  10-16
TY.SPL FIELD RETURNED BY DEVTYP UUO  10-15
TY.VAR FIELD RETURNED BY DEVTYP UUO  10-15
TYPE OF JOB  . . . . . . . . . . . . 9-28
TYPE OF MONITOR  . . . . . . . . . . 9-12

UFD COMPRESSOR . . . . . . . . . . . 10-20
UFPGS JSYS . . . . . . . . . . . . . 10-29, 10-31
UGEN UUO . . . . . . . . . . . . . . 1-1
UGETF UUO  . . . . . . . . . . . . . 1-1, 10-91
UJEN UUO . . . . . . . . . . . . . . 10-92
UNASSIGNED MEMORY ADDRESS  . . . . . 4-1
UNDEFINED SYMBOL TABLE . . . . . . . 4-3
UNIMPLEMENTED USER OPCODES . . . . . 1-1
UNIT IDENTIFICATION  . . . . . . . . 10-22
UNIT IDENTIFICATION CODE . . . . . . 10-22
UNIT NUMBER  . . . . . . . . . . . . 10-19, 10-25
UNIT TYPE  . . . . . . . . . . . . . 10-25
UNIVERSAL DATE/TIME FORMAT . . . . . 9-8, 9-30, 10-7
UNIVERSAL DEVICE INDEX . . . . . . . 10-42
UNIVERSAL TIME/DATE FORMAT . . . . . 9-5
UNLOAD TAPE  . . . . . . . . . . . . 10-53, 10-76
UNLOK. UUO . . . . . . . . . . . . . 10-92
UPDATE FILE  . . . . . . . . . . . . 10-28
UPTIME . . . . . . . . . . . . . . . 9-16
UPTIME FOR SYSTEM  . . . . . . . . . 9-14
USAGE FILES  . . . . . . . . . . . . 7-2, 10-6
USAGE JSYS . . . . . . . . . . . . . 7-3, 10-62
                                                           Page Index-40
                                                               16 Jan 84


USER MODE  . . . . . . . . . . . . . 1-2
USER NAME  . . . . . . . . . . . . . 9-20
USER-ENABLED TRAP  . . . . . . . . . 4-4
USER-MODE PROGRAM COUNTER  . . . . . 4-4
USER-MODE WRITE PROTECTION . . . . . 10-72
USESTA FUNCTION OF FRCUUO UUO  . . . 10-32
USETI UUO  . . . . . . . . . . . . . 1-1, 10-29, 10-66, 10-92
USETO UUO  . . . . . . . . . . . . . 1-1, 10-29, 10-66, 10-93
UTPCLR UUO . . . . . . . . . . . . . 10-93
UTRP. UUO  . . . . . . . . . . . . . 10-93
UUO INTERRUPTS . . . . . . . . . . . 1-3
UUO-SIMULATION OPTION OF SET COMMAND  3-1
UUOs IN MACRO PROGRAMS . . . . . . . 2-1
UUOSYM IN MACRO  . . . . . . . . . . 2-1

VALIDATION OF ACCOUNTS . . . . . . . 9-10
VERSION NUMBER . . . . . . . . . . . 4-5
VERSION NUMBER IN FILE SPEC  . . . . 5-2
VERSION NUMBER IN RIB  . . . . . . . 2-3
VERSION NUMBER OF MONITOR  . . . . . 9-7
VERSION NUMBER OF PROGRAM  . . . . . 4-4
VERSION NUMBER, CUSTOMER . . . . . . 9-9
VERSION NUMBER, DIGITAL  . . . . . . 9-9
VERSION NUMBER, MONITOR  . . . . . . 9-9
VESTIGIAL DATA AREA  . . . . . . . . 4-5
VIRTUAL CORE TALLY . . . . . . . . . 9-16
VIRTUAL MEMORY . . . . . . . . . . . 4-1, 10-71
VIRTUAL MEMORY DATA  . . . . . . . . 9-28
VIRTUAL PAGE LIMITS  . . . . . . . . 9-26
VMSER  . . . . . . . . . . . . . . . 9-12

WAIT FOR I/O TO COMPLETE . . . . . . 10-31
WAIT JSYS  . . . . . . . . . . . . . 10-31, 10-94
WAIT STATE NAMES . . . . . . . . . . 9-19
WAIT UUO . . . . . . . . . . . . . . 10-94
WAKE UUO . . . . . . . . . . . . . . 6-7, 10-38, 10-94
WAKEUP CHARACTERS FOR TERMINAL . . . 9-2, 10-45
WATCH BITS . . . . . . . . . . . . . 9-20
WHERE UUO  . . . . . . . . . . . . . 10-94
WILDCARD FILE SPECIFICATIONS . . . . 5-4
WORD NUMBER  . . . . . . . . . . . . 8-1
WORKING SET  . . . . . . . . . . . . 10-58
WRITE FILE . . . . . . . . . . . . . 10-28
WRITE PAGE ACCESS  . . . . . . . . . 4-1, 5-6
WRITE TO OPERATOR  . . . . . . . . . 10-72
WRITE-LOCK . . . . . . . . . . . . . 10-51, 10-80
WRITE-LOCKED . . . . . . . . . . . . 10-24
WRITE-PROTECTED  . . . . . . . . . . 10-23 to 10-24
WRITE-TO-OPERATOR INFORMATION  . . . 9-34
WTY DEVICE . . . . . . . . . . . . . 10-18

XHLLI INSTRUCTION WITH EXTENDED ADDRESSING  8-9
XMOVEI INSTRUCTION WITH EXTENDED ADDRESSING  8-8
XPEEK JSYS . . . . . . . . . . . . . 10-59, 10-74
                                                           Page Index-41
                                                               16 Jan 84


ZERO LINK SWITCH . . . . . . . . . . 2-3

