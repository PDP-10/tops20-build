.! Help file for Data Interchange Library Version 2.1
.!
.! Faciliy: DIL
.! 
.! Edit History:
.! 
.! New_version (1, 0)
.! 
.! Edit (%O'61', '24-Jan-83', 'David Dyer-Bennet')
.! %(  Add a help file for 10/20.  Remove the old release-tape build mode,
.!     which probably doesn't work by now and in any case isn't needed.
.!     This file is new with this edit.
.! )%
.!
.! Edit (%O'65', '26-Jan-83', 'Sandy Clemens')
.! %(  Clean up the 10/20 help file.  FILE: DIL.RNH
.! )%
.! 
.! new_version (2, 0)
.! 
.! Edit (%O'75', '12-Apr-84', 'Sandy Clemens')
.!  %( Put all Version 2 DIL development files under edit control.  Some
.!     of the files listed below have major code edits, or are new
.!     modules.  Others have relatively minor changes, such as cleaning
.!     up a comment.
.!     FILES:  COMPDL.CTL, DIL.RNH, DIL2VAX.CTL, DILBLD.10-MIC,
.!     DILHST.BLI, DILINT.BLI, DILOLB.VAX-COM, DILV6.FOR, DILV7.FOR,
.!     INTERFILS.CTL, MAKDIL.CTL, MASTER-DIL.CMD, POS20.BLI, POSGEN.BLI,
.!     DLCM10.10-CTL, DLMK10.10-CTL
.!  )%
.! 
.! new_version (2, 1)
.! 
.! Edit (%O'141', '1-Jun-86', 'Sandy Clemens')
.!   %( Add DIL sources to DL21: directory. )%
.! 
.! **Edit**

.ps 150
.center;DATA INTERCHANGE LIBRARY VERSION 2.1 HELP FILE
.center;----------------------------------------------
.b
This file gives a brief description of the function and parameters for
each of the available Data Interchange Library routines.  For more
information on the Data Interchange Library see the Data Interchange
Library manual.
.b 2
COBOL calls to the Data Interchange Library routines:
.b
.left margin 4
You should first use DILINI to identify the locations in which status
information will be returned:
.left margin 0
.b
.literal
    DILINI: DILINI-STATUS, STATUS, MSG-ID, SEVERITY

    COBOL CALL: ENTER MACRO ROUTINE-NAME USING ARGUMENT-LIST.
.end literal
.b
FORTRAN calls to the Data Interchange Library routines:
.b
.i 4
FORTRAN CALL: STATUS = RTN (ARGS)
.b 1
Note that STATUS is declared as INTEGER.
.b 2
In the descriptions of the Data Interchange Library routines that
follow, symbolic names are used for the parameters.  The parameters
which have an asterisk (*) in front of them are returned values.  All
of the parameters are one word integers except for those corresponding
to the following symbolic names:
.b
.literal
ACCT   : A 39-character ASCII account
DESCR  : A 16-character ASCII DECnet descriptor
DST-FFD: A three word destination foreign field descriptor
DST-REC: A destination data record
FFD    : A three word foreign field descriptor
FSPEC  : A 39 character ASCII field containing a file specification
HOST   : A 16-character ASCII hostname
INTDAT : 16 ASCII characters containing interrupt data
OBJID  : A 16-character ASCII DECnet object id
OPTDAT : 16 ASCII characters containing optional data
PASSWD : A 39-character ASCII password
RECORD : A data record
SRC-FFD: A three word source foreign field descriptor
SRC-REC: A source data record 
TASK   : A 16-character ASCII DECnet taskname
USERID : A 39-character ASCII userid
.end literal
.b 3
For each Data Interchange Library routine below, the arguments are
listed in the order in which they should be passed to the specified
routine. 
.b 2
I.  Task-to-Task Routines
.b 2
.literal
NFGND: Get information on asynchronous network events or wait for an event
	NETLN, WAIT
NFOPA: Open an active link for the transmission of ASCII data
	*NETLN, HOST, OBJID, DESCR, TASK, USERID, PASSWD, ACCT,
	OPTDAT, WAIT
NFOPB: Open an active link for the transmission of binary data
	*NETLN, HOST, OBJID, DESCR, TASK, USERID, PASSWD, ACCT,
	OPTDAT, WAIT
NFOP8: Open an active link for the transmission of 8-bit bytes of data
	*NETLN, HOST, OBJID, DESCR, TASK, USERID, PASSWD, ACCT,
	OPTDAT, WAIT
NFOPP: Open a passive link
	*NETLN, OBJID, DESCR, TASK, WAIT
NFACC: Accept a connection on a passive link which has been opened by
       a call to NFOPP and which has had a connect event
	NETLN, LTYPE, OPTCNT, OPTDAT
NFRCV: Receive data over a logical link
	NETLN, USIZE, *COUNT, *RECORD, MSGMOD, WAIT
NFSND: Send data over a logical link
	NETLN, USIZE, COUNT, RECORD, MSGMOD
NFREJ: Reject a connection request received on a passive link which
       was opened using NFOPP and which has had a connect event.
	NETLN, REJCOD, OPTCNT, OPTDAT
NFCLS: Disconnect or abort a logical link.
	NETLN, REJCOD, OPTCNT, OPTDAT
NFINF: Get information about a logical link.
	NETLN, TYPE, *COUNT, *RECORD
NFINT: Send an interrupt data message over a logical link.
	NETLN, COUNT, INTDAT
NFRCI: Receive a single interrupt data message over a logical link.
	NETLN, COUNT, *INTDAT
.end literal
.b 3
II.  Remote File Access Routines
.b 2
.literal
ROPEN: Open a remote file
	*FNUM, FSPEC, USERID, PASSWD, ACCT, MODE, DTYPE, RFM,
	RAT, RSIZE, RUNIT
RREAD: Read an ASCII record from a remote file
	FNUM, USIZE, *COUNT, *RECORD
RWRITE: Write an ASCII record into a remote file
	FNUM, USIZE, COUNT, RECORD
RCLOSE: Close a remote file
	FNUM, OPTION
RDEL: Delete a (closed) file
	FSPEC, USERID, PASSWD, ACCT
RSUB: Submit a remote file for remote batch processing
	FSPEC, USERID, PASSWD, ACCT
RPRINT: Print a remote file on the remote system's printer
	FSPEC, USERID, PASSWD, ACCT
.end literal
.b 3
III. Data Conversion Routines  
.b 2
.literal
XDESCR:	Make an FFD
	*FFD, RECORD, SYSTEM, BYTSIZE, OFFSET, BIT-OFFSET, DATA-TYPE,
        LENGTH, SCALE
XCGEN:	Convert given two FFD's
	SRC-FFD, DST-FFD
XCVST:	Convert strings given two FFD's
	SRC-FFD, DST-FFD
XCVFB:	Convert fixed-point binary values given two FFD's
	SRC-FFD, DST-FFD
XCVFP:	Convert floating-point values given two FFD's
	SRC-FFD, DST-FFD
XCVDN:  Convert display numeric values given two FFD's
	SRC-FFD, DST-FFD
XCVPD:  Convert packed decimal values given two FFD's
	SRC-FFD, DST-FFD
XCPDDN: Convert a packed decimal value to a display numeric value
	given two FFD's
	SRC-FFD, DST-FFD
XCPDFB: Convert a packed decimal value to a fixed point binary value
	given two FFD's
	SRC-FFD, DST-FFD
XCDNPD: Convert a display numeric value to a packed decimal value
	given two FFD's
	SRC-FFD, DST-FFD
XCDNFB: Convert a display numeric value to a fixed point binary value
	given two FFD's
	SRC-FFD, DST-FFD
XCFBPD: Convert a fixed point binary value to a packed decimal value
	given two FFD's
	SRC-FFD, DST-FFD
XCFBDN: Convert a fixed point binary value to a display numeric value
	given two FFD's
	SRC-FFD, DST-FFD
CVGEN:	Convert given detailed descriptions of both fields
	SRC-REC, SRC-SYSTEM, SRC-BYTE-SIZE, SRC-OFFSET, SRC-BIT-OFFSET, 
	SRC-DATA-TYPE, SRC-LENGTH, SRC-SCALE, *DST-REC, DST-SYSTEM,
	DST-BYTE-SIZE, DST-OFFSET, DST-BIT-OFFSET, DST-DATA-TYPE,
	DST-LENGTH, DST-SCALE
.end literal
